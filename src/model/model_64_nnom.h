#ifndef MODEL_64_NNOM_H
#define MODEL_64_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_64_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (50)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (1536)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (160)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)
#define APP_ACTIVITY_RECOGNITION_FFT (1)
#define APP_ACTIVITY_RECOGNITION_FFT_SIZE (512)
#define APP_ACTIVITY_RECOGNITION_FFT_SKIP_IMAG (1)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.2069928239055942f, -0.2069928239055942f, 0.0f, 0.2068179864931189f, -0.0f, 0.25f, -0.5f, 0.25f, 0.4490699651581907f, -0.2071676613180694f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_3_KERNEL_0 {2, 1, -4, 0, 14, 8, 19, 20, 49, 39, 21, 8, -12, -3, -10, 24, 7, 5, -4, -1, 2, -30, -9, 47, 1, 22, 9, -25, 7, -5, -3, 7, 10, 33, -3, 40, -2, 2, 5, -1, 0, 2, -6, 15, -1, 18, -6, -16, 21, 4, 11, -5, 1, 4, 4, -2, -13, 10, 3, -4, -5, 1, -8, 4, -1, -2, -7, 8, -9, 29, -6, 77, 2, 11, 15, -18, -9, 2, -21, 13, 12, 31, -7, -68, -6, 13, 17, -20, 0, -2, -3, -6, 59, -60, 6, -8, -12, -3, -20, -7, 67, 74, -14, -8, -4, 5, 2, 4, 11, -17, 13, -36, -6, -37, 0, -21, -2, -10, 5, 7, -58, -6, 1, -8, 7, -7, 9, 3, -40, -3, 2, 1, 1, -11, 0, 14, -40, 35, -52, 29, -19, -7, -10, -7, 20, -25, -34, 63, 32, -45, -6, 10, 1, 1, 7, -5, -40, -47, -32, -56, -12, 4, 12, -2, 4, -7, -13, -1, 65, 28, 53, 22, 21, -1, 20, 2, 5, 7, -4, -9, -14, -2, -3, 18, 0, 0, 12, -1, -10, 72, -5, 1, 62, -6, -47, -12, 7, 9, 6, 2, -70, 0, 45, 3, 4, 3, 7, -8, 8, 75, 1, -50, -1, 22, 9, -6, 2, 1, 8, 2, -3, 2, 8, 3, -4, -30, 11, -79, 16, -16, 27, -27, -47, 39, -4, -4, 5, 13, 3, 0, 32, -91, -4, -4, 3, 7, 4, 0, 19, -15, 6, -13, -22, 31, 19, -40, -5, -11, 0, 31, -9, -14, 5, 3, 5, 0, -4, 2, -3, 0, 3, 9, -7, -12, -103, 21, -7, -2, -5, 31, -2, -9, -6, 1, -64, -18, -20, 11, -4, -10, 29, -7, -88, 8, 62, 0, -12, 6, 6, -9, -42, -10, -44, -4, -27, 4, 17, -1, 53, -6, 35, 3, 5, 7, 5, -6, 17, 1, -13, 2, -20, 4, 90, 9, 5, -2, 4, -4, 12, -5, 54, 1, 23, -9, 4, 2, 18, -11, -54, -11, 5, 4, 0, -2, 23, -1, -8, -14, -3, -2, 0, 11, 0, -2, -3, 2, 3, 6, 6, 12, -17, -65, 20, 64, -2, -2, 0, -11, 3, 0, -3, 0, -14, 75, -9, 70, -9, 7, -12, -14, 0, -11, 20, -7}

#define TENSOR_CONV2D_3_KERNEL_0_DEC_BITS {9}

#define TENSOR_CONV2D_3_BIAS_0 {-75, -81, -83, 23, -73, -14, -16, -67, -51, -39, -42, -66, -17, -58, -2, -74, -5, -9, -73, -3, -23, -45, -65, -78, -18, -3, -23, -78, -71, -49, -31, -66}

#define TENSOR_CONV2D_3_BIAS_0_DEC_BITS {5}

#define CONV2D_3_BIAS_LSHIFT {4}

#define CONV2D_3_OUTPUT_RSHIFT {7}

#define TENSOR_CONV2D_4_KERNEL_0 {}

#define TENSOR_CONV2D_4_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_4_BIAS_0 {11, 3, -20, 23, 0, -127, -4, 40, 11, 18, 63, 40, -60, -7, -1, 27, -38, 10, 40, 29, 5, 8, 8, 17}

#define TENSOR_CONV2D_4_BIAS_0_DEC_BITS {6}

#define CONV2D_4_BIAS_LSHIFT {2}

#define CONV2D_4_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_5_KERNEL_0 {-7, -32, 8, -36, -9, -12, -7, -33, -15, -1, -43, -20, -14, 12, 16, -13, -3, 13, 2, -3, -26, -21, -23, 4, -10, 6, -1, -33, 16, 9, 12, -17, -35, -17, 3, -19, -37, -16, 14, -29, -8, -41, -29, -18, 6, -11, 12, 16, 4, -7, 19, 11, -65, -19, -12, 13, 8, -5, -80, 9, 8, 4, 6, -13, -16, 6, 29, -50, 7, 15, -4, 10, 11, -15, 4, -17, 15, -11, -5, -15, 10, 12, -24, -44, -6, 14, 9, -48, 10, -23, 12, -3, 2, 9, 24, 1, -11, -7, 5, -18, -13, 2, 8, 5, -19, -2, 8, -12, -48, -13, -13, 6, 9, 0, 1, -7, -4, -18, 6, -1, -6, -11, -16, -24, -11, -7, -18, 1, -51, -56, -8, 8, -5, -12, -14, 3, -11, -7, -15, -37, 13, -1, 26, -10, 0, -8, 3, 4, -16, -28, 9, 1, -2, 32, 8, 20, 4, 2, -5, 4, -26, -6, 13, 14, 22, 3, 3, 12, -4, -25, 1, 6, 35, 0, -10, -2, 4, 27, 1, 11, 2, -9, -1, 1, 4, 21, 11, 38, -13, -1, -1, -16, 4, 16, -7, 5, 15, 10, 16, -16, -34, -28, 4, -17, -9, -10, 9, -32, -28, -26, -38, -37, 19, 1, -5, -9, -7, -3, 9, 11, -10, -20, 12, 2, 2, 14, -2, 6, -6, 1, -4, 3, 5, -3, 6, -34, 3, 3, 3, 1, -7, -27, -4, 21, 3, -80, -4, 2, -6, 7, 6, 22, -30, -10, -14, 17, -70, -18, 27, 19, 19, -8, 4, 0, -1, 5, 22, 5, 28, -29, -3, -7, 7, 30, -6, 11, -11, 10, -13, 9, -1, 9, -4, 46, 43, -32, 0, -15, -8, 8, 0, -11, -5, -10, -9, 0, -15, 35, -15, 13, 6, -1, 3, 2, -20, -13, -17, 18, 21, -4, 19, -9, 3, 18, 19, 10, 20, -32, 15, 6, -6, 2, 23, 11, 7, 8, -3, -12, -24, 27, 2, 20, 9, -7, -9, -8, -13, -5, -7, 15, 10, -34, 5, -24, -7, 5, -8, -29, -44, 14, 9, 3, -21, -19, -19, -33, -25, -32, -22, -23, -5, -9, -29, 13, 5, -34, 5, 3, -15, 21, 7, 13, -9, -1, -14, -3, -60, 25, 21, 43, -1, 0, 10, 8, 7, 0, -3, 0, 1, -6, -12, -5, 16, -26, 5, 1, -9, -8, 1, 3, 1, 4, 10, -44, -4, -5, -6, -19, 1, -8, 4, -14, -8, 13, -1, -9, -19, -24, -6, 9, -6, 10, -7, 15, 6, -23, -17, -42, -33, -14, 3, -7, 1, 14, -4, -2, 3, 13, 0, -4, -7, 8, -5, 4, 2, -16, -8, -11, -4, 3, -10, -29, -29, -28, 12, -29, -11, -5, 27, 8, -25, 1, -11, -4, 0, -43, -4, -38, 5, 13, 11, -22, 3, 4, -7, -32, -12, 4, 8, 7, 0, -5, 19, 6, 25, -7, 15, -5, 18, 7, 7, 1, 12, -6, -7, -29, 8, 6, 11, -19, 13, -10, 9, 1, 14, 4, -6, 8, 7, -3, 6, -4, -7, -11, 14, -15, 15, -6, 11, -18, 7, 17, -4, 5, -23, -2, -2, -5, 17, 11, -3, -22, -3, -21, -2, -22, -11, -3, 15, -5, 5, -2, -16, 12, 2, -22, -20, -30, -21, 1, -22, -18, -1, 19, 2, 11, -37, -30, -10, -35, 22, -28, -15, -80, -20, 11, 3, -2, -12, -24, -2, -36, -14, -20, -2, 3, -15, -33, -5, -23, 0, -18, -12, -24, 3, -18, -9, -34, 2, -4, -4, -26, 4, 7, 13, -41, -5, -15, 20, 11, -4, 5, -10, -4, -22, 10, -6, 6, -6, -5, 3, -19, -22, 12, 0, 12, -14, 22, -25, -2, -13, 8, -14, 0, -13, 2, -8, 6, 7, 9, 5, -8, 2, 2, 13, 5, -23, -2, 1, -9, -8, -3, 0, 12, 14, -16, -2, -8, -34, 19, -1, 4, 16, -41, -2, 0, -12, 18, 4, 4, -53, -14, 6, -17, -50, 36, -1, 5, 9, 2, 11, 3, -37, 8, -32, 3, 4, -11, -6, 6, -44, -7, 0, -49, -25, -13, 2, -8, 16, -1, -11, -62, -39, -23, -24, -28, 1, -13, -9, 0, 5, -36, -1, -9, -4, 14, 20, 0, -24, -4, 14, 4, -42, 12, 11, 2, -17, -28, 2, 17, -32, -42, 3, -25, -3, -40, 7, 1, 26, 35, 6, -33, -13, -4, -2, 6, -47, 15, 8, 11, 4, -18, -37, -13, -37, -22, -11, -35, -7, -42, -14, 0, -19, -28, 17, -20, -14, 11, 1, 3, -24, 11, -11, -43, 24, 9, 17, -8}

#define TENSOR_CONV2D_5_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_5_BIAS_0 {-31, 16, 110, 64, 41, 23, 15, 4, -47, -88, -32, 14, 7, -1, 21, -4}

#define TENSOR_CONV2D_5_BIAS_0_DEC_BITS {6}

#define CONV2D_5_BIAS_LSHIFT {0}

#define CONV2D_5_OUTPUT_RSHIFT {5}

#define TENSOR_DENSE_1_KERNEL_0 {18, 36, -17, 11, 43, 13, 44, 51, 13, 18, -48, 8, 32, 34, -64, -26, -5, -49, -10, 2, -11, 3, -52, -42, 12, 57, -15, 70, 0, -78, 35, 3, -46, -8, 30, 0, -43, -24, 1, -8, 44, 31, -43, -29, 3, -26, -34, -48, 4, -5, 26, 80, 23, 0, -23, 5, -8, -22, 97, -22, -21, 9, -38, -88, -8, 15, -3, 33, -76, 91, 38, -76, -40, -39, 16, -20, -20, 39, -72, -26, 10, 55, 26, 4, 14, -41, 38, -59, -6, -30, 12, 5, 10, -26, -24, -24}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {7}

#define TENSOR_DENSE_1_BIAS_0 {-52, -77, 54, 61, -5, -2}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {6}

#define DENSE_1_BIAS_LSHIFT {1}

#define DENSE_1_OUTPUT_RSHIFT {5}


/* output q format for each layer */
#define CONV2D_3_INPUT_OUTPUT_DEC 0
#define CONV2D_3_INPUT_OUTPUT_OFFSET 0
#define CONV2D_3_OUTPUT_DEC 2
#define CONV2D_3_OUTPUT_OFFSET 0
#define RE_LU_3_OUTPUT_DEC 2
#define RE_LU_3_OUTPUT_OFFSET 0
#define MAX_POOLING2D_2_OUTPUT_DEC 2
#define MAX_POOLING2D_2_OUTPUT_OFFSET 0
#define CONV2D_4_OUTPUT_DEC -1
#define CONV2D_4_OUTPUT_OFFSET 0
#define RE_LU_4_OUTPUT_DEC -1
#define RE_LU_4_OUTPUT_OFFSET 0
#define MAX_POOLING2D_3_OUTPUT_DEC -1
#define MAX_POOLING2D_3_OUTPUT_OFFSET 0
#define CONV2D_5_OUTPUT_DEC 0
#define CONV2D_5_OUTPUT_OFFSET 0
#define RE_LU_5_OUTPUT_DEC 0
#define RE_LU_5_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_DEC 0
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 2
#define DENSE_1_OUTPUT_OFFSET 0
#define SOFTMAX_1_OUTPUT_DEC 7
#define SOFTMAX_1_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {0};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_3_input_config = {
    .super = {.name = "conv2d_3_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_3_kernel_0_data[] = TENSOR_CONV2D_3_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_3_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_dec[] = TENSOR_CONV2D_3_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_kernel_0 = {
    .p_data = (void*)tensor_conv2d_3_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_3_bias_0_data[] = TENSOR_CONV2D_3_BIAS_0;

const nnom_shape_data_t tensor_conv2d_3_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_3_bias_0_dec[] = TENSOR_CONV2D_3_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_3_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_3_bias_0 = {
    .p_data = (void*)tensor_conv2d_3_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_3_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_3_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_3_output_shift[] = CONV2D_3_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_3_bias_shift[] = CONV2D_3_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_3_config = {
    .super = {.name = "conv2d_3"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_3_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_3_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_3_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_3_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_2_config = {
    .super = {.name = "max_pooling2d_2"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_4_kernel_0_data[] = TENSOR_CONV2D_4_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_4_kernel_0_dim[] = {4, 2, 32, 24};
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_dec[] = TENSOR_CONV2D_4_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_kernel_0 = {
    .p_data = (void*)tensor_conv2d_4_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_4_bias_0_data[] = TENSOR_CONV2D_4_BIAS_0;

const nnom_shape_data_t tensor_conv2d_4_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_4_bias_0_dec[] = TENSOR_CONV2D_4_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_bias_0 = {
    .p_data = (void*)tensor_conv2d_4_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_4_output_shift[] = CONV2D_4_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_4_bias_shift[] = CONV2D_4_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_4_config = {
    .super = {.name = "conv2d_4"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_4_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_4_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_4_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_4_bias_shift, 
    .filter_size = 24,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_pool_config_t max_pooling2d_3_config = {
    .super = {.name = "max_pooling2d_3"},
    .padding_type = PADDING_VALID,
    .output_shift = 0,
    .kernel_size = {2, 1},
    .stride_size = {2, 1},
    .num_dim = 2
};
const int8_t tensor_conv2d_5_kernel_0_data[] = TENSOR_CONV2D_5_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_5_kernel_0_dim[] = {2, 1, 24, 16};
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_dec[] = TENSOR_CONV2D_5_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_kernel_0 = {
    .p_data = (void*)tensor_conv2d_5_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_5_bias_0_data[] = TENSOR_CONV2D_5_BIAS_0;

const nnom_shape_data_t tensor_conv2d_5_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_5_bias_0_dec[] = TENSOR_CONV2D_5_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_bias_0 = {
    .p_data = (void*)tensor_conv2d_5_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_5_output_shift[] = CONV2D_5_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_5_bias_shift[] = CONV2D_5_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_5_config = {
    .super = {.name = "conv2d_5"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_5_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_5_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_5_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_5_bias_shift, 
    .filter_size = 16,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_1_config = {
    .super = {.name = "global_max_pooling2d_1"},
    .output_shift = 0,
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {16, 6};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};

const nnom_softmax_config_t softmax_1_config = {
    .super = {.name = "softmax_1"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_1_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[13];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_3_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_3_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(maxpool_s(&max_pooling2d_2_config), layer[2]);
	layer[4] = model.hook(conv2d_s(&conv2d_4_config), layer[3]);
	layer[5] = model.active(act_relu(), layer[4]);
	layer[6] = model.hook(maxpool_s(&max_pooling2d_3_config), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_5_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_1_config), layer[8]);
	layer[10] = model.hook(dense_s(&dense_1_config), layer[9]);
	layer[11] = model.hook(softmax_s(&softmax_1_config), layer[10]);
	layer[12] = model.hook(output_s(&output0_config), layer[11]);
	*state = model_compile(&model, layer[0], layer[12]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_64_NNOM_H