#ifndef MODEL_37_NNOM_H
#define MODEL_37_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_37_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.2069928239055942f, -0.2069928239055942f, 0.0f, 0.2068179864931189f, -0.0f, 0.25f, -0.5f, 0.25f, 0.4490699651581907f, -0.2071676613180694f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_4_KERNEL_0 {33, -11, 40, 18, 4, -13, -12, -16, -32, -17, 16, 15, -1, 42, -12, 41, -7, -1, -21, -11, -27, -65, 2, -48, 35, 2, -46, 51, -13, -17, 22, -23, 36, -3, 51, 14, 29, 40, -19, -63, -12, 38, 10, 27, 6, -38, 8, 37, 40, 21, -13, 10, -17, -29, -34, 8, -5, 45, 31, -36, 33, 2, -22, 25, -38, 6, 50, 34, -9, 27, -46, -31, -43, 17, -34, -5, -3, -3, -17, 36, -11, 31, 63, 15, 19, -8, 10, 18, -23, -16, -42, -6, -58, -33, -42, -12, 1, 34, -24, -7, 28, -2, 34, -25, 20, -16, -37, 29, 10, 58, 11, 43, 3, -34, 11, -20, 11, 2, 37, -23, 51, -46, -27, -3, -55, 1, -1, 2, 30, -37, -17, -25, 16, -14, -14, 24, -8, 6, -28, -1, 37, 4, -70, 32, 26, 55, 34, 5, 4, 14, 10, 35, 16, 14, -6, -20, -14, -86, 4, 1, 4, 41, -8, 44, 8, -5, 17, -60, -3, 37, 48, -29, 16, -32, -22, -12, -31, 11, 33, 3, -10, 7, -13, -12, 6, -28, 26, 16, -30, 11, -40, 70, -62, 0, 47, 10, 10, 11, 16, 22, 29, -25, 3, -4, 51, -19, 78, -19, 57, -10, 40, 4, 38, 25, 3, 24, -33, 14, -9, -12, 6, 30, -16, -42, -28, 27, 51, 31, -21, -36, -19, -25, -20, 36, 20, -2, 16, 45, -8, 61, 28, -8, -7, -9, -39, -8, -22, 41, -54, 40, -58, -7, -52, 31, 14, -3, 26, -1, 44, -15, -7, -1, -43, -15, -3, 45, -3, 45, -9, -26, -5, -42, 18, -33, 12, 59, 11, 16, 8, 19, 1, 28, -8, 20, 5, 33, -10, 28}

#define TENSOR_CONV2D_4_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_4_BIAS_0 {-2, -27, -70, -64, -66, -96, -37, 14, 10, -9, -14, -15, 1, -21, -72, -21, -49, -25, -31, -28, -29, -91, -25, -10}

#define TENSOR_CONV2D_4_BIAS_0_DEC_BITS {9}

#define CONV2D_4_BIAS_LSHIFT {6}

#define CONV2D_4_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_5_KERNEL_0 {}

#define TENSOR_CONV2D_5_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_5_BIAS_0 {4, 4, -7, -60, -29, 13, 23, 19, -60, 15, -68, -5, 12, 23, 15, -29, 16, 20, -32, -21, -3, 2, 14, -1}

#define TENSOR_CONV2D_5_BIAS_0_DEC_BITS {7}

#define CONV2D_5_BIAS_LSHIFT {6}

#define CONV2D_5_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_6_KERNEL_0 {16, -1, 5, 12, 14, 17, 32, -5, 0, -25, -6, -27, 31, 30, 25, 14, -29, 11, -21, 23, -7, 6, 28, 22, 40, -33, 16, -12, -27, -30, 45, 20, -2, 9, -4, 22, -20, 12, -10, -10, 16, 3, 16, 14, -71, 39, -8, -15, 7, -21, 14, 7, 0, 14, -8, 4, 34, 10, 14, 13, -9, 2, -13, 7, 5, 11, 17, 19, -8, -13, -22, 21, -10, 32, 15, 10, -9, 32, -1, 7, 17, 8, 11, 10, 13, 2, -19, 8, 17, -13, 7, -7, 57, 16, -34, 22, 38, -6, -12, -28, -39, -9, 11, 46, -39, 27, -28, -17, -26, -19, -16, 6, 40, -22, -58, -18, -103, 17, 41, -34, -37, 16, 4, -41, 26, -2, -12, -11, -25, 23, -30, -6, 17, 16, 17, -15, 34, -58, -61, -48, -36, -17, 41, 5, 5, 2, 0, 27, 47, 3, -33, -31, 15, -6, 31, 4, 3, 12, 22, 4, 10, 17, 15, 2, -46, 3, 39, 22, 26, -2, 16, -16, -23, 26, 26, -7, -2, 3, 28, -9, -2, 12, 9, -38, -34, 36, 18, -6, -23, 14, -14, -28, -2, -13, 1, -6, 9, 2, -15, -18, 5, 0, -13, -23, -13, -3, -1, -2, -26, 1, -4, -3, 0, -23, -13, 2, -18, -2, -12, -6, -21, -1, -26, -18, 5, -4, 4, -23, 7, -27, 10, -2, 12, 4, -13, -8, -2, 5, 8, -1, 5, 6, -9, -10, 4, 20, 14, 15, -32, 15, -13, 9, 6, -30, -20, 8, -7, 9, -12, -25, -79, 20, 18, -40, -38, 32, -6, -18, 2, -8, 23, -3, -17, -11, -26, -4, -22, -43, -16, -7, 18, -59, 28, -33, 0, 25, 11, -72, -3, -16, 10, 5, -15, -12, -7, 10, -7, 14, -1, -11, -16, -13, 2, -26, 4, -10, -14, -23, -22, 4, 2, -11, -25, -20, 2, -9, -7, -12, -10, -25, -25, 0, -3, -12, 9, 14, -12, -5, -14, 7, 1, -9, -2, 5, 15, 4, 9, -14, 5, -54, 21, 30, 3, -9, -27, 28, -17, -35, 22, 28, 10, 5, 6, -32, -27, -4, -24, -16, 3, -5, 8, -5, -5, -7, 11, 11, 31, -7, 38, -17, -13, -9, 18, -4, 34, 2, -21, 41, 16, 9, 48, 19, -11, 1, -25, 12, 14, 7, -22, -4, 12, -17, -20, -24, -11, 44, -6, -4, 2, -22, 9, 18, 32, -2, 3, 27, 13, 27, 6, -33, 4, 20, -34, -8, 22, 6, -8, -8, -9, 18, -16, -42, 2, -35, -14, -1, 16, -16, 3, 0, 30, 31, -14, -26, -13, -13, -7, 2, -27, -21, -11, 12, -9, -5, -7, 0, 2, 4, 9, 8, 17, -14, -8, -15, -17, 5, -32, -9, 5, -20, -19, 2, 25, -18, -31, -12, -29, 9, -8, -29, -14, 3, -21, 8, 22, 26, -13, 9, 23, 5, 7, -73, -3, -43, -7, 16, 4, 4, 35, -36, -37, -39, 8, 36, 1, -85, -53, 34, 12, 8, 6, 22, 3, 25, 12, -39, -7, -21, -61, -36, -32, 37, -12, 15, 1, 1, -43, -39, 22, -15, 25, 34, -7, 24, 68, -27, 8, -16, -3, -58, -9, -34, 6, 23, 35, 26, -13, -46, -46, -1, 12, -3, 16, 41, -37, -17, -7, -15, -24, 8, 11, 17, 19, 6, -12, -5, -5, -59, -31, -2, -53, 12, -25, 20, -29, 2, -9, 15, 25, 11, -38, -13, -75, -28, 6, -46, 12, 32, 13, 0, 10, 33, 13, -42, -34, 20, 18, 15, 36, 15, -15, 12, 17, 28, 23, 2, -28, 29, 33, 0, -7, -22, -7, -31, -45, -9, -29, -45, 2, 6, 5, -2, -9, -12, 35, 13, 2, -49, 15, -5, -28, -19, -35, -42, 17, -4, -9, -20, 12, -12, -13, 27, 28, -12, -32, 0, -12, 51, 1, 7, 12, -14, 20, 24, 16, 6, -64, -37, 17, 7, 15, 28, 16, 24, -2, 9, -34, -2, 23, 29, 23, 31, -15, -15, -15, -8, -1, 6, 17, 37, 0, 20, 3, 16, -8, 3, 21, -13, 12, -3, -39, 31, -27, 13, 2, 54, 14, -55, 38, 42, -9, 33, -31, 4, -4, -4, -29, -30, -10, -6, 16, -2, -1, -36, -27, -12, 12, -3, 26, 16, 57, -44, -32, -4, 8, -48, -33, 3, 18, 0, 26, -46, 13, 30, -51, -1, 12, -8, 10, -24, 12, 8, 32, -48, 26, -2, -48, -7, -7, 20, 31, -1, 31, 9, 21, -4, -2, 11, -36, -8, -2, -29, -20, -34, 17, -13, 38, 27, 14, 8, 1, 3, -28, -3, 61, -55, 35, -7, 5, -26, -10, 3, 12, -12, 26, -30, -13, -31, -1, -7, 2, 12, -10, -69, -1, 18, 3, 14, -88, 19, 18, -2, 15, -27, 2, 23, -29, -70, -27, 18, 16, 28, 17, 16, -53, -31, 3, -36, -2, 32, 18, 26, -3, -37, 0, 2, -10, 0, 9, 14, -19, -7, 2, -18, -11, 25, -26, 31, -10, -6, 7, -2, -48, 0, -23, -9, -32, 24, 0, 27, 11, 15, 1, 36, 12, 22, -7, 6, 13, 6, 18, 31, 0, -27, -26, -9, 16, 31, 12, 10, -29, 36, 3, -37, -39, 4, 11, -24, -20, -6, 17, -6, 9, -29, -43, 17, 9, 16, -11, -73, -58, 13, 15, 14, -37, 20, 9, 3, -9, 20, -8, 12, -8, -2, -1, -3, -25, 0, -11, 23, -20, -29, 31, -30, 17, -6, -5, 33, 47, -15, -14, 21, -59, 22, -16, -31, -26, 23, -25, -33, -36, 27, -68, 33, -32, 11, 14, -18, 4, -86, -29, -37, 18, 34, 2, 20, -30, -27, -2, -38, -6, -12, -7, -24, -60, 10, -55, 27, -7, 17, -10, -11, -10, -11, -15, 3, -13, 29, 23, 35, -25, 3, -15, 22, 17, -16, -13, -39, 29, 17, -2, -10, 21, 25, -51, 18, 4, -40, -3, -11, -64, -6, -19, -22, -14, -4, 9, 11, 43, -20, -21, 18, 13, 28, 38, 16, 19, -16, -34, 20, 20, 23, 32, 25, 19, 10, -7, 17, -12, 11, -6, -18, 8, -75, -31, 42, 4, 32, 11, 8, -59, 20, 4, -16, 33, -39, 25, -15, -36, 27, 6, 4, 6, -1, -15, -7, 5, -1, -9, -12, 28, 17, -14, 19, -51, 2, -10, 15, -5, -54, -21, -41, -41, 5, -24, -22, 34, -1, 7, -41, -14, 26, 34, 11, 7, 5, -42, -66, -31, -14, 36, 32, -7, -44, -44, -33, -55, 10, -15, -18, -17, -45, 3, -71, -20, -22, 13, 7, -16, -23, -84, -26, 5, -3, -17, 0, 4, -17, -78, -80, -8, -10, -3, -57, 20, 17, 14, 27, -22, -35, -35, -10, -8, 1, -8, 2, -30, 0, -12, -51, 34, 14, -3, 37, 17, 0, 13, -3, 8, 27, 14, -3, 24, 14, -41, -49, -18, 18, 8, 23, 8, 30, -6, -46, -22, 5, -19, -18, 30, -13, 35, 14}

#define TENSOR_CONV2D_6_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_6_BIAS_0 {32, -39, 47, -68, -47, 16, -6, 30, 14, -1, 39, 40, 50, -56, 65, -6, -39, -32, 25, 31, -120, 53, 43, 23}

#define TENSOR_CONV2D_6_BIAS_0_DEC_BITS {8}

#define CONV2D_6_BIAS_LSHIFT {3}

#define CONV2D_6_OUTPUT_RSHIFT {7}

#define TENSOR_CONV2D_7_KERNEL_0 {21, -10, -4, -10, 15, 10, 9, -12, -12, 14, 30, 31, 1, -26, -23, -56, -4, -12, 0, -17, -31, -64, -10, -38, -38, -28, 22, -17, 13, -14, 6, -16, -6, 1, -18, 17, 22, -13, 17, -14, -29, -19, -31, 32, -37, 10, -4, 4, -15, 6, -53, -9, 9, -35, -4, -14, 13, -14, 25, 9, 21, -38, -25, -47, -13, 10, -1, -37, -7, 24, -29, -9, -33, -9, 22, -14, -5, -81, 1, -16, -23, -5, -67, 0, -55, 11, 2, -47, -50, -25, -34, -21, 2, 5, 28, 24, -12, 5, -40, 15, -15, -38, 7, -29, -5, -19, 15, -1, -13, 4, -99, 29, 0, 15, 7, -20, 11, 20, -19, -22, -38, 6, -40, -20, -8, -12, 2, -15, 9, 13, 24, 17, -19, 16, 17, 12, 6, -8, 6, -47, 18, -30, 5, 3, -6, -18, 16, 8, 1, 23, 5, 9, -16, -45, -11, -1, 8, -64, -16, -82, 9, -76, -17, -29, -13, -28, 22, -30, -10, -64, -22, -11, -7, 13, 3, -14, 0, -15, 2, 27, 12, -74, -16, -4, -88, -82, -24, -1, 34, -39, 38, -41, 13, -34, -1, 1, 3, 18, 19, -27, 3, -22, 29, 41, 7, -23, -44, -54, -32, -42, 0, -7, -58, 3, 9, -13, -57, -68, 22, -34, 1, -14, 30, -44, -2, -2, -37, -5, 11, -15, 7, -58, -14, 0, -3, 14, -44, 24, -24, 29, -20, -12, -16, 4, -6, -13, -4, -14, 2, 10, -4, -4, 1, -11, 1, -17, 6, -19, 1, -11, -13, -4, -12, -9, -14, -6, -11, -15, -2, -5, 9, 0, -5, -1, -12, 8, -18, -12, -7, -5, 9, 0, -3, -5, -4, -1, 4, -7, 0, -51, 31, 13, -1, 27, -1, -34, -23, 0, 0, 50, 14, -18, -18, -41, -5, -11, -7, 14, -13, 6, 3, -13, -68, -31, 6, -17, 2, -39, 5, 2, -10, -3, -8, -49, -17, 5, 15, 5, 7, -51, -19, 24, -48, 10, -53, 12, 17, -15, -73, -9, -12, -42, -3, -25, 13, -29, 38, 13, -6, -37, 5, -39, 20, 1, 4, -24, -2, -24, -58, -8, -54, -6, 16, -6, -7, -12, 13, -4, -8, 1, 19, -13, -24, 14, -4, 10, -18, -4, 19, -22, -53, -3, -5, 18, -42, -27, 22, -62, 4, -9, -26, 11, 6, 16, -89, -52, -26, 7, 21, 6, 30, -9, -19, 4, -77, 19, 31, 23, 13, -33, -31, 7, -3, 14, 0, 6, 12, 21, -7, -5, -6, -30, 8, 6, 28, 6, 5, 31, 5, -57, 15, -10, -37, -2, 14, -2, 2, 13, 1, 4, -59, 22, -34, -16, -49, -20, -80, -29, 3, 21, -62, -32, -73, 14, -67, -7, 11, -28, 18, 8, 16, 17, 3, 28, -9, 7, 42, -27, 15, -26, 24, -3, 19, -67, 8, -42, -19, -29, -11, 25, -8, -13, -9, -16, 0, -10, 9, -4, -3, -4, -8, -1, -1, -5, -12, -8, -3, 8, -18, -7, -10, -14, -17, -14, -11, -20, -1, -2, 0, -6, 10, 3, 9, 8, -5, 2, -11, 5, -15, 10, -1, -15, -13, 2, -17, 8, 3, 0, 4, -14, -41, -16, 16, -36, 9, -20, 14, -3, 32, 21, 17, -2, 15, -3, 9, 8, 19, -17, 7, -46, -41, -21, -55, 9, 15, -19, -5, -6, -5, 37, 9, 5, 30, -17, -18, -4, -16, 16, -30, -38, 5, -32, -3, -18, 28, 11, 20, 11, 17, 21, 21, -32, 9, -42, 8, 5, 8, -9, 12, 12, 22, -1, -38, 5, -38, 4, -28, -47, 6, -82, 0, -26, 18, -32, 6, 2, 9, 10, -5, -3, -7, 7, 11, -24, 2, -67, -23, 17, -27, -12, 5, -31, -10, -47, 6, 7, -13, -1, -9, -2, 8, -3, -63, -12, 5, 9, -44, -4, -43, -8, 4, 8, -23, -33, 12, 17, 6, -50, 2, -18, -29, 8, 3, 19, 15, 13, 26, -1, 51, -20, 23, -34, 36, -34, 4, -22, 2, -58, -55, -18, -23, -40, 18, -16, 4, 5, -6, 32, -21, 4, -63, 28, -42, -37, 7, 8, -10, -20, 23, -60, -27, -18, -12, 23, -12, -24, 0, -44, -63, -29, -7, -9, -3, -12, 3, -14, 33, 11, 26, -67, 14, -34, 20, -13, 28, -40, -51, -5, 4, -9, -67, -20, 14, -27, 4, -28, -3, -3, 11, -20, 39, 16, 0, 23, 30, 0, -10, -4, -31, 10, -19, -21, -49, 15, 11, -20, -11, 8, 0, 22, -1, -33, 12, 21, 7, 30, -5, -8, -28, 11, 27, 10, -8, 4, -2, -26, -20, -10, 11, 5, -29, 3, 3, -33, 11, -22, 3, 3, 34, 6, 20, -20, -6, 1, 8, 6, 20, -15, 15, 0, 6, -20, -49, 14, 8, -14, 1, -4, 2, 18, 9, -8, 23, -19, -34, -1, 8, 18, 5, -27, 30, -21, 25, -15, 23, 14, 2, 8, -33, 13, 3, 9, 14, -55, 1, 21, -8, -4, 2, -19, -59, -7, 9, 15, -13, -8, 9, 18, -16, -38, -14, 10, -52, -21, 7, -20, -8, -1, 3, -21, 29, -13, -39, 4, 8, 20, 20, -9, 25, -1, 19, -10, -13, 8, -17, 12, 23, -15, -4, 14, 6, -1, -56, -26, -22, -18, -27, 9, -38, -47, -30, 21, -57, -73, 18, -12, -11, -24, 4, -11, 36, 1, 5, 11, -10, -13, 6, 27, -99, -85, 24, -17, 35, 12, -33, -34, -21, -73, -58, -47, -2, -28, 5, -29, 1, -12, 10, 15, -10, -12, -17, -11, 8, 21, -21, -44, -34, -25, -72, -14, 20, -5, -8, -104, 16, -74, -26, -42, 21, -45, -6, -4, -5, -49, 13, 4, 4, 15, 13, -21, -12, -45, -12, -17, 14, 24, -55, 34, -35, 27, 2, 1, -18, -56, -9, 8, -3, -22, 4, -16, -37, 5, -6, 11, -39, -32, -25, 10, -51, -29, -15, 7, -2, -1, -30, 5, -7, 15, 2, 8, -19, -14, -61, -2, 10, 17, -67, 21, 9, -23, -28, 15, -14, -46, 10, -18, 1, -22, 10, -5, -42, 6, -1, -30, 0, -14, 2, -11, 32, -3, 21, -29, -4, -20, 26, 9, 15, -32, 4, -20, -35, -16, -48, 15, 14, -34, -10, -13, 13, 25, 1, -12, 32, -20, -29, 1, -6, 21, -17, -26, 21, -16, 16, -5, 23, 12, -39, -31, 31, -37, -13, 10, 4, -16, -1, -15, -11, 11, 3, -7, 15, -78, -6, 7, -33, 20, -5, 27, 22, 12, -25, -12, 20, 26, 21, -8, 20, 14, -85, 1, -116, -81, -27, -2, 22, -15, -12, 16, -71, -18, 16, -12, 9, 2, 4, -36, 6, -19, 14, 20, -5, -4, -20, -24, 1, 18, -5, -92, 16, -75, 21, -56, -34, -20, -13, -29, 33, -20, -20, -100, -4, -41, -1, 1, -18, -8, -33, -9, 17, 19, 13, -80, 7, 21, -82, -96, -26, -7, 29, -50, 32, -24}

#define TENSOR_CONV2D_7_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_7_BIAS_0 {-2, 11, -52, -11, 0, -17, -12, -2, -20, 10, -10, -26, -22, 2, 4, -31, -57, -66, 12, 9, -11, -36, -9, -1}

#define TENSOR_CONV2D_7_BIAS_0_DEC_BITS {7}

#define CONV2D_7_BIAS_LSHIFT {3}

#define CONV2D_7_OUTPUT_RSHIFT {8}

#define TENSOR_DENSE_1_KERNEL_0 {-23, -22, 11, 5, 5, 6, -21, -26, -27, 9, -11, -7, 13, -16, 2, 25, -27, -25, -31, -32, 8, 10, -1, 2, -5, -6, 19, -5, -1, 7, 18, -5, 5, -18, -4, 10, 4, 3, -5, -13, -40, -9, 10, -9, 14, 18, 8, -16, -31, 18, -28, -10, -5, -25, 19, 12, -21, 13, 15, -9, 14, 7, -6, -33, 7, 2, -22, 14, 0, -26, 0, 12, 17, 12, -43, -39, -18, -28, 1, 5, -11, 10, -18, 7, -30, -13, 11, 12, 9, 0, -15, 3, 3, -21, -6, 11, -61, -83, -33, 9, -46, -12, -56, -37, -59, -74, 5, -51, -3, -82, -87, -46, -35, -32, -67, -64, -70, -38, -43, 10, 9, -26, -20, -11, 12, -7, 5, -17, 9, -21, 5, -32, 7, -28, -15, 8, -31, -16, -31, 8, -25, -31, 15, -25}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {5}

#define TENSOR_DENSE_1_BIAS_0 {-9, 6, -45, -21, 93, 2}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {5}

#define DENSE_1_BIAS_LSHIFT {2}

#define DENSE_1_OUTPUT_RSHIFT {6}


/* output q format for each layer */
#define CONV2D_4_INPUT_OUTPUT_DEC 9
#define CONV2D_4_INPUT_OUTPUT_OFFSET 0
#define CONV2D_4_OUTPUT_DEC 7
#define CONV2D_4_OUTPUT_OFFSET 0
#define RE_LU_4_OUTPUT_DEC 7
#define RE_LU_4_OUTPUT_OFFSET 0
#define CONV2D_5_OUTPUT_DEC 5
#define CONV2D_5_OUTPUT_OFFSET 0
#define RE_LU_5_OUTPUT_DEC 5
#define RE_LU_5_OUTPUT_OFFSET 0
#define CONV2D_6_OUTPUT_DEC 4
#define CONV2D_6_OUTPUT_OFFSET 0
#define RE_LU_6_OUTPUT_DEC 4
#define RE_LU_6_OUTPUT_OFFSET 0
#define CONV2D_7_OUTPUT_DEC 2
#define CONV2D_7_OUTPUT_OFFSET 0
#define RE_LU_7_OUTPUT_DEC 2
#define RE_LU_7_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_DEC 2
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define FLATTEN_1_OUTPUT_DEC 2
#define FLATTEN_1_OUTPUT_OFFSET 0
#define DROPOUT_1_OUTPUT_DEC 2
#define DROPOUT_1_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 1
#define DENSE_1_OUTPUT_OFFSET 0
#define SOFTMAX_1_OUTPUT_DEC 7
#define SOFTMAX_1_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {9};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_4_input_config = {
    .super = {.name = "conv2d_4_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_4_kernel_0_data[] = TENSOR_CONV2D_4_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_4_kernel_0_dim[] = {6, 2, 1, 24};
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_dec[] = TENSOR_CONV2D_4_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_kernel_0 = {
    .p_data = (void*)tensor_conv2d_4_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_4_bias_0_data[] = TENSOR_CONV2D_4_BIAS_0;

const nnom_shape_data_t tensor_conv2d_4_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_4_bias_0_dec[] = TENSOR_CONV2D_4_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_bias_0 = {
    .p_data = (void*)tensor_conv2d_4_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_4_output_shift[] = CONV2D_4_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_4_bias_shift[] = CONV2D_4_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_4_config = {
    .super = {.name = "conv2d_4"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_4_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_4_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_4_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_4_bias_shift, 
    .filter_size = 24,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_5_kernel_0_data[] = TENSOR_CONV2D_5_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_5_kernel_0_dim[] = {4, 2, 24, 24};
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_dec[] = TENSOR_CONV2D_5_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_kernel_0 = {
    .p_data = (void*)tensor_conv2d_5_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_5_bias_0_data[] = TENSOR_CONV2D_5_BIAS_0;

const nnom_shape_data_t tensor_conv2d_5_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_5_bias_0_dec[] = TENSOR_CONV2D_5_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_bias_0 = {
    .p_data = (void*)tensor_conv2d_5_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_5_output_shift[] = CONV2D_5_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_5_bias_shift[] = CONV2D_5_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_5_config = {
    .super = {.name = "conv2d_5"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_5_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_5_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_5_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_5_bias_shift, 
    .filter_size = 24,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_6_kernel_0_data[] = TENSOR_CONV2D_6_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_6_kernel_0_dim[] = {2, 1, 24, 24};
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_dec[] = TENSOR_CONV2D_6_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_kernel_0 = {
    .p_data = (void*)tensor_conv2d_6_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_6_bias_0_data[] = TENSOR_CONV2D_6_BIAS_0;

const nnom_shape_data_t tensor_conv2d_6_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_6_bias_0_dec[] = TENSOR_CONV2D_6_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_bias_0 = {
    .p_data = (void*)tensor_conv2d_6_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_6_output_shift[] = CONV2D_6_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_6_bias_shift[] = CONV2D_6_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_6_config = {
    .super = {.name = "conv2d_6"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_6_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_6_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_6_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_6_bias_shift, 
    .filter_size = 24,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_7_kernel_0_data[] = TENSOR_CONV2D_7_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_7_kernel_0_dim[] = {2, 1, 24, 24};
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_dec[] = TENSOR_CONV2D_7_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_kernel_0 = {
    .p_data = (void*)tensor_conv2d_7_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_7_bias_0_data[] = TENSOR_CONV2D_7_BIAS_0;

const nnom_shape_data_t tensor_conv2d_7_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_7_bias_0_dec[] = TENSOR_CONV2D_7_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_bias_0 = {
    .p_data = (void*)tensor_conv2d_7_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_7_output_shift[] = CONV2D_7_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_7_bias_shift[] = CONV2D_7_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_7_config = {
    .super = {.name = "conv2d_7"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_7_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_7_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_7_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_7_bias_shift, 
    .filter_size = 24,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_1_config = {
    .super = {.name = "global_max_pooling2d_1"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_1_config = {
    .super = {.name = "flatten_1"}
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {24, 6};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};

const nnom_softmax_config_t softmax_1_config = {
    .super = {.name = "softmax_1"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_1_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_4_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_4_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_5_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_6_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_7_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_1_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_1_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_1_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_1_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_37_NNOM_H