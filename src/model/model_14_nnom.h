#ifndef MODEL_14_NNOM_H
#define MODEL_14_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_14_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.2069928239055942f, -0.2069928239055942f, 0.0f, 0.2068179864931189f, -0.0f, 0.25f, -0.5f, 0.25f, 0.4490699651581907f, -0.2071676613180694f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_24_KERNEL_0 {38, 57, 14, -30, -8, 6, -4, -10, -36, 12, 51, 6, -40, 11, -21, 9, 23, -10, -20, 6, -31, 27, -38, 42, 11, -23, 11, 17, -26, -40, -7, -13, 53, -63, 1, 13, 25, 7, 16, -4, -24, 7, 27, -9, 17, -51, -43, -68, -13, -40, -24, 36, -11, -42, 20, -19, 40, 31, -19, 23, 80, 7, 70, 12, 19, 42, -5, -10, -36, -5, -62, -29, 16, 63, 16, -26, 37, 26, -17, 42, -1, -63, -10, 40, -23, 8, -6, 33, 29, -6, 46, -18, -25, -33, -6, 48, 57, 8, -7, 15, -31, 40, 37, 2, -23, 38, -51, -14, -38, 38, 27, -26, 1, -21, 23, 17, -71, 29, 43, -15, 31, 34, -5, 2, 2, -1, -1, -22, 24, 6, -28, 72, -54, -35, -18, 4, 32, 21, 1, -8, -46, 2, 9, 16, -24, -65, 24, -18, -7, 19, 1, 6, 9, 59, -4, 58, 33, -3, 13, 56, 1, 11, -11, -2, 36, -11, 13, -50, 34, -4, 33, 7, -4, 5, 6, 34, -15, 20, 38, 64, -49, 33, 0, -30, -12, -58, -24, 33, 39, -43, 33, -39, 15, 62, 7, 57, 31, 61, 7, 60, 20, 49, 14, 48, 11, -40, -8, -29, 14, -53, 12, -38, -18, 57, 17, -3, -13, -54, -12, -21, -27, 6, -13, 39, -34, 23, -31, -42, 18, -13, 43, 10, 56, -21, 71, 23, 49, -21, 57, 5, -57, 52, -58, 36, -1, -1, 25, -25, 60, -52, 32, -57, 21, -29, 41, 2, 24, -37, 18, 12, -25, -34, -45, 67, -3, 57, 24, 41, -22, -83, -11, 53, 34, 8, 12, 25, -32, -16, 18, 26, 8, 1, -30, -11, -32, -17, 59, 44, -22, 19, -55, -22, -43, -47, 20, 34, 29, 25, 69, 77, 61, -13, 30, -50, -48, -5, 4, 14, 21, -8, 8, -20, 18, -15, 13, -17, 18, 7, 12, 7, 11, 57, 50, -47, -76, 8, 60, 14, -9, 5, 39, -9, 37, -23, -23, -22, 2, -55, 15, -2, 40, 25, -13, 53, -2, 8, -36, -14, 67, -38, 8, 1, -4, 22, -26, -28, -10, 28, -20, -11, -52, -20, -44, 2, -12, -7, -27, 14, 6, 1, 66, -32, -11, -16, -8, 76, 28, 24, -39, -56, -11, -60, -20, -5}

#define TENSOR_CONV2D_24_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_24_BIAS_0 {-29, -11, -27, -80, -37, -101, -83, -56, -115, -111, -11, -81, -32, 5, -49, -61, -14, -22, -3, -16, -5, -71, -63, -74, -28, -63, -22, -52, -31, 10, -92, -120}

#define TENSOR_CONV2D_24_BIAS_0_DEC_BITS {9}

#define CONV2D_24_BIAS_LSHIFT {6}

#define CONV2D_24_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_25_KERNEL_0 {10, 14, -6, 1, 11, -18, 6, 9, 22, 16, 14, -1, -9, -13, -8, 3, -6, 1, 5, -18, -26, 8, 10, -32, -10, -5, 4, -24, 13, 7, -5, 14, -1, 3, 16, 6, 12, -46, -17, 13, -24, 4, 1, 11, -4, 24, -26, -22, -10, -7, 8, 2, 11, -13, 1, -9, -14, -1, -3, 2, 2, 6, -24, 10, -23, 9, -3, 4, 3, 2, 13, -7, -5, -7, -19, -1, -1, -2, -15, -6, -11, 12, 7, -12, -1, -10, 7, -45, 20, 24, 2, -4, 2, 12, -15, 2, -16, 2, 6, -7, -2, 3, -11, 15, -27, -5, 5, 1, -1, 5, -19, -18, -20, 1, -11, -13, 6, 6, -28, -15, 29, 16, -5, -3, 13, -9, -11, -1, 17, 15, -6, -4, 6, 23, -31, -8, 16, -8, -2, -9, -25, -2, 13, -6, 12, -18, 12, 0, -1, 1, 36, -5, 2, -8, 1, -10, 9, 7, -15, 13, -1, -1, 4, -4, 9, 7, -2, 9, 2, 12, 7, 8, 4, 14, -1, -22, -16, -5, 9, 1, 7, 1, 3, -1, -7, -13, 7, -10, 11, 12, -23, 10, 8, -6, 3, 7, -24, 0, -19, -14, -21, -21, -23, 12, -18, 14, 3, -11, 21, -16, 3, -9, 16, -23, -14, 10, -10, -15, 14, 4, 12, 9, 23, -17, -22, 22, 5, 1, -9, 9, 30, -1, 14, 1, 13, 5, 21, 11, -5, -23, -7, 18, 21, 5, 24, -8, -9, -14, -45, 11, -7, -2, 7, 3, -28, -26, 9, -19, 13, -18, 17, -6, 11, -14, 8, 4, -14, -7, 16, 1, 7, 4, 4, -12, 0, 7, -1, -13, 18, 3, -12, -13, -9, 20, -5, 19, -18, -6, -5, -7, 11, -31, -9, -7, 43, -2, 15, -1, -10, 24, -7, -10, -2, 25, -7, 20, 2, 15, 7, -9, -2, -23, -18, 20, 4, 6, 13, 12, -14, -13, 9, 25, 2, -16, -1, 7, 3, 8, -7, 23, 8, 16, 19, -8, -4, 23, 3, -20, 2, 26, -19, 8, 7, 16, -35, -27, -5, 4, -3, -2, 12, -1, 7, -18, -2, -11, -9, 3, 8, -46, 8, 12, -19, -2, 2, 5, 7, 21, 4, -6, -23, 7, -12, -10, 13, 6, -5, 5, 7, 1, -22, 0, 7, -15, -14, 10, -8, -1, 14, -26, -3, -14, 15, -4, 4, -11, 4, 4, 11, -7, 18, 13, 7, 13, -11, -14, 8, 11, 0, -3, 3, 6, -2, -1, 2, -21, -7, -15, 22, 6, 4, 3, -7, -8, -5, 10, 8, -6, 6, 7, -4, 11, -2, 2, -8, -7, -30, -5, -4, 9, -1, 7, -2, -1, 2, 16, 6, 4, -4, -19, -13, 6, 13, -35, 12, -11, 30, 2, 3, -9, -1, 21, 9, -7, 32, 1, 24, 13, 0, 7, -2, -15, -12, 14, 5, -3, -6, 9, -11, -24, -3, -12, -5, 1, 11, -18, -8, -5, -1, 4, -8, -29, 3, -6, -12, -1, 1, 24, -8, -5, -7, -8, -28, -22, -21, -38, 4, 19, 12, -1, 2, -1, 1, 7, -9, 23, 2, 36, 9, 5, 18, -8, 5, -35, -2, -1, 3, 11, 3, 10, -15, -7, -1, 5, 14, -6, 6, -5, -3, 1, -1, -2, 13, -9, 15, -14, 13, 17, -19, 27, 20, -13, -10, -1, -20, -24, -6, 10, -1, 17, -5, -2, -19, -9, 6, 25, 25, -8, 1, -1, 3, 12, 15, -7, -27, 27, -13, -13, 15, 13, 7, 8, -4, 8, 8, -2, 3, -11, 1, -4, -9, -12, -10, 12, 13, 21, -3, -1, 11, 0, 7, -30, 20, 9, -25, 11, -21, 6, 1, -21, 9, -6, 2, 19, 33, 1, 6, -20, -29, -46, -13, -21, 5, 25, -5, 18, -30, -12, 2, 12, -9, 3, 0, 7, -26, -6, -15, -25, 8, -25, 10, 7, 3, -8, 14, -6, -23, 38, -39, -7, 5, -23, 5, 4, 17, 5, -9, 6, 6, 12, -9, -3, 2, 3, 2, -5, 6, -28, 13, 1, 5, 6, -3, 10, 10, -8, 21, -37, -14, 11, -21, -1, 8, -15, -2, -15, 0, 2, 35, -29, 10, -7, 2, -14, 5, -8, -6, 1, 2, 7, 11, -22, -6, -52, -19, -7, 11, 15, -5, 1, -4, 5, -13, 7, 3, 2, -7, 10, -9, 4, 10, 8, 11, -25, 11, 57, -11, -8, 33, 15, 1, -18, 12, -6, 27, 24, -5, 11, 3, 13, 11, -1, 6, 8, -7, 16, -17, 14, 8, 9, 3, -6, -4, 23, -11, 16, -2, 6, -16, 1, 15, -12, -23, 7, 0, -18, 7, 25, -12, 10, 14, -13, 1, -20, -13, 13, 3, -16, 11, 7, -1, -16, 5, 0, -7, -3, 5, -12, -19, 6, -22, 12, 3, -19, -7, -7, 7, 17, 13, 9, 1, 6, -4, 0, -1, -31, -19, -13, -24, 2, 5, 3, 8, -7, 21, -9, -24, -2, 3, 11, 8, -16, 11, 19, 9, -39, -8, -10, 5, -28, -4, -11, -1, 10, 15, 11, 9, 14, 7, 2, 4, 15, 7, -3, 5, 13, 2, 5, 3, 8, -4, 3, -5, 4, -1, 12, -5, -8, -3, 9, -1, -1, -11, -25, 0, -11, -3, 10, -1, -2, -4, 2, 13, -33, 11, -24, 9, 16, 22, -5, -10, -1, 3, 5, -5, -4, -9, -5, 3, -13, 12, -10, 1, -10, 10, -12, 10, 15, 11, 4, -11, 9, -10, 6, 28, -12, 11, 13, 1, 1, 13, -4, 7, -1, 3, 7, -2, -7, 5, 1, -7, 11, 12, 1, -2, 3, 6, -13, 15, -25, -5, 4, 15, -6, -3, -2, -8, -22, 10, -11, 1, -1, 16, 2, -2, -6, 20, 20, 9, 11, 3, 3, 4, 0, 14, 2, 11, 5, -6, -9, -13, 12, 19, -10, 11, -19, -8, 5, 15, -18, 21, 7, 8, -14, 13, -3, 27, 4, 5, -21, -12, -16, 3, 13, 5, 18, -7, -18, 4, 3, 18, 12, 0, -13, 16, -7, 15, -11, 9, 12, -19, -2, 28, 8, 4, 17, 0, -12, -9, 17, 6, 24, 2, -20, 31, 18, 13, -7, 17, -10, 3, 3, 3, -17, -44, -21, 19, -22, -6, -37, -33, -1, -7, 1, -6, 0, 9, -7, -16, -3, -10, -6, 17, 29, 7, -17, -14, -7, -13, -4, 11, -18, 15, 18, 24, 3, -8, 17, 6, -42, 2, -12, 22, 10, -40, 19, -9, 9, -1, -37, 27, 2, -12, -34, -16, -5, 15, -15, -56, -15, 0, -8, -31, 15, -28, 4, -11, -23, -46, -1, -10, 13, -1, 6, -29, 11, 10, -25, 6, -9, 2, 4, -13, -11, 2, 7, 10, 29, -4, -10, -21, -8, -31, -1, 4, -26, 9, -15, 10, -4, 3, -3, 8, -52, -17, 0, -9, 3, -44, 4, 0, -3, 5, 10, 14, 6, 23, -2, -16, -15, -18, -2, 3, -2, -5, -28, -4, -2, -1, 15, -1, -5, -32, 10, -16, 9, -5, 15, -47, -30, 29, 9, -3, -19, -27, -1, -2, -8, -5, 20, -12, 24, 7, -1, 1, -41, -12, -4, 4, -12, -7, -15, 1, -4, -24, 6, 22, -4, 5, 7, -2, 15, -18, -36, -5, -16, 1, 22, -11, 3, 21, 1, 4, -7, -17, 6, -4, -53, -3, -10, -13, -4, 7, 12, -65, -19, -10, -11, -4, 1, -28, -5, -19, -9, 6, -6, -1, 11, 0, 4, -1, 6, -14, 20, 8, 19, 1, -14, -17, 15, -55, 5, 23, -14, 14, -10, 3, -6, 5, -5, -5, -5, 10, 4, -14, 17, 1, -1, 24, 12, 1, 1, -2, -17, 6, -15, 17, 4, -1, 14, -6, -35, -18, -8, -5, -36, 12, -1, -34, -21, -20, -8, 10, -7, 3, 7, 6, 10, 7, -17, 0, 1, -24, -6, -8, 0, 1, 27, -24, -5, -15, -1, -17, 3, -3, 14, -1, -23, -17, -44, 1, 13, 5, -16, -1, 13, 11, 0, -12, -4, 1, -1, -7, 14, -4, -1, 11, -7, -22, 11, 15, -27, -34, -9, -36, 0, 14, 2, 16, -20, -6, 13, 2, 23, -5, 9, -32, -16, 14, 13, 4, 5, -6, 15, 1, -1, 4, -11, -15, 7, -8, 19, -7, -15, -1, 10, -3, 12, 1, 12, 3, -27, 5, -12, 16, 14, -18, -7, 11, -14, 0, 11, -12, 3, 18, 3, 0, 7, -29, 7, 1, -17, -11, -30, 3, -8, 4, -1, 13, 18, 9, 0, -13, -31, 3, -8, 2, 36, -21, -1, 2, -27, -15, -2, 2, -12, -27, 11, -12, 12, -6, -10, 2, 14, 10, 10, 0, 16, -34, 12, 19, -7, 8, 8, 3, -18, -12, 14, -1, 11, 9, 17, -7, -10, 11, -6, 13, 9, -12, 1, 1, 31, -13, -14, -4, -5, 1, 0, -7, -17, -10, -23, 9, 24, 16, 10, -1, 4, -10, -10, 28, -12, 2, 4, -2, -17, 7, -42, 21, 11, 23, 13, 15, 11, 14, -11, -3, 7, 17, 3, -15, -13, -110, 16, -6, -9, -5, -2, -24, 4, -4, 9, -6, -9, 24, -8, -4, 15, -9, -5, -16, 4, 11, 15, -43, 12, -29, 12, 11, 20, 9, 9, -4, 7, 0, -32, 11, 14, 6, -7, 23, -30, -27, 4, 12, -28, 25, 11, 6, -16, 4, -30, -3, 16, -12, 26, -4, -3, 7, 4, 3, 14, -5, 0, -1, -23, -13, -23, 4, 0, 0, 12, 4, 11, 7, 19, 11, -2, -5, 6, -3, -9, 15, -25, -10, -8, -16, 2, -2, 12, -4, -3, -2, 0, -5, -17, 0, -5, -7, -37, 20, -12, -15, 2, -12, 11, -3, 1, -4, 28, 9, -1, 18, -3, 17, -5, 7, 5, 13, -4, 15, -10, 7, 13, 13, 17, 5, -19, 1, -11, 6, 29, -8, 6, 10, 3, 13, 13, 8, 5, 5, -20, -5, -20, 0, 12, 11, -8, 0, -2, 8, 12, 6, -20, -11, 26, 11, -7, 6, -12, -14, -6, -17, 1, 4, -3, -42, -11, 3, 5, -8, 2, 0, 14, 9, 1, -11, 4, 23, 0, 10, -6, 8, 14, 2, 5, -14, -3, 4, 4, -13, 22, -1, -13, 8, -23, -6, 19, -53, 0, 11, -8, -11, 14, 4, -13, 10, -10, 1, -16, 9, -2, 9, 4, 6, 13, 13, 6, -19, -2, -16, -1, -15, -5, 1, -32, -13, 10, 0, 3, -32, -19, -3, 17, -9, -2, 2, -1, 10, 7, 9, 11, 18, -52, 6, 14, 1, 33, 7, -7, -9, -3, 2, 19, -17, 7, 15, -4, -26, 10, 5, 7, -20, 8, 12, 1, 14, -4, -10, 23, -9, -7, 4, 20, -13, -26, -22, -15, -5, 10, -22, -8, -26, -3, -4, 20, -31, 11, -11, -35, -30, -38, 28, 12, -27, -6, 5, -16, 3, 6, -11, -25, -15, -23, 4, 6, -21, 20, -2, -4, 16, 6, -5, 5, 0, 6, 2, 21, 19, -1, -11, 9, 14, -11, -19, 0, 18, -16, -7, 2, 7, 6, -7, -1, -24, 7, 1, 1, -15, -19, -27, 0, 18, -3, -1, 7, 17, 4, 11, -34, 20, -5, 22, -5, 2, 2, 0, 15, -31, -11, 16, -7, 26, 7, -15, 21, -9, -22, 1, 1, 3, 6, 22, 0, -28, -18, -17, -3, -13, 13, 5, 7, 5, -20, -16, 2, 5, 13, -13, 10, 8, -14, 2, 3, -12, -18, -9, -22, -5, -3, -10, 4, -11, -7, -2, -3, 24, 23, 9, 0, 6, 1, 11, -3, 2, 8, 3, -3, 8, -10, 12, 1, 8, 6, 9, 6, 7, 1, -1, 4, 9, -1, -23, -4, -7, 16, -6, -2, -12, 1, -2, -9, -8, 6, 5, 3, -8, -5, -14, -3, 4, 22, 3, -32, -7, -18, -5, -5, 16, 10, -41, -11, 1, 11, -7, -3, -11, -2, 18, -18, 2, 19, 16, -1, 6, 1, -2, -14, 12, -13, 14, -13, 18, 3, -8, -9, 7, -11, 2, -3, -4, 6, -13, -3, 5, 6, 14, -10, -2, 22, -11, 0, -16, 24, 15, 0, 1, -35, 13, 0, -2, -7, -14, 2, -14, 10, 12, 0, 12, -3, -14, -14, 4, 4, -20, 22, 5, 8, -7, 16, -6, 9, -22, -27, 15, 4, 18, -3, -19, 3, -7, 2, -20, -14, 12, 2, 12, -40, 16, 3, 28, 0, 8, -17, 3, -1, 3, -8, -6, 2, -10, -10, 5, -35, -37, 0, -42, -23, 8, 9, -2, 1, 4, 10, -11, -16, -2, -3, 4, -7, 7, -12, -8, -19, 4, 11, 13, -6, -22, -21, 9, 1, -12, -19, 18, -45, -33, -36, -38, 3, -6, -55, -4, 14, -16, -3, -2, -1, -28, 2, -4, -10, 28, -29, -3, -22, 9, -7, 2, 5, -48, -20, -7, -2, -13, 17, 5, -14, -21, -13, -2, -23, 11, 6, -3, 3, 3, -28, 4, 1, 0, -9, 6, -18, 0, 4, 2, -15, 5, -3, 6, 11, -40, -34, 7, 6, 8, 2, -9, -18, 9, 8, -55, -39, -7, -39, -14, 5, -8, 2, -11, -7, -26, -14, 9, -9, -10, 10, 4, 14, -17, -13, 0, 1, 0, -31, 21, -12, 11, 1, 6, 1, -37, -3, -21, -7, 16, -48, 7, 8, 6, -16, -7, -1, -1, 31, -2, -11, -15, 43, 7, -7, 12, -5, 11, 6, -34, 6, 7, 3, -14, -8, 2, 5, -39, 9, -16, 6, 12, -29, -4, -19, 4, -7, 8, -44, 5, -9, 0, -5, 14, -11, 2, -24, -10, -7, 18, 4, 14, -18, 2, 2, 12, -17, -8, -34, -7, 18, -43, -9, 18, -3, -3, 9, -12, -16, -12, 23, 7, -25, 4, 23, -24, 2, -12, 3, 15, -18, 7, 3, -25, 1, 3, 17, 7, -35, -5, -22, 18, 8, -12, -5, -2, -4, 15, 14, 23, -13, -5, 27, -14, -3, 23, 1, -36, 8, -5, -44, 4, 6, 0, 1, 8, -25, 10, 2, 33, -14, -4, -10, -7, 2, -1, -12, 9, -8, -4, -5, 3, 9, -8, -2, 1, -7, 4, -23, 7, -38, 3, 1, -3, 8, 12, 0, -22, -8, 18, 15, -6, -36, 18, -4, 8, 7, -30, -6, 25, 3, 6, -4, 1, -20, -16, 2, 17, 1, 8, 2, 15, 9, 22, 2, 6, 3, 14, 13, -32, -12, 16, 0, 18, -10, -5, -8, -30, 5, -25, 7, 10, 1, 4, -1, 3, 9, 3, 4, -1, -10, -10, -16, 0, 1, 8, -7, -7, 11, 6, 4, -7, -5, 16, 5, -5, -24, 22, -9, 18, -1, -40, -2, 17, -3, 3, 20, 7, -8, -9, 6, 5, -4, -5, 11, 15, 10, 12, -5, 27, -12, 1, 0, 0, 13, 14, -5, -6, -19, 18, -26, -34, -3, -22, -18, 9, -6, -21, -6, -18, 15, 2, 9, 1, -9, -7, -6, 0, -10, -2, 12, -9, 15, -9, 7, 6, -10, 10, -4, 12, 17, 1, -9, 27, -27, -36, 5, 9, -13, 0, 14, -3, -4, -14, 14, 4, -17, 2, -20, 21, -18, 4, 4, 16, -2, 2, 5, -12, 8, -3, 6, -1, -10, 2, -35, 5, -4, -3, -16, 2, -9, -14, -11, -7, 7, -3, -6, 0, 4, -8, 10, 13, -33, -11, 7, -2, 23, 0, 8, -26, -1, 0, -13, 4, 0, 4, 3, 27, -13, 0, -20, -7, -17, -14, 2, -17, -11, -15, -7, 14, -15, -1, -27, 32, -39, 4, 8, 18, -19, 26, -3, -23, 10, 15, -9, 1, -28, 9, -19, -3, 0, -31, -51, -5, -20, 7, -1, -3, 8, -8, -5, 0, -1, 0, -47, -7, -29, -12, 11, 16, 20, -6, 0, -14, 4, 9, 7, 6, -18, 4, 7, 17, -1, -46, 17, 10, 3, -35, -4, 1, -11, 11, -1, -10, 2, 7, -2, -17, -35, 3, 2, -4, -4, -28, 8, -20, -33, 5, -3, -1, 10, -22, 0, -24, -7, -20, 0, 10, -3, 6, -3, -3, -7, 4, -4, 1, -10, -1, -26, -6, -12, -10, 2, 4, -5, 5, 7, -5, -3, -5, 4, 7, -44, 19, -19, 5, -13, -44, -14, 9, 4, 6, 3, -9, -3, -4, -13, -1, 5, 8, -19, 10, 3, 16, -23, -4, -8, -12, -1, -23, -11, -16, -2, 1, 15, 16, 11, -30, 16, -33, -43, 10, -1, -16, 4, 17, -27, 7, 1, -4, -3, -3, -7, 3, 18, 2, -20, -5, 12, -5, -8, 0, -7, -2, 6, 0, -12, 14, -11, 5, 4, -24, -5, 6, -30, -15, 0, 10, 1, -27, -10, -16, -17, -11, -6, 12, 25, 14, 7, 4, -36, -8, -8, 15, -16, 0, 12, 16, 13, -18, -11, -4, 25, -10, -9, 13, -11, 5, 12, 15, -21, 4, 10, 4, -2, -12, 7, 2, 3, -2, 4, 10, 16, -5, -17, -34, -1, 10, -2, 10, 9, 5, -4, 27, -11, -16, -35, -3, -25, -10, 1, -1, 15, 0, -5, 1, 11, -9, 16, 13, 5, -1, -5, 1, -11, 15, -1, -1, 1, -8, -12, 2, -10, -10, -2, 17, 18, -8, -30, 1, -4, -11, 0, -13, -11, 24, -4, -7, -12, -2, -21, -7, -5, 30, -5, -4, 5, 11, 0, -4, 1, -19, 5, 14, 29, -2, -50, 5, 10, -20, -26, -8, 17, 1, -14, 34, -27, -17, -3, 12, -8, 9, -6, -22, 8, -22, -41, -8, 0, 16, -18, -40, 25, -25, -14, 0, -7, 11, -3, 7, 12, -23, -20, -25, 17, -20, -3, -1, 17, -1, -11, 7, 9, 16, -13, 16, 16, 24, -15, -3, -6, -1, -11, 5, -9, -2, -3, -13, -3, 7, -24, 4, -1, -25, 1, 5, -22, 7, -7, 18, -26, 1, 12, -7, -9, 10, -13, 10, 1, 11, 12, 4, -7, 5, 0, 0, -4, 9, 7, -15, -23, -16, 5, -3, 11, -32, -13, -12, 15, -1, 3, 1, -5, -9, -27, -24, -6, 10, 6, 14, -37, 7, 4, -5, 0, 2, -7, -6, -24, -4, -9, -11, 1, -24, 1, -12, -24, 2, 3, -8, 6, 3, -5, -12, -37, 14, -5, 17, -1, 5, -5, -7, 3, 21, 12, 0, 13, -9, -1, -27, 0, -5, 3, -10, -1, -4, 23, 14, -19, -4, -25, 28, 20, 27, -9, 15, -3, 9, -10, -12, 4, 6, -16, -7, -27, 15, 3, 0, -1, 14, 28, 26, -34, 0, 8, -4, -8, -3, 10, -56, -21, 7, -41, 15, -2, 24, 8, -5, -17, -17, -19, 7, -29, 17, -3, 35, -44, 16, 0, 0, 15, 24, 8, -2, -13, 8, 1, 8, -3, 5, 14, -6, 1, 35, 16, 6, -2, 9, -55, -3, 21, 2, -30, -26, -11, -29, 17, 1, 1, 0, -5, 6, -15, 10, -3, 7, 9, -1, 2, -36, 26, -7, 6, 40, -10, 13, 11, -9, 15, 9, -1, 7, 7, -4, -3, -25, -12, -26, -1, 7, 11, 14, -40, -11, -13, -22, -22, 13, -22, 0, 8, 13, 1, 5, 9, 22, 25, -14, 8, -3, 23, -2, -1, -3, -24, -5, 10, -11, -17, -12, -12, -14, 3, -2, 21, 2, 2, -27, 3, 27, -4, 44, -5, -4, 11, 15, 3, 21, -4, -3, 11, -5, 12, 18, 2, 4, -11, 4, 7, 21, -34, -55, -34, 10, 23, -2, 3, 13, 19, 19, 6, -6, 18, -6, -48, -33, 3, 6, -22, 11, 8, 12, 1, -5, -20, -27, 3, -38, 8, -33, 8, 1, -14, 5, 15, 5, 6, -17, 5, 1, 3, 7, -2, -22, -7, 10, -23, 17, 8, 4, -10, -34, 13, 8, 36, 4, -15, -42, 4, 11, -35, 1, -6, -2, 18, -23, 30, -8, 42, -41, -9, 2, 12, -1, -21, 23, 42, -12, 3, -11, 10, -6, 28, 20, 6, -5, 30, -3, 5, -10, 10, 2, -7, -30, 4, -20, -9, -39, 5, -9, 20, -11, 14, 33, -47, -11, 2, 31, -5, 29, -7, -7, 18, -7, -9, -18, 1, -5, 13, -7, 9, -9, -6, 13, -20, -35, 8, 13, -31, -1, -12, -3, 6, -30, 16, 16, 38, 16, -32, 3, -18, -20, 12, -11, -18, 15, -24, -21, 10, -15, -37, 0, -18, 9, -23, -10, 2, -13, 10, -5, -26, -17, -12, 6, -3, -18, 26, 23, 18, -7, -11, -5, -7, -12, -18, 6, -16, 6, -34, -23, -38, -51, 11, 1, -11, 3, -12, -4, 5, -14, -12, -9, -12, -18, 20, 34, 4, -3, -4, 5, -35, -4, 3, -14, -7, 5, 3, -10, 16, 17, 0, -5, 0, 6, -1, -1, 18, -20, -7, -9, 2, -15, 3, -3, 11, -39, 6, 0, 23, 12, 13, 10, 11, 1, 5, 12, -29, -14, -12, -16, 20, 14, 25, 3, 1, -12, -39, 0, -20, -24, -3, 9, -22, -14, -10, 9, -3, -10, 18, 2, 26, 1, 20, -9, -7, 10, -17, -8, -4, 4, -9, 18, 2, -9, -16, -8, 33, -30, -10, -12, 0, 8, 14, 13, 10, -5, -11, -8, -11, -22, -3, -2, 5, -27, -9, 1, 3, 14, 22, -16, -22, 21, 0, -5, -23, 18, -11, 16, 10, -5, -3, 24, -7, -17, -7, 25, -15, 9, -12, 16, 7, -10, -1, -6, 7, 8, -22, 10, -14, 7, -10, -42, 8, 17, 1, 7, 16, -9, 9, -30, 12, 13, -25, 15, 16, -1, 11, 0, -20, 9, 9, -14, -37, -8, 24, -6, 24, 19, -1, 8, 5, 20, 12, -7, -13, 3, 0, -10, -8, -31, -9, 24, -4, -32, -5, -17, -5, 7, 23, -3, 21, -14, 28, -16, -21, 0, -16, -3, 2, -27, -40, 11, 6, -7, 14, 13, -1, 2, 9, 7, -15, 11, 18, 6, 11, -10, 9, -14, -5, -24, 14, 7, -2, 2, 15, -12, -4, 11, -19, -16, 4, 10, 14, -13, -12, -11, -16, -33, -3, 1, -5, 15, 4, -14, -8, -4, 2, -3, 5, 1, 7, -6, 6, 10, -1, -16, 12, -2, 7, -21, -6, -8, 4, -12, -3, 23, -26, 13, 24, 5, 1, -20, 17, -20, 4, 5, 9, 8, 0, 13, 1, 15, 7, 2, 0, -23, 9, -13, 1, 1, -26, 21, -4, 8, -8, -18, -19, 15, -16, 5, -12, -9, -7, 11, -3, -8, 13, -10, 7, -21, 6, 11, -2, 8, -17, -12, 8, -12, -10, 13, -6, 5, -10, 5, 18, 14, 7, -14, 0, 9, -14, -20, 7, 0, 17, 10, 1, -12, -1, 4, -14, -4, -4, -33, 12, -2, 6, -5, 4, -13, -4, -14, 9, -6, -7, -4, -45, -3, 0, -17, 21, 3, -1, -13, 12, 7, -17, -2, 2, 7, 11, -13, -1, -13, -10, -3, -5, -17, 5, -6, 0, 1, -1, -30, 12, 9, -17, 10, -13, -4, 14, -11, 20, -22, 4, -5, 4, 10, -22, 3, -15, 16, -5, 4, -46, 3, -8, -7, 18, 9, 5, -7, 9, -6, 8, -10, 1, -7, 2, -22, -7, 3, -8, -6, -10, -11, 5, -16, 12, -19, 7, 4, -5, 4, -5, -4, -5, 6, 6, -14, -13, -33, 0, -20, -19, -3, 10, -2, -36, 8, -18, 4, -40, 36, 17, -7, -9, -7, 4, -16, 11, 15, 59, 2, 5, 4, -22, 22, -39, -9, -5, -15, -10, -9, -5, -16, -11, -14, 12, -25, -18, 9, 17, 12, -40, 16, 6, -15, -22, -15, 7, 5, -15, -8, -22, -7, 12, 17, 4, -12, -21, -26, 2, 17, 20, 25, 18, -14, 9, 9, -1, -5, 1, 21, -19, -6, -18, 6, -13, -27, 9, -3, -24, 0, 18, 9, 1, 4, 16, 3, 2, -16, -14, -4, 14, -15, 16, 8, 7, 1, -20, -12, 11, -19, -2, 14, 2, 1, -10, -1, -12, -20, -29, 11, -12, -6, -9, -5, -2, 12, 11, 9, -6, 8, -18, -3, -2, -3, 5, 24, -6, 13, -2, 9, 1, -6, 8, 4, -9, 10, 6, 28, 6, -1, -29, -12, 2, 6, 5, -8, 17, -14, 12, 19, -21, 17, -43, -18, -9, -44, -33, -1, -7, 10, -13, -8, -3, -12, 2, -1, 14, 4, -5, -2, 10, 6, -24, 3, -1, 10, 2, -1, 0, 7, 20, 25, 20, 2, 1, 6, 1, -2, -13, -19, 17, 10, 10, -17, -3, -3, 9, 16, -38, -12, -29, -2, 35, 20, 9, -1, 11, 8, 2, -10, 8, 8, 2, 15, 4, 16, -59, 20, 4, 2, -7, -6, -9, 4, 2, 8, 6, -2, 2, 3, 19, 1, -41, -2, 21, 18, 6, 3, 10, -15, 15, -18, -22, 0, 3, 16, 6, 14, -24, -4, -13, 4, -41, 20, -17, 9, -3, 10, 0, 16, -11, 9, -14, -2, -12, 13, -7, 15, -16, -7, -14, 10, -9, -13, -16, 11, 4, 10, 16, 6, -3, 14, 13, 23, 21, 2, -6, -12, -5, 1, 11, -2, 10, -8, -10, -6, 6, 10, -13, 14, 23, 8, -2, 1, 5, -1, 5, -2, 7, 13, 0, 12, -10, 20, 15, 13, -3, -6, 6, 6, -3, 2, -4, -2, 20, -4, -13, -7, 6, 4, 4, -1, 8, 0, 7, 13, -11, -10, 9, 4, 12, 2, 2, 8, 10, 10, 8, -3, 5, 8, 4, 8, -3, 1, -18, -3, -1, -4, -8, 5, 5, -5, 4, 24, 13, -5, 12, 0, 6, 7, 16, -14, 4, 0, -17, 9, 1, 16, 3, 1, -12, -3, 30, 12, -2, 3, -8, 4, 13, -7, -3, 4, 2, 5, 2, 7, 4, 8, 2, 7, -6, -5, 1, 2, 0, 7, -9, 6, -5, -14, 13, -17, 9, 0, -11, 6, 13, 12, 0, 5, -7, 5, -4, 3, 6, -3, 17, 2, 15, 9, 14, 8, 21, 24, 9, 1, 1, 2, 10, 6, -7, -2, 2, 7, 32, 3, -3, 18, -1, 9, 1, 2, -6, 10, 0, -2, 0, 7, -2, 12, 11, -1, 5, 13, -2, -2, -10, 15, 3, 10, 19, 2, 3, 4, 7, 18, 24, 7, -15, 19, 7, 3, 7, -8, 0, 6, 3, 6, 23, 0, -6, 14, 13, 14, 18, 6, -7, 5, 6, 6, -4, 9, 12, -4, -3, 9, 7, 17, 20, 11, 14, 4, -1, 1, 18, 16, 3, -5, 10, 5, 12, 5, -2, 0, 10, -4, -11, 0, 2, 9, 3, 10, -1, 3, 6, -4, -18, -3, -8, 12, 14, 6, 8, -13, -7, -17, 24, -11, 1, -9, -6, -1, 13, 4, 11, 9, 17, 0, 2, 4, 9, 17, 14, -15, -5, -1, -3, 4, -6, 22, -2, 20, 20, 4, 16, 12, 2, 7, 1, 15, 26, 6, -7, -1, 12, 19, 11, -24, 5, 7, 20, 1, -7, 6, 63, 12, -1, 5, 7, 1, 10, 9, 2, 12, -3, -2, 5, -3, -10, -9, 5, -8, 4, -22, -13, -2, 16, -12, -16, 6, 5, 2, 12, -19, -1, 4, -2, -3, -2, 4, -12, -13, 8, 26, -4, 15, 4, -5, -3, 6, -5, -8, -1, 9, 23, 9, -5, 6, -5, 18, -8, -1, 7, -1, 3, 13, -3, -6, 20, -9, 11, 11, 6, 3, 20, -12, 0, 30, 18, 9, 16, -6, -14, 1, 5, -10, -2, 2, -3, -12, 13, 14, 25, 8, -16, -14, -13, 2, 6, 23, -5, 6, -19, 4, -10, -1, 12, 9, -12, 11, 21, -5, 3, -7, 2, 5, 13, -12, -5, 7, -5, 6, -3, 15, 5, 7, 5, 15, -3, 14, -7, 1, -3, 23, 3, 16, 13, 1, 9, -28, 7, -1, 22, 17, 9, 0, 13, -14, 21, -15, 5, 5, -18, -28, 7, -2, 9, 3, 2, 9, 3, -3, -19, 17, -20, -1, -1, 2, 35, 6, -12, 30, 9, -2, -18, 21, -1, 19, 12, 0, 8, 2, 3, -7, 5, 4, 14, 3, 25, -1, 7, -7, 8, -4, -2, 14, -12, 12, 6, 2, -26, 8, 17, -18, 11, -5, 15, 11, 4, 3, -23, 4, 18, 17, 0, 1, 2, -24, 6, 11, 11, -25, 28, 4, -14, 18, 3, 11, -6, 0, -21, -11, 0, 5, -9, -8, -19, 8, 15, -1, 8, -7, 7, 17, -5, 15, -21, -34, -4, -27, -8, 2, 2, -35, -5, 1, -8, -4, 12, 0, 4, 3, 7, 6, 4, 18, -7, 3, -11, 2, 8, -1, 5, -18, 6, -3, -2, 16, 7, 3, 1, -25, -27, 10, 11, -1, 6, 6, -26, -9, 13, -24, -22, -1, -12, 4, 12, -1, 2, 17, 22, 11, 12, -5, -10, -5, 11, 8, 20, 20, 20, -28, -12, -27, -14, -2, 5, -5, 7, 0, -1, -20, -10, -33, 32, 11, -18, 12, 3, 13, -27, 10, 12, 11, -7, 7, 7, -2, 15, 12, 0, -4, -4, -1, -12, -9, 6, 11, -28, 7, 2, 11, -55, -7, 11, -10, -27, -3, -21, -5, 5, -5, -39, 19, 1, 6, 11, 6, -9, -39, -20, -17, 38, 17, -9, 3, -8, -2, 13, 30, -9, -5, -14, 6, -2, -4, -20, -3, 19, 2, 1, 0, 9, 1, 9, 30, 1, 9, 42, 3, 6, -1, 12, -1, 23, -20, 16, -7, -13, 7, 2, -9, 12, 24, 10, 32, -44, 4, 18, 23, 6, -6, 8, -6, 0, -2, -67, 12, 13, -14, 7, 2, 4, 17, -4, -5, 14, -22, 16, -9, 9, 2, 16, 6, 8, 2, -5, -12, 9, 9, -19, 5, -7, 12, -8, 1, 0, -11, 24, -12, 9, -17, -8, -5, 17, -9, 10, 12, -13, -6, -34, -5, -14, -2, 9, 7, -8, 15, 12, -2, 8, -2, 6, -19, 1, -10, 7, 0, -6, 4, -9, 12, 2, -30, -12, 16, 3, 4, 4, 4, -6, 14, -2, 0, 0, 17, 18, -10, -2, 14, -4, 9, -3, 10, -3, 14, 16, 14, -12, 8, 7, -4, -13, 8, 4, -17, 17, -8, 7, 1, -6, 17, 2, -3, -3, 6, -16, 4, 11, -21, 0, 7, -5, -5, -6, 11, 5, -4, 3, 19, -1, 1, 2, -6, -14, -9, -12, -10, 18, 8, -3, -16, -18, 18, -2, 3, 14, 8, 12, 21, 4, 9, -19, 3, -7, 9, 16, 2, -1, -2, 21, 22, -8, -12, -8, -22, 22, 4, -6, -22, 0, 0, -8, 3, -6, 2, 1, 10, -11, -4, -2, -3, 3, -33, -22, 24, -11, -25, 1, 12, 3, -3, -11, -6, -5, -2, 5, -5, 4, 6, -5, 18, 6, -12, -6, 15, -1, -20, -4, 5, 13, -7, 1, 17, -5, 2, -13, 0, -10, -9, 15, 2, -6, -21, 16, 18, -3, -8, -9, 1, 1, 2, -5, -4, -20, 0, 8, -8, -17, 11, 2, -6, -5, -23, -22, -6, 1, 11, -26, 7, -4, -16, 6, -19, -6, -25, -10, 0, -7, 1, -20, -1, 10, 2, -26, 8, 6, -3, 1, -14, 7, 11, -13, -8, 0, 8, 0, 6, -1, 19, -20, 26, 3, -10, -39, 17, 2, -13, 11, 16, 5, 2, 13, -14, 21, 26, -11, 21, 19, 4, -42, -21, -12, 13, 4, 5, 6, -16, 28, -1, 7, 0, 2, -20, -3, -10, -21, -11, -5, -19, -4, -22, -10, 10, 4, 7, 14, -21, 5, 9, 1, 10, -2, 6, 18, -4, -10, 6, 4, 33, 0, -6, -21, -19, 26, 9, -6, 12, 6, 22, 4, -6, 28, 7, 5, -13, -9, -5, 6, 16, 6, 1, -12, -18, 7, 1, -8, 1, -17, -18, -15, 4, 18, -6, 9, -8, 6, 0, 9, 15, 1, 2, 1, 15, 1, -9, -1, -11, 12, -8, -17, -5, -2, -35, 3, 18, -8, 1, 10, -23, -17, 8, -23, 21, -18, 8, -20, -13, 5, 7, -38, 4, 10, 11, -11, 4, 16, -7, 6, 6, 2, -6, -9, 0, 16, 6, -19, -33, -1, -12, -1, -10, 29, -13, -3, -7, 17, -1, -4, -8, -14, 0, 21, 8, -15, -24, 21, 15, 3, 9, 4, -2, 8, -11, -12, -3, -5, 13, 4, 11, -14, 1, 6, -6, -17, 3, 13, 6, 3, 9, 1, 2, -8, 6, 6, -31, -6, -2, -8, -30, 46, 1, -2, -8, 20, -28, -8, 10, 4, 1, 6, -6, -14, 8, 6, -11, 11, 5, -29, -3, 31, 8, 5, -15, -21, -27, 15, -2, 3, -11, 8, -26, -5, -13, 8, 9, 9, 2, -4, 5, -11, 20, -19, -3, -13, -2, -9, -6, -8, 16, 6, 16, 6, 7, -12, 16, -9, 4, -16, -4, -1, 10, -3, -42, 47, 7, -15, -27, 21, 3, 41, 1, -18, 50, 29, 17, -54, -9, 6, 5, 6, 10, 15, -2, 1, -13, -5, 3, -9, -10, 7, 9, -19, -23, 2, -6, -46, -5, 4, 28, 11, -11, -22, 21, -4, 17, -25, 12, 0, -4, 0, -13, -6, 1, 5, 9, 15, -9, -15, 8, -1, 1, -3, -14, -37, -10, -13, 9, -46, -38, -10, -8, -16, -18, -15, -9, -3, -23, 19, -2, -9, 6, 3, -5, -12, 7, 6, -11, -9, -7, 11, -13, -29, -2, -10, -12, -14, -1, 9, 4, 0, -18, 18, -6, -6, 2, -16, -36, 7, -8, -10, -15, 17, 3, -21, -17, -1, -2, 19, 6, 6, 5, -16, -51, 10, 7, -24, -12, 3, -4, -4, 21, -19, -28, 22, -7, -10, 13, 5, 11, 17, -24, -8, 8, -1, 20, -7, 12, -8, 4, 2, 3, 2, -9, 23, -22, 2, 12, -25, -7, -1, -11, 1, -3, 4, 9, 6, 7, -29, 15, -34, -30, 8, -31, -9, -11, -3, -2, -3, 5, -26, -2, -9, -24, 3, 0, -28, 2, 0, 10, -26, 9, 2, -25, -8, -2, 11, 0, 17, -21, -15, -3, -30, -3, -4, -29, 22, -3, -16, 29, 12, 14, 1, 32, 9, 9, 14, -8, 4, -6, 18, 13, -30, 21, -10, -6, 19, 11, -40, 0, 2, -1, 4, 5, 8, -45, -7, 16, -3, -1, -17, 15, 11, 5, -2, 11, -12, -5, 20, 19, -9, -31, -1, 14, 3, 7, 13, 0, -2, -3, -12, 15, 7, -10, 5, 2, -11, -12, 12, 19, -21, -8, -8, -4, 9, 4, 2, 7, -1, -16, -2, -4, 22, 5, -1, 0, -2, 11, -11, 7, 4, -23, -6, 18, -5, 22, 10, 7, 8, 2, -1, 11, 11, 7, -14, -6, 21, -16, -25, 25, 13, 12, -12, -21, 7, 2, -11, -34, 5, 9, 19, -1, -3, -27, 29, 7, -1, -1, -9, 8, 9, 6, -3, 18, -1, 16, -43, -6, 1, 1, 8, 0, -10, -3, 12, 7, 12, 1, -13, 4, -11, -5, -1, -12, 18, -34, -8, 3, -20, 15, 8, -5, 6, 22, -12, 19, 5, 3, -14, -5, 5, -13, 11, -12, 21, 2, 0, 5, -6, 4, -11, -4, 1, -14, -13, 6, -11, -13, -2, 12, 4, 9, -31, -2, -12, -12, 4, -5, 24, 1, 9, -13, -7, 17, 0, -11, 9, 13, -9, -15, 1, 5, 22, -8, -1, 8, -13, 3, 8, -8, 8, 9, -8, 12, -3, 15, -22, 3, 3, -11, 17, 0, 0, 7, -4, -3, 5, -32, -14, -3, -9, 2, -29, -7, 2, -14, 5, 12, -16, 5, 0, 5, -27, 17, 5, 17, -18, 7, 15, 0, 16, -15, 20, 16, 5, 7, -17, 14, 14, -21, 6, -15, 1, -15, 35, 15, 16, 19, -8, -13, -11, -9, -8, 10, 6, 5, -16, 10, 6, 2, -65, -22, 1, -29, 1, -7, 6, -2, 10, 7, 8, -23, 14, -1, 1, 2, -11, 3, 13, 3, 3, 4, -12, 2, 9, 20, -31, 1, 4, 13, 11, -12, -1, -11, 20, 8, 11, 3, 6, -6, -10, 1, 12, -19, 1, -3, 0, 22, 17, 4, -12, 18, 24, 2, 17, -1, 15, 18, 5, 8, 11, -15, -16, 4, -8, 5, -7, 8, -18, 13, 3, -5, -5, 22, -4, 2, -4, -2, -14, 5, 4, 15, 1, 6, -11, -22, -22, -3, -5, 13, -2, 13, 6, 3, -1, 3, -1, -9, 9, 13, 21, 0, 0, 3, -8, 12, 5, -2, 16, -5, 11, 1, 7, -10, -10, 6, 4, 7, 8, 11, 17, -4, 0, -3, 1, -2, -34, 3, 2, 10, -5, 10, 12, -26, -1, 7, 5, 3, 2, -1, 1, -9, 2, 9, -8, 15, -15, 7, -12, 3, 12, 8, -3, -24, 0, -1, -3, 4, -1, -12, 21, -20, -4, 10, -6, -4, 0, -10, 12, -18, -16, -6, -6, 9, 9, -4, 8, -5, -1, -28, 18, 3, 5, 9, 12, 7, -23, -15, -8, -3, 4, 8, 11, 18, 2, 2, -1, 8, -3, 13, -8, 3, 7, 0, -31, -2, -15, -5, 3, -10, -17, 4, -13, -16, -6, 7, 0, -12, -12, 9, -10, 0, -1, 21, 21, -10, 5, 39, 26, 15, -16, -11, -12, 3, 21, -14, 2, 6, -5, -4, 4, 8, 16, 3, 22, -3, -1, 10, -4, 8, 7, -1, -10, -3, -16, 3, -5, 8, 6, -5, 14, 9, 6, -5, 0, 13, 6, 3, 7, 13, 9, -1, 11, 24, 1, -1, -33, 5, -15, 7, 9, 2, -2}

#define TENSOR_CONV2D_25_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_25_BIAS_0 {-13, 11, -50, -2, 5, 24, 1, 2, 11, 11, 31, 4, -42, 11, 29, 0, -95, -119, -19, 3, -2, 0, -39, -58}

#define TENSOR_CONV2D_25_BIAS_0_DEC_BITS {7}

#define CONV2D_25_BIAS_LSHIFT {4}

#define CONV2D_25_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_26_KERNEL_0 {-3, 9, -17, 29, -1, -9, 3, 25, -8, 1, -1, 5, 8, -21, -12, 28, -5, 11, -8, 5, 1, 4, 6, 11, 16, 15, 14, 7, -6, -16, -12, -10, 14, 3, -3, -2, 1, 18, 4, 8, 4, -25, 7, 4, 10, 16, -4, -3, -4, -17, -17, -12, -20, -7, 12, -5, 3, 1, -6, 10, 1, 2, 10, 4, -7, -4, 2, -1, -13, 1, -8, -5, -2, -1, -2, -17, -8, -10, 12, -5, -1, 4, 5, 3, -10, -5, -4, -10, -7, 7, -4, -10, -9, 1, -11, 5, -5, 12, -11, -3, -6, 19, 29, -3, 1, 10, 9, 14, -7, 7, 22, 32, -10, 0, -12, -4, 7, -3, 7, -5, 16, 11, 6, 0, -1, 16, 11, -15, 22, 5, 9, -13, 39, -5, -5, -6, 3, -8, 11, -13, 11, 43, 1, -14, 2, -10, 5, -5, -1, 43, 13, 5, -9, -7, 5, -22, -18, 16, 3, 12, -13, -10, -2, -16, 5, 18, 8, -1, 19, -3, -6, 29, -2, 9, -5, 0, -7, 14, -2, 2, 2, 24, -2, -8, 12, -2, -2, 8, 7, 10, -10, -1, 6, -16, -26, 9, -31, 9, -41, 19, 3, 20, -3, 10, 3, -3, 3, -4, -2, -34, -41, 0, 20, -5, -13, 6, 2, 19, -10, 15, -20, -11, -13, -5, 5, 17, -4, -8, -15, 15, 5, 10, -11, -30, -18, -4, -4, -3, -16, -28, -27, 14, -32, -11, 18, 24, 27, -37, -5, 3, 11, -32, -18, 32, 20, 3, -2, -40, -1, -19, -7, -7, -31, 5, 0, -8, 7, -9, -20, -12, -4, -37, 14, 9, 1, -15, 25, 8, -9, -14, -33, 16, 16, -2, -37, 12, -15, -3, 3, -28, 5, -5, -23, -30, 12, 9, 6, 21, 9, -18, -8, 17, -10, -6, 6, -17, -48, -14, 10, -18, -7, -30, -19, -12, -12, 10, -7, 1, 7, 7, 11, 5, 6, 25, -12, 12, -6, -11, 3, -8, -11, 6, -19, -2, -2, 4, 5, 4, -44, 14, 10, 8, 23, -32, 12, 10, 28, -29, 0, 14, 8, 3, -12, -39, -27, -10, 7, -27, -42, -7, 14, -19, 13, 21, 3, -81, -1, 0, 25, 9, -6, 4, 13, 41, -36, 14, -40, 9, 13, 5, -31, -8, -4, -10, 12, 4, -18, 1, 30, 2, 1, -2, -48, -20, 1, -11, 31, -16, -8, -5, 3, 25, -8, -5, -24, -25, 5, 1, 4, -5, 15, -4, 16, -18, -3, -3, -15, -15, -3, -22, 48, 5, 3, -9, 10, 11, -9, -1, -24, -7, 15, 7, 0, -7, -33, -6, 15, 0, 12, -5, -8, 5, 7, -2, 39, 21, 0, 9, -25, -16, 21, -4, -33, -22, -42, -27, 9, -24, 8, -9, -3, 7, 5, 1, 16, -36, -47, 19, 25, 16, -1, -14, -17, 17, 15, -5, -8, -3, 4, 1, 8, -8, -17, -11, -23, -22, -5, -2, -24, -9, -45, -2, -17, -8, -2, -12, -5, -29, -8, 13, 1, 22, -15, 3, 3, -18, 0, 0, -8, -30, 29, 10, -37, -33, -40, -23, -28, 4, 9, -5, 1, 12, 0, -3, 7, -30, -7, 16, -10, 7, -46, 4, 15, 8, 7, -32, -7, 5, 7, -34, 39, 28, 2, 4, 13, 11, 2, -47, 1, -4, -26, -2, -19, -16, 1, 0, 4, -2, 14, -2, 11, -10, -15, -19, 31, 8, 7, -10, 5, 14, -4, -26, -16, 11, 1, 2, 9, -14, -7, 3, -32, -36, 2, -31, 21, 0, 12, -15, 37, 26, -36, -41, -23, 32, 14, -8, -22, -2, -29, -4, -43, -9, -9, 8, 3, -1, 16, 5, -15, 11, 5, 15, 2, 6, 12, -3, -25, 0, -2, -6, -16, -26, 3, 10, -17, 5, 4, 11, -13, -1, 4, 8, -11, -4, 8, -17, -13, -5, 13, 5, 10, 8, -8, -11, -1, 17, 26, -2, 23, 0, -2, 4, 18, -3, -18, -5, 3, 9, -11, -4, -12, -4, -8, -9, 5, -18, -1, -1, 7, 26, 4, 2, -5, -2, 12, 15, -4, 0, 14, -6, -2, -18, -6, 10, 32, -6, -6, 0, 13, 4, 11, 10, -24, -1, -8, 17, 2, 17, 11, 17, 16, 18, 28, 8, -19, -5, -16, 12, -21, 14, 5, -11, 19, 13, 14, -42, -9, -5, 17, 18, 16, 8, 17, -3, 24, -17, 5, 2, 2, 2, -7, 8, 17, -19, -5, 2, 8, -19, 11, 9, 7, -5, -8, 0, 0, -14, 4, 11, 11, 16, 4, 5, -18, -7, -18, 4, -7, -9, -13, 6, 15, 17, 19, 2, -4, -6, 6, 12}

#define TENSOR_CONV2D_26_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_26_BIAS_0 {0, -3, 4, -10, 7, 13, 7, 48, -70, -2, -5, -16, 17, 3, -55, -40}

#define TENSOR_CONV2D_26_BIAS_0_DEC_BITS {7}

#define CONV2D_26_BIAS_LSHIFT {1}

#define CONV2D_26_OUTPUT_RSHIFT {6}

#define TENSOR_CONV2D_27_KERNEL_0 {0, 9, -12, -16, -28, -4, 5, -8, -14, 8, 35, -14, 3, -30, 8, 5, 6, -8, 3, -5, -41, -11, -14, -9, 18, 12, -7, -10, -11, 1, 4, -12, 11, 9, 1, -53, 20, -21, -31, -15, -11, 10, 3, -35, -11, -10, -40, -21, -12, -4, -10, 4, -17, 7, 9, 18, -37, 39, -14, -18, 13, 11, -30, -69, -21, -2, -13, -7, 6, 10, 8, 13, -17, -7, 13, -35, 36, 5, -7, 3, -1, 2, -31, -3, 12, 7, 6, 3, -14, 4, 9, -23, 3, -15, -1, 2, -2, 4, 9, 5, -5, 24, 2, 7, 22, 9, 0, 7, -6, -7, -6, 6, 0, 12, -8, -7, -18, -2, 8, -23, 11, 16, 16, 9, 6, -16, 5, 2, -40, 15, -15, 0, -7, 12, 12, -18, -44, 15, 14, -49, 6, 2, -34, 3, -29, 14, 10, 5, -5, 17, 2, 5, -30, 17, 33, -55, 10, -16, 12, 11, -12, -5, 3, -13, -11, 4, -5, -3, -7, -4, 7, 7, 1, -2, -7, -10, -9, -6, -6, -3, 1, -5, -3, 0, 3, -10, 4, -12, -9, -9, -10, -5, 0, -3, -6, -16, -12, -6, 4, -9, 15, 21, 11, 15, 17, -22, 8, 4, 2, 0, 0, 0, -14, -22, -1, -3, -19, 2, 11, -2, -13, 5, 0, -1, -1, -3, 0, 0, -26, 6, -52, 22, -4, 22, -25, 15, -26, 1, -19, -8, -4, 14, -7, -15, 2, 2, -9, -40, 8, -8, -27, 11, 13, -15, 3, 2, -22, 3, -27, -6, 4, 11, 14, 20, -5, 24, -3, -52, 30, -10, -39, -29, 6, -8, -3, -16, 13, 16, -14, -17, -7, -6, 14, -32, -5, 1, -22, -27, 7, 3, -4, -4, -19, 20, -22, 26, 0, 31, -36, 14, -17, 8, -21, -15, -5, -3, -5, -22, -9, -9, -5, -34, 18, 1, -52, 25, 3, -12, -1, -4, -5, 12, -25, 12, 2, -26, 10, 8, -13, 23, 13, -10, 29, -16, -52, -15, 2, -7, -40, 11, -3, -38, 10, 8, -18, 5, -1, -35, 31, -6, -39, -38, 1, -6, -1, -2, -38, 19, -48, 15, 1, 25, -7, 18, -16, 5, -11, 2, -3, 4, -13, -15, 5, 2, -2, -48, 2, 15, -6, 17, 16, -18, 1, 9}

#define TENSOR_CONV2D_27_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_27_BIAS_0 {-11, -4, 8, -14, 1, -5, -7, 4, -2, 1, 3, 6}

#define TENSOR_CONV2D_27_BIAS_0_DEC_BITS {5}

#define CONV2D_27_BIAS_LSHIFT {0}

#define CONV2D_27_OUTPUT_RSHIFT {6}

#define TENSOR_DENSE_6_KERNEL_0 {5, 12, -47, -1, -27, -60, 5, 6, -35, -38, 11, 5, 12, 3, 6, -27, -15, 26, 10, 5, 16, -36, -16, -61, 5, -9, 6, -14, -9, 1, 4, -1, -41, -25, -42, -22, 7, 5, 13, 12, 12, -6, 15, 7, 12, 6, 12, 7, -65, -101, -69, -48, 8, -4, -46, -88, -74, -86, -68, -69, -30, 10, 10, -43, -51, 2, -34, -49, 9, -21, 17, -39}

#define TENSOR_DENSE_6_KERNEL_0_DEC_BITS {5}

#define TENSOR_DENSE_6_BIAS_0 {-36, 3, -56, 1, 79, 8}

#define TENSOR_DENSE_6_BIAS_0_DEC_BITS {5}

#define DENSE_6_BIAS_LSHIFT {1}

#define DENSE_6_OUTPUT_RSHIFT {7}


/* output q format for each layer */
#define CONV2D_24_INPUT_OUTPUT_DEC 9
#define CONV2D_24_INPUT_OUTPUT_OFFSET 0
#define CONV2D_24_OUTPUT_DEC 6
#define CONV2D_24_OUTPUT_OFFSET 0
#define RE_LU_24_OUTPUT_DEC 6
#define RE_LU_24_OUTPUT_OFFSET 0
#define CONV2D_25_OUTPUT_DEC 3
#define CONV2D_25_OUTPUT_OFFSET 0
#define RE_LU_25_OUTPUT_DEC 3
#define RE_LU_25_OUTPUT_OFFSET 0
#define CONV2D_26_OUTPUT_DEC 2
#define CONV2D_26_OUTPUT_OFFSET 0
#define RE_LU_26_OUTPUT_DEC 2
#define RE_LU_26_OUTPUT_OFFSET 0
#define CONV2D_27_OUTPUT_DEC 1
#define CONV2D_27_OUTPUT_OFFSET 0
#define RE_LU_27_OUTPUT_DEC 1
#define RE_LU_27_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_6_OUTPUT_DEC 1
#define GLOBAL_MAX_POOLING2D_6_OUTPUT_OFFSET 0
#define FLATTEN_6_OUTPUT_DEC 1
#define FLATTEN_6_OUTPUT_OFFSET 0
#define DROPOUT_6_OUTPUT_DEC 1
#define DROPOUT_6_OUTPUT_OFFSET 0
#define DENSE_6_OUTPUT_DEC -1
#define DENSE_6_OUTPUT_OFFSET 0
#define SOFTMAX_6_OUTPUT_DEC 7
#define SOFTMAX_6_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {9};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_24_input_config = {
    .super = {.name = "conv2d_24_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_24_kernel_0_data[] = TENSOR_CONV2D_24_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_24_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_24_kernel_0_dec[] = TENSOR_CONV2D_24_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_24_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_24_kernel_0 = {
    .p_data = (void*)tensor_conv2d_24_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_24_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_24_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_24_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_24_bias_0_data[] = TENSOR_CONV2D_24_BIAS_0;

const nnom_shape_data_t tensor_conv2d_24_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_24_bias_0_dec[] = TENSOR_CONV2D_24_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_24_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_24_bias_0 = {
    .p_data = (void*)tensor_conv2d_24_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_24_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_24_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_24_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_24_output_shift[] = CONV2D_24_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_24_bias_shift[] = CONV2D_24_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_24_config = {
    .super = {.name = "conv2d_24"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_24_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_24_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_24_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_24_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_25_kernel_0_data[] = TENSOR_CONV2D_25_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_25_kernel_0_dim[] = {4, 2, 32, 24};
const nnom_qformat_param_t tensor_conv2d_25_kernel_0_dec[] = TENSOR_CONV2D_25_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_25_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_25_kernel_0 = {
    .p_data = (void*)tensor_conv2d_25_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_25_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_25_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_25_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_25_bias_0_data[] = TENSOR_CONV2D_25_BIAS_0;

const nnom_shape_data_t tensor_conv2d_25_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_25_bias_0_dec[] = TENSOR_CONV2D_25_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_25_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_25_bias_0 = {
    .p_data = (void*)tensor_conv2d_25_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_25_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_25_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_25_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_25_output_shift[] = CONV2D_25_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_25_bias_shift[] = CONV2D_25_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_25_config = {
    .super = {.name = "conv2d_25"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_25_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_25_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_25_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_25_bias_shift, 
    .filter_size = 24,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_26_kernel_0_data[] = TENSOR_CONV2D_26_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_26_kernel_0_dim[] = {2, 1, 24, 16};
const nnom_qformat_param_t tensor_conv2d_26_kernel_0_dec[] = TENSOR_CONV2D_26_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_26_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_26_kernel_0 = {
    .p_data = (void*)tensor_conv2d_26_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_26_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_26_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_26_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_26_bias_0_data[] = TENSOR_CONV2D_26_BIAS_0;

const nnom_shape_data_t tensor_conv2d_26_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_26_bias_0_dec[] = TENSOR_CONV2D_26_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_26_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_26_bias_0 = {
    .p_data = (void*)tensor_conv2d_26_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_26_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_26_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_26_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_26_output_shift[] = CONV2D_26_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_26_bias_shift[] = CONV2D_26_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_26_config = {
    .super = {.name = "conv2d_26"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_26_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_26_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_26_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_26_bias_shift, 
    .filter_size = 16,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_27_kernel_0_data[] = TENSOR_CONV2D_27_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_27_kernel_0_dim[] = {2, 1, 16, 12};
const nnom_qformat_param_t tensor_conv2d_27_kernel_0_dec[] = TENSOR_CONV2D_27_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_27_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_27_kernel_0 = {
    .p_data = (void*)tensor_conv2d_27_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_27_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_27_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_27_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_27_bias_0_data[] = TENSOR_CONV2D_27_BIAS_0;

const nnom_shape_data_t tensor_conv2d_27_bias_0_dim[] = {12};
const nnom_qformat_param_t tensor_conv2d_27_bias_0_dec[] = TENSOR_CONV2D_27_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_27_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_27_bias_0 = {
    .p_data = (void*)tensor_conv2d_27_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_27_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_27_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_27_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_27_output_shift[] = CONV2D_27_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_27_bias_shift[] = CONV2D_27_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_27_config = {
    .super = {.name = "conv2d_27"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_27_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_27_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_27_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_27_bias_shift, 
    .filter_size = 12,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_6_config = {
    .super = {.name = "global_max_pooling2d_6"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_6_config = {
    .super = {.name = "flatten_6"}
};
const int8_t tensor_dense_6_kernel_0_data[] = TENSOR_DENSE_6_KERNEL_0;

const nnom_shape_data_t tensor_dense_6_kernel_0_dim[] = {12, 6};
const nnom_qformat_param_t tensor_dense_6_kernel_0_dec[] = TENSOR_DENSE_6_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_6_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_6_kernel_0 = {
    .p_data = (void*)tensor_dense_6_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_6_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_6_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_6_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_6_bias_0_data[] = TENSOR_DENSE_6_BIAS_0;

const nnom_shape_data_t tensor_dense_6_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_6_bias_0_dec[] = TENSOR_DENSE_6_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_6_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_6_bias_0 = {
    .p_data = (void*)tensor_dense_6_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_6_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_6_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_6_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_6_output_shift[] = DENSE_6_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_6_bias_shift[] = DENSE_6_BIAS_LSHIFT;
const nnom_dense_config_t dense_6_config = {
    .super = {.name = "dense_6"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_6_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_6_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_6_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_6_bias_shift
};

const nnom_softmax_config_t softmax_6_config = {
    .super = {.name = "softmax_6"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_6_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_24_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_24_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_25_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_26_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_27_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_6_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_6_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_6_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_6_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_14_NNOM_H