#ifndef MODEL_27_NNOM_H
#define MODEL_27_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_27_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.2069928239055942f, -0.2069928239055942f, 0.0f, 0.2068179864931189f, -0.0f, 0.25f, -0.5f, 0.25f, 0.4490699651581907f, -0.2071676613180694f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_4_KERNEL_0 {-73, 39, -65, 41, -45, 14, -18, -3, 32, -20, 22, -33, 7, 40, 12, -75, -22, 11, 14, 17, 6, 46, -13, -48, 5, 48, -15, -3, 27, -45, 8, -23, 2, 41, -57, -67, -76, 39, 35, 46, 19, -36, -14, 15, -16, 2, -3, -35, 57, 80, -9, 22, -9, 10, 38, -52, -21, -26, -4, -41, -1, 73, 0, -1, 2, 11, -3, -27, 23, -15, 13, 35, -30, -6, -36, -24, -14, 24, -44, -70, -15, 9, 54, 24, 21, 21, 27, -19, 62, -31, -24, -29, -69, 28, -11, -20, -35, -80, -48, 1, 15, 6, 14, 27, 53, 55, 30, -37, 42, -55, 0, 24, -6, 14, -20, -2, -7, 93, -50, 74, -63, -22, -39, -4, 65, -31, 3, -7, -16, 42, 60, 7, 19, -23, -21, -6, 35, -11, -53, -13, 69, 14, -50, -1, -31, -51, 59, 31, 23, -47, -9, 1, -15, 9, -10, 25, -36, 17, -18, -13, 6, 8, 8, 10, 34, 43, 32, 62, -62, -37, -7, 22, -16, 1, -1, 6, 12, -8, 41, 55, 54, -9, 1, -5, -20, 2, -48, 34, 60, -6, 53, -24, 84, -8, 31, -14, 61, -9, 61, 10, 56, 5, 74, -21, 8, -26, 22, -13, 8, 23, -39, 13, -21, 33, 28, -56, 25, -7, 39, -2, 13, -4, -17, 2, 7, 36, -20, -25, -13, 70, -15, -2, -15, -59, -7, -16, -16, -66, -27, -57, -66, 29, -14, -13, -10, 2, 7, -20, -38, 33, -56, 37, -53, 6, 24, 8, 31, 30, -33, -1, -36, -20, 60, 2, 37, 24, -38, 0, -31, -56, 10, -21, 34, -49, 5, 21, -32, 1, -7, -9, -26, 20, -28, -14, 67, -17, -79, 4, -7, 7, -18, -64, 47, 1, -24, 35, -35, -45, -20, -32, -27, -72, 5, -36, 37, -17, 51, 17, -8, 31, -47, -3, -53, 10, 17, -42, -58, -33, 20, 34, 26, -9, 77, -25, -47, -15, -20, 5, 10, -31, 13, -18, 24, -44, 68, -13, 21, 3, 44, 57, -27, 24, 36, -25, -40, 20, -27, -64, 1, 8, -18, -16, 13, -73, 9, -18, -3, -16, -6, 91, 55, -51, -37, -22, -37, -26, -11, -36, -39, -24, -67, -43, -13, -22, 17, 20, 33, 46, 21, 19, -21, -29, -54, -54}

#define TENSOR_CONV2D_4_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_4_BIAS_0 {-15, -7, -34, -49, -41, 0, -33, -56, 3, -4, -51, -13, -39, 3, -7, -60, -2, -19, 2, -17, -4, -70, -28, -17, -47, -21, -53, 6, -56, -16, -5, -14}

#define TENSOR_CONV2D_4_BIAS_0_DEC_BITS {8}

#define CONV2D_4_BIAS_LSHIFT {7}

#define CONV2D_4_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_5_KERNEL_0 {-1, 3, -4, -7, -8, -2, -5, 7, -13, -10, -6, 2, 3, -4, -5, 4, -11, -3, -4, -6, -1, -2, -1, -7, -1, -4, -5, 2, 1, 3, 2, -10, -4, 2, 2, 0, 2, 1, -3, -4, -7, -5, 2, -4, -2, -1, -6, -5, -3, -7, -4, -4, 5, -8, -4, -5, 2, -6, -2, -6, 1, -6, -2, -6, -6, 5, 0, -5, 6, -6, -5, 3, -4, 1, -2, -12, -1, -2, -8, 0, 2, -2, -2, -2, 3, 3, -4, -8, -4, -4, -4, 3, -1, 2, 4, 0, -2, 2, 5, -5, -3, -5, -4, 2, -9, -12, 0, -7, -5, -3, -4, -4, -4, -9, -2, -5, 5, -4, -6, 1, 4, -2, 1, 2, -1, -12, 5, 2, -8, 3, -7, 6, 4, 0, -1, -8, -6, -7, -7, -2, 3, 0, -5, 7, -3, 1, -7, 1, -4, 2, 3, 2, -4, -4, -9, -2, -1, -5, -4, -5, 1, -4, -7, -6, -10, -5, -1, -3, -1, 0, -6, 4, -6, -4, -6, -4, 1, -3, -13, -3, 4, 4, -6, -5, -5, 0, -3, -3, -6, -8, -10, -9, -5, -2, -2, -5, 5, 0, -9, 2, 6, -9, -1, -5, -2, -4, -2, 0, -1, 6, 1, -5, -6, -5, -1, 4, -1, 4, 1, -10, -4, -9, 3, -7, 5, 3, 0, 4, 3, -4, -4, 5, -4, -6, 6, -3, -4, -6, -4, 7, -2, -12, 2, 2, -8, -4, -2, -4, -3, 5, -5, -4, -7, -5, -6, -6, 22, -13, 4, 10, -5, -14, 5, 15, 7, -35, 6, 21, 16, 23, -14, -40, 32, 6, 16, 8, 6, 28, 17, 1, 18, 5, 45, -2, 2, 8, -12, 9, 34, -26, 5, -36, -79, -23, 37, 10, 14, -12, -27, 0, -3, -14, -25, 28, -41, 8, -3, 15, 23, -11, -3, 28, -44, -24, 23, -6, -69, -9, -14, 18, -37, 32, 43, -15, -6, 5, -2, -33, 10, -10, -1, -1, -66, -12, 26, 3, 3, 22, 6, -10, -16, -21, 25, -17, 7, 40, 59, 3, -35, 3, -33, -22, 20, 9, -9, -66, -6, 11, -15, -26, 0, -22, -33, 5, -14, -28, 3, -41, -40, 41, -5, -49, 16, -11, 37, 18, -11, -4, 11, 7, 17, -3, 26, 3, -18, 4, -16, 0, 7, -5, 26, -3, 1, -23, -33, 9, 23, 5, -10, -14, 58, -11, -20, -6, -5, -63, 4, -10, 4, 0, -49, 23, -18, -6, 0, 62, 33, -14, 15, 30, 16, -44, -21, -20, -46, -14, 22, 50, 10, -31, -2, -11, -28, -32, -3, 19, 43, -32, 14, 42, -18, 25, -36, -6, -43, 29, -4, 10, -12, -4, -10, -27, -31, -11, -38, -29, 13, -4, -36, -18, 7, 8, 4, -39, -33, 17, 1, -6, -25, -35, 25, 4, -12, -10, -6, 2, 24, 38, -29, 1, 13, 7, 44, 11, -44, 15, -2, 7, -15, -16, 52, -18, 52, 1, 4, -76, -38, -15, -22, 48, -38, 16, -4, 3, 21, 19, 14, 21, 17, -31, -26, 0, 23, -57, -30, 32, 14, -27, -5, 2, -3, 9, 29, 31, -50, 25, 1, -65, -13, -31, -1, 12, 12, -58, -2, 57, -30, 3, -11, 12, 22, -3, -35, -38, -5, -34, -20, -110, -4, -1, 18, 55, 25, -9, -62, -16, -60, -12, -38, -35, 27, -15, 9, -46, -44, -52, -68, 17, -30, -86, -4, 8, 47, 26, -42, -14, -46, -15, -23, -30, 29, -12, 6, 4, -8, 18, 16, 2, 19, -13, -9, -38, -6, 11, 11, 7, 25, -66, 24, 46, -21, 5, -43, -38, 36, 35, -13, 24, 20, -14, -42, -66, 8, -4, 53, -31, -3, 7, -68, 3, -71, 1, 6, 3, 6, -6, -31, -42, -3, -44, -25, -13, -4, -32, 34, 26, -1, 1, -32, 22, -7, -2, 14, -30, -41, -73, 9, 36, -39, 28, -27, 32, -46, -31, 2, -10, -10, 34, 29, -10, 41, -102, -46, 30, 23, 22, -8, -61, -6, 7, -5, 4, 13, -31, 6, -44, -19, 47, 20, 3, 30, -11, 37, 8, -6, 35, 6, 37, -16, -21, -17, -7, 16, 27, -13, -16, -44, -9, -8, 81, -3, 12, -16, 6, 19, 3, -59, -4, 21, 18, 23, 13, 3, 11, 13, -32, 29, -14, 26, 16, 4, 68, 45, 3, 25, -11, 16, -6, 2, 19, 43, 1, 2, -10, 19, 0, 15, 33, 22, 1, 9, -9, -56, 21, 26, 6, -7, -5, 14, -15, -7, 21, 33, 33, 6, 1, 31, -25, 11, -14, -20, 25, 46, 12, -6, 64, -8, 28, -4, 18, 19, 41, -21, 15, 15, 30, -19, 12, 71, 29, 13, -16, 33, 30, -8, 3, 22, 62, 2, 3, 41, -11, -20, 7, 9, -12, 7, -20, 38, 24, -30, 6, 12, -4, 28, -13, -15, 1, 34, 6, 26, 17, 2, -24, 1, 47, 18, 23, 15, -49, 22, -18, -24, 9, -16, 21, 12, -20, -26, 12, 56, 16, 2, 13, 30, 1, -20, -30, 6, 3, 3, -3, 9, -12, 10, 3, 6, -52, 35, -28, -11, 7, 84, 17, 3, -11, 25, -26, -19, 11, -9, 52, 8, -3, 32, -7, 27, 12, 35, -17, 17, -32, -7, 17, 37, -2, -19, -57, 3, 43, 22, -14, -18, 10, -19, -3, 28, 7, -30, -40, -2, 15, 31, -32, -22, 33, 8, -4, -14, 3, -2, -1, 6, 13, 25, 69, -5, 15, 0, -3, 9, 15, -1, -7, 14, -2, -17, 29, -20, 11, 31, 16, 58, 28, 35, 26, 10, -30, 21, -20, -14, 2, 15, 45, -1, -13, -26, 13, 24, 14, -3, 22, 14, -3, -34, -20, -18, 43, -9, 18, -13, -3, 58, -35, -24, 21, -7, -29, -10, -21, 0, 22, -16, -18, -7, -2, 16, -61, -8, -31, -1, 1, 27, 0, 21, 20, 76, 20, 12, 4, 13, -24, -1, 1, -25, -10, -22, -8, -23, 9, -27, 15, 22, 6, -30, 18, 37, 23, 11, -43, -13, 11, -17, 1, 5, 26, 10, 9, 29, -22, -5, -7, -20, -10, 23, 3, -21, 24, 44, 18, 2, 70, -39, -52, -40, 6, 45, -10, -27, -5, 16, -59, 7, -9, -10, 32, 52, 15, 16, 1, -15, -22, -5, -18, 33, -1, -25, 23, 9, 10, -13, -5, -51, -43, -11, 6, 6, 49, 17, 47, 20, 30, -44, 30, 18, -73, -30, 3, 16, -9, -6, -4, -54, 22, -21, 15, 0, -16, 43, -17, 24, 12, -44, -6, -9, 11, -42, 42, 6, 1, 39, -20, 13, -4, 0, -16, -22, -25, 49, 30, 44, -31, -7, -48, -40, 11, 6, -27, -75, -6, 16, 36, 17, 37, 51, 26, 1, 12, -8, 25, -30, 45, 45, 5, 35, 7, -68, -9, 11, -35, -18, -4, 33, -3, -10, 15, -63, -27, -19, 38, -1, 2, 24, 6, -7, 9, 36, -48, -38, 3, -57, 5, -40, 48, -4, -35, -15, 2, -13, -16, -24, -47, -23, -29, 12, 0, 3, -46, 9, 68, 19, -11, -8, -14, 19, 14, 2, -22, 16, 31, -67, 13, 25, -8, -74, 17, 2, -17, -47, -22, 39, -45, 58, 11, -18, -8, -38, 21, -24, -56, -20, -2, 11, -45, -1, -15, -1, -20, 4, 43, -22, -37, -15, -55, -26, 37, -10, -15, -19, -43, 4, 10, 22, -17, -39, -1, 36, 34, 27, 19, 15, -10, -50, 3, 3, -21, 3, -19, 7, 11, -51, 4, -28, 15, -118, 7, -72, -71, -12, -41, -44, -35, 32, -17, 0, -66, -2, -47, -53, -12, -49, 0, -14, -2, 15, -4, 7, -26, -104, -26, 26, -88, -40, -37, -46, -7, 3, -6, -24, 12, -52, 24, 93, -12, -17, -37, -19, 47, -20, 8, 23, -39, 42, -11, 13, -24, -15, -25, -37, -18, 19, 22, -7, -45, 17, -51, 9, -22, -42, 15, -29, -34, -24, -21, 40, -11, -57, -31, -18, -87, -43, -32, 33, 10, 15, -20, 5, -4, 23, -22, -23, -8, -80, 32, 3, -6, 33, -22, 36, -6, -33, -68, -22, -49, -16, 28, -9, 28, -15, 1, 29, 42, -4, -45, 39, -23, 36, 0, 17, -9, 9, 12, 17, -1, -22, 102, -15, -47, 32, -24, -5, 18, 28, -15, -46, -48, -7, 45, -32, 30, -46, -24, 17, -2, 11, -34, 42, 4, 62, -14, 17, -23, 23, 30, 21, -38, -17, 30, -9, 19, 3, -37, -52, -20, -36, -22, 23, 3, 15, 16, 60, 22, 11, 23, -4, -109, 34, 0, 39, 27, -20, 18, 16, 39, 12, 51, 45, 10, -24, 55, 7, 4, 15, -31, -15, 1, 15, -3, -2, 11, -22, 8, 22, 26, 0, 9, 20, -18, -44, 8, -21, 37, 2, -23, 46, 1, -15, 3, 12, -16, 16, -29, -13, 43, -40, -22, -16, 12, -16, 22, 6, 3, 10, -2, 70, -34, 16, 35, -37, -33, 20, 51, -21, 14, -12, 21, -6, 10, 25, -52, -84, 4, 37, 34, -3, 12, 30, -10, -6, 14, 28, -2, 27, -59, -59, -6, 16, 20, -6, 28, 30, 28, -80, -36, 0, 12, -14, 5, -11, -45, 27, -2, 14, -14, -13, 6, -41, 59, 29, -88, -27, -6, -12, -87, 15, -54, -9, -3, 16, 58, 13, 25, 30, 44, 5, 11, 49, -4, 54, 6, -18, 37, -6, 12, 3, -7, 24, 23, -1, 1, 25, 30, 20, 16, 19, 9, 13, 6, -13, 18, 5, 15, 46, 11, 11, 5, -7, 15, 56, -21, 20, 1, 0, 5, -12, 15, -4, 16, -3, 21, 14, -3, 51, 21, 38, -7, 2, -3, 10, 1, -4, 13, -1, -9, 3, 0, 20, 0, 27, 14, 42, 19, -4, 23, 5, 65, -3, 10, 12, -14, 10, 44, 8, 13, 14, 1, 32, 9, 20, -5, -15, -3, -7, -6, -3, 16, 17, -4, 14, 13, -3, 0, 31, 15, 14, -3, -27, 3, -29, 19, -8, -2, -9, 30, -9, 11, 5, 10, 14, -33, 1, -4, 7, 3, 13, 13, 31, 6, -3, 11, 14, 23, 15, 9, 25, 12, 13, 6, -5, 64, 17, -5, -23, 9, 19, 47, 16, 18, -10, 16, 32, 4, 15, -3, -3, 20, -10, -14, -21, 19, 28, -20, -7, 23, -22, -6, 6, -1, 20, 0, -3, 25, -16, -14, -7, -5, -1, 25, 25, -23, 11, 10, 33, -12, 16, 16, 4, -8, 13, 33, 42, 13, -6, 9, 28, 48, 18, -26, 58, 12, 15, 0, 6, 46, 39, 45, 19, 4, 13, 65, 27, 39, 63, 24, 61, 7, 22, 14, -9, 28, -23, -7, 16, 19, 12, -10, 30, 28, 4, -1, 34, 8, 2, -9, -18, 32, 3, 18, -6, -34, 23, 49, 20, 19, 21, 22, 16, -11, -52, 33, -34, -30, -3, -15, -18, -12, 26, 2, -11, -3, 28, 7, -14, -8, -7, 15, -19, 41, 2, 18, -4, -39, -3, -57, 37, -29, -15, 17, 26, -21, 24, 17, -17, 2, -1, 25, -10, 10, -94, -8, 53, 51, -3, -52, -3, -52, -9, -12, 9, 21, -1, -14, 23, -25, -16, -19, -25, -40, 73, 12, 15, 4, -29, 4, 12, 17, 11, -6, 12, 56, 12, 14, -41, 62, 34, 5, 59, -5, -45, 10, 12, 6, 25, 12, 11, 13, 1, 10, 42, 18, -20, 43, 10, 29, 32, 11, 4, 21, 32, 26, 29, 16, 1, -86, 14, 61, -35, 18, -76, 6, 11, -92, 13, -26, -57, -22, 4, 54, -9, -51, -36, 37, 19, -9, -47, -12, -53, -4, 17, -2, 2, -35, 26, -12, -11, 3, -33, 24, 42, 3, 44, -26, 26, 11, -12, -44, -39, 41, -1, 9, 14, 52, 16, 38, 16, 41, -42, 14, 22, 0, -7, 6, -27, 8, -13, -6, -77, 19, 40, -18, -45, 6, 4, -67, 7, -42, -36, 25, -36, 4, 1, -10, -3, -16, -9, -2, -22, -92, -53, -31, -10, -57, 3, -62, -47, -65, -49, 12, -11, 20, 24, -17, 27, 7, -2, -14, 26, 22, -11, 57, 16, 39, -36, -9, 43, 44, -6, -17, -22, 60, 21, -14, -46, 30, 23, 60, -67, -36, 8, 21, 27, -28, 5, 25, -25, -28, -8, -42, -30, -39, -14, 41, 35, 8, 18, -58, -8, -6, 5, -50, 2, -12, 6, -37, -11, -64, -9, -27, -24, 32, 103, -26, 10, -27, 22, 6, 1, -2, -4, -10, 58, -12, 8, 3, -32, -73, -115, -34, 2, 48, 27, 15, 20, 15, 21, -3, -55, 6, 8, -1, -59, 7, -27, 28, -22, 2, 15, 3, -11, -4, 22, 16, -3, -39, -20, 17, 12, 15, -2, -29, 9, 62, 99, 0, 31, 6, 48, -3, 48, 2, -59, -11, 10, -17, 8, 13, -4, -19, -21, 11, -7, -7, 27, 17, 19, -26, -13, -14, -27, 12, 6, -11, -26, 26, -10, -26, 42, -42, 38, 18, 10, -5, -52, -23, -1, -26, 10, 49, 25, 23, -71, -8, -17, 27, -35, 10, 46, -14, -33, 15, -27, -32, -19, -17, -2, 52, 2, -2, 48, -34, -61, -57, -4, -58, -14, -1, -50, -4, -53, 16, -69, -5, -46, -51, -12, -60, -77, 16, 69, 5, -23, 4, -13, 7, 9, 5, 19, -29, 3, -7, -2, 10, -12, -24, 13, 22, -11, 27, 24, 8, 23, 7, 20, 12, 7, -68, 13, -39, 11, -14, -25, -24, -31, -13, 21, -17, -15, -43, -24, -73, 5, 25, -11, -3, 44, -19, 55, 21, -22, 7, -9, 5, 59, 69, 36, 27, 47, 33, 36, 40, 10, 34, 21, 19, -10, 45, -23, 25, 26, -43, 1, 23, -14, -62, -51, 2, -1, 0, 106, -1, 22, 41, 18, -2, 21, 12, -2, -8, 7, 36, 23, -40, 15, 29, -10, -4, -13, 8, 21, 13, -20, 75, 3, 14, 7, 23, 31, 12, 2, -5, 101, -14, -59, 44, -24, 48, 33, 21, 1, -11, -1, 26, 1, -8, 2, -28, 2, -22, -59, -23, -6, 8, 7, 43, -48, 17, -11, -26, 10, -14, -21, 5, 46, 8, 1, -12, 8, 29, -2, 47, 67, 18, 15, -9, 6, -29, 83, 17, 47, 3, 7, -2, -16, -30, -50, 5, 1, 25, 47, 33, 2, 17, -23, 1, 2, -9, 52, 5, -13, 15, -15, -21, 18, 24, 22, -24, 12, -2, -5, -47, -65, 8, -20, 13, -34, 2, 11, 27, 6, -51, -5, -74, 10, 35, -63, -14, 32, 17, 20, 4, -13, -56, -43, 2, 34, -1, 32, -10, 18, -14, 15, 10, 1, 7, -8, -23, -2, -6, -19, -24, 5, -36, -23, -12, 10, 20, -52, 22, -17, -11, 34, 4, -29, -19, 26, 4, -21, -17, 8, -52, -9, 32, 20, -72, -8, 5, 4, -9, -63, -15, -20, -3, 3, 56, 12, -68, -31, -22, -52, -9, -13, 3, -6, 18, -35, 2, -52, 31, -15, -25, -5, -34, -17, -43, -20, -1, 13, 18, 27, -8, -3, 14, 10, -67, 8, 9, 52, 12, 22, 10, 43, -12, -49, -4, 23, 14, -20, 41, 25, -15, -14, 23, -31, -34, 1, -25, -6, -27, 3, 15, 13, 0, 16, 31, 23, 24, 5, 27, 25, -2, 4, -26, -26, -17, 22, 21, -52, -34, -52, -18, 59, -55, 1, -33, 2, 42, -9, 13, 24, 7, -15, 18, 17, 18, 21, -9, -11, -22, 34, 48, 21, 16, -47, 24, -31, -7, -46, -35, 29, -47, 29, -17, 5, 41, 14, -7, 17, -35, -40, -33, 45, 30, 15, -2, 27, 5, 19, -7, 8, 44, 19, -18, -13, 18, -23, 33, 8, 7, 18, -18, -16, 20, 17, -11, 19, -69, 93, 20, 17, 13, 7, -3, -12, -2, -10, 12, -17, 13, 22, -19, -31, -24, 5, -61, 34, -3, -9, 15, 47, 1, -26, 66, 42, 22, -5, 11, -24, 11, -4, -22, 5, 4, -3, -26, -35, 23, 23, -55, -39, -53, 24, -10, 8, -25, 50, -23, 46, 41, -7, 4, -33, 2, -14, 6, -12, 27, 41, -4, 7, 5, 17, -6, 26, -20, 9, -13, -14, 15, 19, -5, -23, 50, 26, 8, -1, 18, 2, 11, 26, -7, -42, 1, -54, -10, 76, 23, -25, 4, 21, 6, -11, -25, 13, -21, 1, 31, 4, 19, 20, 12, -46, 8, 14, -16, -13, 20, 21, 6, 21, -23, -2, 22, 8, 10, 23, -4, -16, 11, 18, -28, 2, 8, 0, 1, 7, 38, 27, -6, 68, -9, 39, -32, 6, 43, 11, 22, -4, 24, -6, 15, -6, 17, -5, -36, 46, 31, -44, 24, 9, 5, 10, 9, -2, 25, -57, -23, 4, 10, 0, -49, 16, -14, 29, 32, 30, -24, -10, 68, 78, 21, 15, -13, 23, -37, 12, 0, -37, 20, -25, -17, -66, -18, 12, 4, 20, 11, -12, 5, 56, 11, 18, 7, 33, 3, -70, 32, 5, 18, 22, -31, -8, -20, -15, -3, 18, -23, 18, 7, -31, 57, 47, 11, 67, 74, -13, 69, 7, -14, -17, 0, -92, 20, 26, -55, 44, 6, 11, -9, 52, -18, 36, -11, 44, 11, -1, -69, -28, 27, -4, -27, 5, 18, -2, 39, -17, 3, -29, -21, 12, 21, 31, -26, 62, -13, 24, -34, 1, -23, 48, 27, 13, 8, 23, -30, 14, -43, -43, 48, 9, 45, -17, 27, 15, 16, 27, 33, 8, -39, -39, -9, 0, 17, 14, -23, -17, 8, -22, 41, 24, 13, -82, -17, 13, -8, -32, -74, 4, 2, 17, 8, -46, -51, 16, -43, -53, -25, -47, -6, 27, 8, -48, 24, -9, 7, -32, 9, 19, 8, -4, -31, 3, -9, 49, 46, -9, 23, 23, -10, 18, 27, 22, 31, -35, 39, 38, 48, -29, 14, -9, 2, 48, -1, 18, 23, -18, 12, 38, -33, -13, -6, 11, -21, 4, 10, 53, 34, -69, -40, -31, -47, -77, -13, 3, -5, 12, -30, -56, -5, 34, -9, -4, -34, 14, 25, -7, 9, -46, -12, 19, 8, 32, -37, 0, 34, 17, -13, -11, -7, -24, -59, -37, -67, 4, 6, 6, 22, 4, 45, 6, 5, 19, 8, -34, -45, -11, 4, 21, 23, -38, 23, -31, -9, 2, -4, -10, -15, -59, 0, -14, -51, 37, -22, -34, -36, -18, -2, 12, -26, 13, 0, -22, -10, 16, -19, -56, -28, 14, 7, -17, -18, -17, -8, -15, 30, 23, -6, 10, -1, -57, -48, -3, 25, 22, 42, 16, -27, -16, -10, -16, 9, 20, 17, 22, 58, 35, 33, 46, 7, 20, 25, -12, 12, 41, -22, -39, -44, -8, 3, -21, -27, -16, -27, -1, 16, -10, 22, -7, -28, 9, -3, 4, -11, -16, -61, -66, 13, -25, -30, -16, 9, 1, -13, 8, 19, -8, -44, 10, -48, -58, -4, -24, 6, 7, 24, -28, 20, -12, -11, -19, -3, -3, -23, 5, -2, 24, -25, -16, 8, -21, -12, 13, -14, -55, -10, -13, 20, -27, 20, 1, -40, -38, -15, -30, -60, 6, -6, -35, 19, -21, -13, 19, -1, -33, 23, 17, -14, 3, -2, 5, 0, -73, -34, -21, -2, -61, 7, 3, -14, 30, 9, 0, -40, -6, 39, -18, -40, 3, -24, -57, 6, 36, -20, -19, -18, -10, 34, -7, -7, 18, 5, -39, 19, -4, -4, -24, -11, 42, -5, -7, 15, -26, 28, -1, 38, 17, 12, 54, -5, -42, -14, -57, 9, 5, 4, 23, -46, -9, 2, 7, 4, 27, -91, -5, -11, -25, -22, -61, 16, -9, 2, -6, 19, -9, 25, 27, -65, -5, -10, -12, 13, -16, -17, 6, 39, -9, -23, 8, 0, 23, 5, -10, 3, 9, -69, 11, 42, -3, 33, -64, 7, -48, 31, 3, 15, -14, 18, -32, -21, -36, -13, 1, -13, 0, -51, -42, 2, -16, 9, 10, -64, -1, 8, 19, -40, -21, -93, 33, 10, 20, -50, -18, 9, -35, 26, 8, -3, 13, 29, -10, -22, -40, 13, -24, 2, -5, 6, 11, 19, 21, 2, -9, -53, -18, 1, -9, 32, 20, 21, 7, 32, 11, 6, -46, 3, -6, -21, -43, -2, 4, -4, -52, -18, -3, -19, -41, 10, 20, -2, -45, -20, 3, 10, -28, 3, -2, -6, 5, -15, 0, -21, -1, -3, -7, 7, -6, -38, -46, 19, 6, 23, -4, -6, -55, -3, -27, 11, 19, 3, -5, 4, -32, -17, -48, 3, 0, -57, 29, -54, -3, 3, 22, 31, -12, -18, -14, 14, -21, 0, -77, 18, 19, 40, -7, 13, -58, 36, -20, -10, 1, 21, -25, -10, 3, 5, 13, -15, -10, 13, 8, -29, -2, 10, -10, -27, -42, 6, 17, -5, -7, -16, -3, -24, 19, 41, -13, -3, 5, -29, 29, -14, -91, -7, -46, 12, 9, -6, -9, 16, -30, -67, 16, -11, 3, 13, 22, -15, 28, -8, -17, 15, 27, -33, -39, -20, 19, 15, 16, 2, -39, -13, -8, 1, -2, 9, -26, 0, -34, -17, 22, -47, -17, 11, -14, -35, -7, 13, -42, 13, -10, -30, -33, 4, -22, -3, 5, -12, 35, 16, 8, 24, 4, 15, -5, -18, 4, -5, 36, 2, 24, 1, -5, 7, 15, 22, 7, 20, 24, -32, 9, 19, 30, -12, -45, 28, 5, -19, 51, 21, 32, 13, 9, -74, -37, 14, 42, 10, -1, -31, -34, -64, -26, 6, -83, 4, -9, 22, 12, -17, -62, 37, -13, -40, 12, -25, 31, -21, 27, 11, -6, 1, 64, 16, 1, -48, -2, -92, 32, -25, -12, -18, -68, 40, -33, -20, -12, -11, -30, 15, -42, -49, 10, 11, -9, -36, -19, 4, 16, 28, -112, -47, -14, -10, 43, 74, -28, 11, 13, -16, 16, -44, 7, 15, -6, 16, -62, 32, -12, -41, -10, 5, 38, 16, 26, -93, -41, -10, 50, -10, 12, 19, -16, -40, 16, -23, -5, 13, 28, 15, 19, -36, 49, -1, -9, 57, 8, -18, -13, 16, 27, 27, 22, 17, -11, -2, -21, 7, 4, 13, -1, -7, -12, 8, -33, 15, 3, 21, -12, 28, 27, -38, -23, 11, 1, 5, 16, 21, 20, -23, -41, 33, 9, 19, 0, -28, 22, 5, 29, -58, -26, -18, 39, 22, 0, 22, -68, 6, -13, -22, -13, 14, 54, 37, 0, 12, 28, 21, -21, 23, 15, -39, 25, 26, 1, -5, 31, 8, 2, 25, 20, -7, -14, 41, 32, 34, -42, 2, -21, -11, 37, 22, -31, -10, 17, -44, -5, -18, 26, -3, -10, -32, 31, -45, 4, 44, -6, 33, 38, 11, -33, -58, -32, 10, -23, -70, -14, 13, 38, 7, 24, 47, 4, -10, 2, -11, 33, -6, 5, 6, 11, 13, -13, -16, -68, 26, -10, -14, -4, -15, -42, 19, -18, -38, 9, 4, 40, -30, -5, -11, -7, 5, -20, -30, 3, 9, -2, 1, -7, -23, -78, -41, 24, 15, -30, -78, 17, -30, -39, 15, 35, 19, 15, -25, 15, -66, -52, 17, 6, -38, -5, -11, -10, 10, -17, 36, -59, -10, -8, 14, -53, -11, -11, 35, 32, -15, -14, -33, -60, 17, -84, 2, 0, -59, -65, -21, 8, -22, 18, 19, 5, -35, -45, -34, -33, 2, 18, -24, 36, -8, 14, 5, -6, 7, -7, -109, 0, 10, 6, -35, -8, -3, 50, 16, 44, 6, -19, -21, -2, -8, -7, 45, -9, -29, -22, -12, -1, 20, -2, 3, -52, -19, 12, 12, 31, 11, 17, 90, 11, 40, -9, -79, 24, -18, -10, -21, 18, 2, 21, -58, -14, 12, -25, 24, 11, -3, 0, -1, -5, -4, 28, 14, -54, 23, 10, 45, 15, 13, -13, -28, -17, 10, -36, -12, -10, -13, -30, -6, -1, -10, -1, -19, 25, 9, 14, -14, 4, -56, 27, 14, -16, 52, -14, 20, -1, 4, -6, 4, 31, 8, -8, 26, -58, 37, -4, -19, 63, -12, -22, -7, 8, -13, 39, -48, -10, 21, -13, 8, -2, -71, -20, -3, -52, -5, -5, 17, -29, -9, -47, -5, -7, 38, -20, 10, -14, -2, 21, 12, -23, -4, -28, -7, -33, -1, 5, -65, 2, 39, 16, -20, 2, -30, 32, 19, -49, 34, -64, -9, -36, -5, -8, -1, 47, -27, 32, -15, -48, 26, -7, -40, 19, -50, -58, -26, -9, -11, -5, -36, -10, -3, -9, -14, 17, -85, 8, -22, 1, 3, -64, 11, -95, 22, -23, -3, 3, 9, -12, -13, 8, -2, 15, -36, -23, -33, 20, -35, -49, 7, 17, 20, -43, 13, 19, -14, 13, -72, 21, 9, -53, 4, -54, -5, 14, 17, -22, 35, 15, 32, 58, -41, -46, -14, -4, 25, -6, -36, -35, 13, -13, -5, -21, -22, -20, -30, -6, -39, 43, -39, -32, -21, -41, 22, -53, 4, -1, 20, -17, 31, -11, 6, -20, -71, 70, 5, -9, -19, -6, -3, -77, -33, -35, -17, -48, 35, 14, 18, 0, -35, -6, -3, 69, -24, -39, 8, -11, -64, -38, 3, -24, 23, 16, 53, 0, -36, 2, 14, -60, 54, 1, -11, -67, 1, -30, -9, 0, -6, 23, -4, -8, 4, -21, -50, -11, -11, 55, 9, -25, 0, -30, -20, 27, 39, 16, -10, -49, 9, 1, 21, -20, 17, 5, -34, -23, 1, 26, 17, -4, 2, 14, -8, 5, -45, -20, -3, 53, 27, -6, 14, -30, -10, 16, -17, -13, 22, -7, 29, 21, -17, -8, -1, -19, 46, 54, -47, -36, 25, -10, -53, 2, 33, 19, 30, 13, -13, -19, -3, -1, 10, -8, 2, -34, -14, -17, 13, -22, 0, 7, -7, 18, -21, 15, -6, -4, 38, 24, -40, 19, -6, 7, 7, 9, -3, -72, -35, -18, 1, -11, -21, 16, 14, -61, 14, 9, 26, 18, 31, -23, -9, 51, -17, 18, -6, -67, 6, 21, -14, -13, 10, 1, -1, 18, -3, -38, 64, -65, -24, -10, -2, 1, -32, 3, 5, -4, -5, -100, -58, -37, 50, -12, 15, 0, -18, -8, 10, 16, 13, -11, -47, 8, -39, -36, 45, 20, 6, -14, -18, -37, -16, -25, 16, 31, -59, 20, 44, -31, 61, -10, -5, 3, 17, -35, 57, -5, 1, -8, 1, 18, -43, 8, -11, -25, 28, -87, 19, 21, -26, -52, 17, 5, -31, 10, -41, 44, -5, -55, 13, -41, 20, -42, -9, 23, -20, 2, -7, -39, -1, 1, -16, 12, -18, -11, -74, -8, 8, -41, 4, 38, -23, 7, -3, 25, -1, -2, -20, -2, -21, 14, -8, 17, 9, -10, -24, -7, -6, 4, -25, -7, 48, 24, -22, 51, 36, -29, -35, 11, 12, -8, 38, 22, -1, -10, -10, 10, 3, -26, 71, -15, -4, -33, -6, 64, 10, 19, 7, 10, -2, -9, 2, -22, -4, 10, 14, -26, -4, -4, 60, -24, 11, -23, 19, 66, 2, 9, -53, -5, -17, 11, -26, -27, 42, 40, -1, -20, -28, -60, 0, -9, -17, -3, 17, -40, -2, -12, -4, 53, 45, -11, 1, 38, -17, -2, 44, 2, -22, -14, 19, -8, 37, -27, 26, -39, 58, 25, 4, -31, 20, 11, -18, 92, 17, -25, -11, 7, -5, 16, -37, 18, -7, 35, 36, 29, -104, 54, 40, -34, 37, 17, 3, -19, -23, -20, -5, -54, -20, -51, -9, 39, -76, 38, 34, -1, -26, -1, 18, -39, -24, -3, -23, 32, -13, -12, 14, 20, 21, -40, 13, -35, -19, -38, 57, 6, -20, 18, -5, 25, -25, -11, -9, 20, -2, -110, -48, 32, 57, 1, 30, -11, -20, 5, -8, 6, 8, 15, -64, 59, -8, 11, 54, 47, 18, 18, 7, 62, -13, -16, -11, -18, 41, 23, 11, 17, -26, -18, 32, -3, 18, -19, 9, -12, 11, 22, 13, 27, -41, 27, 49, -57, 9, -42, 10, 21, -15, -16, -27, -17, 9, 22, 9, 26, 2, -59, 8, 22, 31, 16, -2, 36, 49, -18, 45, -4, 3, 16, 17, 35, 8, -12, 68, 26, -1, 5, -7, 12, 11, -13, 44, 5, 22, 6, -25, -7, -26, 20, -15, 29, 36, 39, 0, 25, -1, 2, 20, 24, -20, -7, 14, -3, -30, -39, 53, 4, -3, 18, 9, 11, 16, -5, -12, -7, 19, 14, -13, 4, -17, -7, -2, 32, 14, -30, -1, 51, -2, -20, 0, -4, -21, -18, 16, 8, 0, 24, 27, 30, -4, 28, -19, 20, 38, -2, 52, 6, 7, 25, -12, 32, 37, -2, 10, 8, 32, -16, 18, 46, 28, 8, 16, 18, 9, 0, 23, 15, -15, 51, 38, -6, -6, -15, -18, 2, 9, -8, 28, -5, -3, -6, 5, 17, 8, -14, 4, 1, 8, -91, -2, 27, -9, -20, 12, 12, 1, 4, 1, 20, -9, 0, 7, 36, 12, 33, 2, -24, 8, -10, 14, -11, 34, 51, 15, -15, -45, -9, 2, 37, 31, 48, 2, 14, 5, -1, 29, 46, -13, 51, 14, 28, -2, -7, 21, 3, 21, -37, -22, 12, -9, -14, 23, -51, -1, -9, 30, -14, -5, 18, 4, 30, -20, -3, 7, -10, -4, 15, 0, -31, -13, -56, -51, -56, -2, 35, 16, 8, 9, 2, -5, 15, 12, -20, 15, 21, -29, -32, -21, 41, 27, 14, 43, -35, 63, -19, -16, -66, 25, 11, 61, 5, -33, -72, 27, 0, 4, 22, -5, 11, -37, -5, -53, 16, -17, -14, 22, 24, 18, -9, -39, -33, 30, 1, -45, -17, -36, 30, 27, 25, -3, -74, -27, -75, 0, -35, -87, 50, -24, 6, 30, -9, 12, 36, 6, -8, 6, -6, 6, -20, 13, 10, 8, -14, -12, -15, -2, -33, 11, -65, -14, 89, -30, -16, -59, -7, 14, -1, 30, 0, 33, -39, 4, 24, -65, 22, -33, -30, 1, 14, -87, 31, -14, -27, -66, -47, -8, 0, -62, -1, -8, 53, 13, -10, -3, 20, -11, 7, -18, -24, 26, -5, -3, 7, -3, 24, -36, -13, -10, 47, -7, -18, 5, 18, 21, -10, 9, -79, -22, 38, 7, 18, 1, -26, 17, 32, 0, -24, 25, 25, 42, 51, 39, -1, -15, 10, -32, -12, 6, -85, 21, -9, 2, 20, -14, 14, -27, -8, 34, 8, 43, -5, 33, -95, -5, 2, 0, 39, 33, 8, 14, 2, -11, -12, -45, -14, 16, -48, 66, 26, -64, -5, 18, -45, 25, 27, 69, -34, 19, -7, -8, -27, 47, 26, 31, 17, -8, 74, 19, 3, 32, -22, -15, -5, -12, 36, -7, -35, 33, 69, 12, 9, 13, -15, 21, -15, 0, -45, 7, -23, -7, -13, 39, 10, 1, -39, 16, -3, 56, 13, -6, -14, -38, -22, -9, -49, -29, -42, -18, 14, -10, 12, -56, -30, -18, -44, -17, 25, 7, -5, 38, -69, -31, -26, -28, 3, 12, -10, -21, -6, 35, -13, -18, -50, 0, -33, 48, -111, -39, 1, 24, -7, -3, 27, 41, -117, -26, -40, 3, 26, -57, -49, 32, -13, 11, 1, -47, -16, 1, 6, -12, -12, -5, 41, -44, 24, -4, -23, 56, -31, 0, 28, -20, -23, -32, 6, -61, 6, 18, 10, -2, -40, -20, -13, 10, 0, -2, -13, 28, 8, -6, -6, 4, -10, 8, -3, 4, 1, 19, 4, -22, 17, -11, 24, -5, 15, 21, 55, -25, 9, 18, 62, 12, 28, 10, -3, 28, -7, -10, -40, 20, 8, 27, -16, -1, 44, -1, 17, 21, -47, -11, 2, -4, -8, 48, 61, -46, 15, -3, 11, 41, 6, 41, -31, 8, 54, -29, -22, -11, 17, 15, 2, 2, 3, -8, 19, 11, 4, 27, -20, -7, 24, 16, 11, 7, 15, 1, 12, 22, 13, -42, -10, -26, 12, -2, -25, 55, 8, 17, 11, 32, 33, 23, 14, 36, -28, 31, 41, 44, 7, -33, 19, 10, 59, -9, 19, -11, 0, 35, 9, 19, -12, 19, 11, 26, -27, 1, 32, 18, 11, -7, 8, -20, -2, 48, 33, 13, -22, 23, 6, 13, 51, -34, 58, -1, 15, -8, 14, -25, -11, 0, -5, 42, 34, 32, 26, 57, 31, -2, 35, 4, -1, 23, 29, -29, -12, 15, -11, 7, 26, 59, 14, -2, 24, 20, -13, -6, 7, 31, 6, -33, -21, 21, -7, 12, 3, -17, -38, -12, 14, -27, 25, 27, -7, -64, -47, 56, 54, -11, 20, 9, -9, 6, -45, 10, 33, 2, -7, -20, 27, -43, 34, -53, 8, 12, 45, 40, 23, -4, 4, 22, -4, 0, -17, 11, 30, 1, 18, -60, -62, -26, -1, -26, 25, 9, -3, 2, 5, 17, 11, -15, 50, 31, 7, 42, 5, -3, -15, -17, -3, 13, 29, -50, -23, -18, -17, 34, -6, 14, 22, -82, -27, 4, 7, -6, 16, -8, -48, 39, 6, -19, -8, 15, 9, -12, -17, -17, -11, -58, 4, 9, -50, 23, 18, 19, 0, -43, -45, 3, 41, -5, 11, -37, 7, -2, -14, -25, 12, 16, 17, 44, -24, -40, 10, 14, -53, 52, -1, 18, -33, 5, 23, 0, 4, 21, -31, -28, 10, -8, -4, 5, -3, 1, -17, -35, -20, -3, -9, -15, 11, -55, 22, -4, -52, -30, 5, 2, -16, -1, -11, -28, -4, 26, 0, 11, 0, 11, -37, -1, 29, 10, -81, 15, 13, 2, 7, -14, 2, 37, 1, -16, 29, -36, 2, 26, -12, -4, -34, -17, 49, 12, -11, -9, -14, 24, 9, -2, -42, -3, 17, -28, -2, -35, -68, 20, -20, -3, -6, -19, -20, 11, 22, 13, 5, -70, -19, 4, -32, -31, 4, -10, -7, 10, -13, 23, -1, 14, -4, -68, 23, -35, 13, -93, -2, 2, -7, 19, -32, -18, -20, -10, 15, 4, 2, 1, 23, -32, 37, 37, -1, 29, -8, 8, -1, -10, 3, 15, -33, 9, -43, -74, -8, -8, 6, -26, 4, -10, -9, 10, -19, 5, 9, -21, -23, -3, -2, -15, -14, -100, 20, -25, -1, -22, -17, 3, -9, 11, 16, 20, -3, -41, -22, -27, -22, -9, -9, 16, 30, -18, 43, 0, 2, 39, 45, -57, 15, 6, -18, -11, 56, 14, -17, 42, 13, 0, -13, 7, -34, 32, -44, 18, -1, 9, 32, 31, 3, -11, -13, -2, 1, 10, -41, -28, 24, -19, 16, -17, -32, -20, -2, -53, -6, 26, -13, -40, 29, -9, 2, -6, -74, 5, -6, -29, -7, -41, -66, -27, -35, -13, -11, -15, 3, 19, -2, -14, -10, 11, 13, 16, 7, -14, 0, -16, -7, 32, -5, -3, 8, 46, 30, 3, -7, -17, 53, -40, -10, 27, 24, 29, -50, -17, -3, 64, 9, 11, 16, -16, 15, 28, 24, -22, 14, -19, 13, -8, -40, 27, -16, -35, -1, -19, -14, 31, 24, 0, -3, 32, -35, -19, -2, 52, 7, -12, 23, -23, -27, 37, 8, 7, 32, -7, -6, 24, -22, -51, 2, 37, 16, -2, -2, 27, -33, -2, -65, -27, -20, 3, -9, 3, 6, -2, 42, -66, -6, 15, -20, 33, 50, -75, 40, 5, -21, 47, 33, -8, -2, -42, -34, 7, -37, 26, -40, -10, 34, -7, -26, 33, 16, 15, -18, 4, -54, -1, -21, 6, -43, 2, 27, 1, -32, 24, 46, -25, -66, 3, -30, 25, -41, 8, 16, -47, 6, 40, -22, -29, -19, -22, 11, -7, 33, -8, -9, 7, -14, -30, -10, -17, -4, 12, 51, -3, 65, -24, 33, -4, 12, 5, 10, 3, 51, 13, -44, -12, -31, 46, -51, -31, 40, 1, 51, 39, 29, -9, 9, 10, -44, -67, 12, 16, 12, 2, 0, 7, -68, -15, -13, -26, 9, -48, -40, 2, -14, -5, 21, -30, -2, 34, -31, 57, 15, 7, -33, -55, -23, -43, -17, 45, 22, 30, 39, 51, 60, 29, -11, -11, 2, -14, 72, 47, 13, 39, 35, -27, -6, -18, 0, 28, 27, 5, -24, 42, 15, -51, 18, 52, 3, 21, -17, -17, -44, -49, -26, -23, -5, 2, 68, -26, -24, 11, -34, 12, 20, -5, -64, -10, 28, 13, -18, -88, -24, 7, 16, 3, 29, -7, -26, -33, -13, -36, 36, 14, -4, 13, -12, 27, -3, 21, -18, 3, 9, 40, 22, 20, -15, -14, -19, 23, 21, -1, 9, 27, 10, 28, -15, 3, -11, 3, 13, 10, -6, -12, -10, -15, -7, -27, -14, -20, 2, 1, 24, -26, -24, 25, 7, -17, -15, 29, -10, 10, 40, 2, -2, -12, 16, 12, 14, 1, 11, 7, -35, -4, 11, -22, 8, 5, -10, -11, -25, -37, -12, 14, 13, -18, -6, -12, -21, 11, 9, -9, -20, -17, 17, -19, -26, 0, 17, 26, 0, 35, -1, -21, -31, -7, -29, 17, 24, 4, -47, 23, 15, 24, 24, -34, 10, -13, 19, -29, 30, -54, -11, 19, -3, 3, 80, 13, 13, 8, -2, 39, 28, -34, 27, -3, 47, -41, -32, -14, 6, -8, -1, 15, 6, 33, -31, -11, -29, 40, -27, 17, 9, 16, 22, -20, 1, -6, 64, -3, -4, -7, 7, 49, 12, 18, 30, -12, 35, 7, 16, 2, 62, -65, -7, -28, -29, -11, -68, 12, 1, -62, 22, 14, 11, 13, -25, 29, 21, 16, 25, -9, 18, -19, -32, 41, -12, -11, 43, 35, -31, 23, -71, -50, 24, 18}

#define TENSOR_CONV2D_5_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_5_BIAS_0 {-9, 28, 7, -16, 17, 3, -102, -35, -64, -35, -6, -1, 26, -17, 1, 6, -5, -4, -110, 3, -4, 36, -1, -1}

#define TENSOR_CONV2D_5_BIAS_0_DEC_BITS {7}

#define CONV2D_5_BIAS_LSHIFT {5}

#define CONV2D_5_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_6_KERNEL_0 {-1, 6, 0, 17, 26, -18, -10, 4, 14, 17, 14, -7, 7, 5, 0, 20, 21, 1, -16, 20, -1, 2, -2, 21, -6, 13, 14, 6, 1, 10, -19, -31, -18, -15, 12, 22, 14, -26, -1, 13, -2, 5, -49, -23, 22, 9, -19, 8, 4, 8, 14, 17, -16, 17, -7, -11, -15, 19, -15, -17, 16, -4, -17, 4, -38, -25, 1, -28, -16, 9, 15, 13, -8, 13, -4, 4, 1, -3, -14, 3, 14, 16, 6, -5, 13, -3, -33, 17, 3, -19, -3, -10, 4, -10, -14, 6, -4, 2, -4, -14, 14, -7, -1, 8, -15, 12, -27, -59, 2, -12, -89, 8, -20, -79, 11, 2, -20, 11, -74, -19, 2, 9, 9, -53, 17, -4, 4, 8, -12, -6, -37, -22, 9, -3, -79, 2, -23, -65, 1, 7, -8, 11, -73, -9, 2, 14, -5, 5, 13, 23, -13, 15, 2, -1, -14, 3, 12, 0, -5, -2, -14, 4, -26, 6, 8, -7, 3, 13, -5, -12, 4, 5, 3, 13, -27, -8, 8, 4, 3, -28, -13, 9, -1, 3, 8, -7, -25, -6, 1, -27, -14, 6, -5, 12, -34, -54, -37, 24, -67, 3, -12, -23, -30, -3, 8, -7, 1, 6, 9, -9, -27, -25, -3, -15, -10, -18, -6, -26, 1, 6, 19, 5, -51, 36, -12, 5, 9, 0, -30, 11, 12, 0, 16, -7, -15, 56, -26, -31, 7, -28, 3, 9, 18, -6, -8, 10, 9, 4, -45, 33, -4, -22, 12, 11, -12, -2, 6, -18, 18, -19, -14, 6, 3, 26, -8, -20, 17, 2, -16, 12, 24, 12, -20, -8, 2, -4, -3, 16, 0, 7, -22, 5, 31, 9, 22, -11, -6, -10, -6, -11, -6, 8, 11, -3, -6, 4, 18, -4, 1, 8, 6, -13, 4, -7, 8, 15, 0, 33, 1, -13, -2, -15, -4, 13, -16, 12, 19, -34, -1, 9, 39, 4, -8, -42, 13, -23, -39, 6, -25, -30, -1, 9, -54, 9, -29, -1, 4, -2, -46, -5, -50, -2, -12, 62, -10, 0, -12, -11, 29, -22, -29, -24, -10, 1, -35, -33, 8, 10, -15, 2, -4, -6, -6, -16, 1, 22, 1, 15, 17, -3, -12, 23, 4, -31, -7, -32, -2, 13, 6, -36, -1, 9, 3, 4, -6, 1, 4, -9, 20, -45, -4, 23, -1, -16, -10, -10, -10, 17, 1, -12, 27, 19, -5, 16, -5, 2, 8, 14, 9, -19, 20, 13, 7, -15, -18, -3, -39, -31, 16, 18, -10, -2, 1, 0, 13, 7, 9, 4, 12, -13, -7, -2, -1, -27, -18, 8, -17, 14, 8, 7, 22, 5, 5, -3, 5, -19, -34, -18, -15, 6, -13, -23, 2, 8, 4, -2, -2, 7, -25, -11, -29, 17, 10, 4, -3, 9, -8, 16, 15, -31, -8, -22, -31, 8, 5, -27, 14, 5, 3, 3, 6, -3, -43, -4, -5, -38, 9, -14, 6, -18, 3, 11, -19, 8, 11, -15, 11, 9, -1, 4, 7, -47, 2, -19, -7, -19, -9, -10, 8, -1, 4, -12, 19, 4, 17, 11, -34, 10, 9, -17, 8, 7, 18, 7, -2, -8, 11, -3, -7, 8, 1, 11, -23, 7, 9, 9, 34, 21, 8, -3, 13, 15, -4, -26, -1, -3, 3, -21, 2, 11, 16, 19, -10, -10, 2, 9, -12, 4, 14, 16, -10, 14, 1, 5, -13, -19, 1, -19, 10, 8, 24, 15, 7, -4, -9, 14}

#define TENSOR_CONV2D_6_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_6_BIAS_0 {33, 47, 78, -23, 7, -13, 24, 7, 9, 9, -26, -74}

#define TENSOR_CONV2D_6_BIAS_0_DEC_BITS {8}

#define CONV2D_6_BIAS_LSHIFT {0}

#define CONV2D_6_OUTPUT_RSHIFT {7}

#define TENSOR_CONV2D_7_KERNEL_0 {3, -8, -11, 9, 13, -13, 11, 21, -10, 5, 12, 0, -21, 10, -12, 2, 12, 2, 11, 2, -5, 4, 1, 2, -33, 8, -25, -1, -2, 10, -1, -35, 11, -48, 21, 5, 1, 22, 8, -11, 8, -27, 14, -1, -15, -18, -3, -20, -8, 14, 24, -16, -28, -3, 3, -6, 11, -36, 9, 7, -24, 10, 10, -2, -15, -15, 11, 5, -32, -27, 6, -3, -18, -14, -19, -25, 100, 6, -4, -22, 6, -4, 7, -10, 13, -1, 5, -18, 3, -12, 11, -2, -8, -7, -3, -4, -2, -11, -11, 19, 49, -10, -1, 12, 0, 2, -28, -8, 4, -9, -2, 9, 16, -26, 23, 0, 17, -21, -11, -62, -13, -3, 27, 5, 18, 2, 0, -16, -1, -36, 13, 13, -12, 0, 23, 25, 30, -20, 20, -4, -18, -31, 4, -11, 4, -27, -14, 7, 23, -22, 7, 30, -20, 5, 13, 0, -24, 16, 8, 1, 13, 4, 9, -2, 1, 6, 4, 1, -8, -34, -21, 15, 8, -40, 32, 28, 22, -5, -56, -50, 13, 7, 6, 11, 13, 6, -32, -10, 2, -1, -4, -31}

#define TENSOR_CONV2D_7_KERNEL_0_DEC_BITS {5}

#define TENSOR_CONV2D_7_BIAS_0 {-3, 6, -5, 7, 0, -4, -2, -10}

#define TENSOR_CONV2D_7_BIAS_0_DEC_BITS {5}

#define CONV2D_7_BIAS_LSHIFT {0}

#define CONV2D_7_OUTPUT_RSHIFT {5}

#define TENSOR_DENSE_1_KERNEL_0 {16, 11, -33, 23, 6, -26, -14, -41, -40, 16, -44, 12, 7, 10, 20, 17, -59, -24, 16, 12, 14, 6, 9, -15, -29, 16, -51, -31, 10, -23, 17, 11, -41, -99, 15, -87, -95, 10, -37, -80, -45, -38, -34, 10, 12, -32, -38, 22}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {5}

#define TENSOR_DENSE_1_BIAS_0 {36, -66, -91, 12, 81, 27}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {6}

#define DENSE_1_BIAS_LSHIFT {0}

#define DENSE_1_OUTPUT_RSHIFT {6}


/* output q format for each layer */
#define CONV2D_4_INPUT_OUTPUT_DEC 9
#define CONV2D_4_INPUT_OUTPUT_OFFSET 0
#define CONV2D_4_OUTPUT_DEC 6
#define CONV2D_4_OUTPUT_OFFSET 0
#define RE_LU_4_OUTPUT_DEC 6
#define RE_LU_4_OUTPUT_OFFSET 0
#define CONV2D_5_OUTPUT_DEC 3
#define CONV2D_5_OUTPUT_OFFSET 0
#define RE_LU_5_OUTPUT_DEC 3
#define RE_LU_5_OUTPUT_OFFSET 0
#define CONV2D_6_OUTPUT_DEC 1
#define CONV2D_6_OUTPUT_OFFSET 0
#define RE_LU_6_OUTPUT_DEC 1
#define RE_LU_6_OUTPUT_OFFSET 0
#define CONV2D_7_OUTPUT_DEC 1
#define CONV2D_7_OUTPUT_OFFSET 0
#define RE_LU_7_OUTPUT_DEC 1
#define RE_LU_7_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_DEC 1
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define FLATTEN_1_OUTPUT_DEC 1
#define FLATTEN_1_OUTPUT_OFFSET 0
#define DROPOUT_1_OUTPUT_DEC 1
#define DROPOUT_1_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC 0
#define DENSE_1_OUTPUT_OFFSET 0
#define SOFTMAX_1_OUTPUT_DEC 7
#define SOFTMAX_1_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {9};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_4_input_config = {
    .super = {.name = "conv2d_4_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_4_kernel_0_data[] = TENSOR_CONV2D_4_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_4_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_dec[] = TENSOR_CONV2D_4_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_kernel_0 = {
    .p_data = (void*)tensor_conv2d_4_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_4_bias_0_data[] = TENSOR_CONV2D_4_BIAS_0;

const nnom_shape_data_t tensor_conv2d_4_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_4_bias_0_dec[] = TENSOR_CONV2D_4_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_bias_0 = {
    .p_data = (void*)tensor_conv2d_4_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_4_output_shift[] = CONV2D_4_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_4_bias_shift[] = CONV2D_4_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_4_config = {
    .super = {.name = "conv2d_4"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_4_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_4_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_4_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_4_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_5_kernel_0_data[] = TENSOR_CONV2D_5_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_5_kernel_0_dim[] = {4, 2, 32, 24};
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_dec[] = TENSOR_CONV2D_5_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_kernel_0 = {
    .p_data = (void*)tensor_conv2d_5_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_5_bias_0_data[] = TENSOR_CONV2D_5_BIAS_0;

const nnom_shape_data_t tensor_conv2d_5_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_5_bias_0_dec[] = TENSOR_CONV2D_5_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_bias_0 = {
    .p_data = (void*)tensor_conv2d_5_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_5_output_shift[] = CONV2D_5_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_5_bias_shift[] = CONV2D_5_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_5_config = {
    .super = {.name = "conv2d_5"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_5_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_5_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_5_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_5_bias_shift, 
    .filter_size = 24,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_6_kernel_0_data[] = TENSOR_CONV2D_6_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_6_kernel_0_dim[] = {2, 1, 24, 12};
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_dec[] = TENSOR_CONV2D_6_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_kernel_0 = {
    .p_data = (void*)tensor_conv2d_6_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_6_bias_0_data[] = TENSOR_CONV2D_6_BIAS_0;

const nnom_shape_data_t tensor_conv2d_6_bias_0_dim[] = {12};
const nnom_qformat_param_t tensor_conv2d_6_bias_0_dec[] = TENSOR_CONV2D_6_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_bias_0 = {
    .p_data = (void*)tensor_conv2d_6_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_6_output_shift[] = CONV2D_6_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_6_bias_shift[] = CONV2D_6_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_6_config = {
    .super = {.name = "conv2d_6"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_6_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_6_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_6_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_6_bias_shift, 
    .filter_size = 12,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_7_kernel_0_data[] = TENSOR_CONV2D_7_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_7_kernel_0_dim[] = {2, 1, 12, 8};
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_dec[] = TENSOR_CONV2D_7_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_kernel_0 = {
    .p_data = (void*)tensor_conv2d_7_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_7_bias_0_data[] = TENSOR_CONV2D_7_BIAS_0;

const nnom_shape_data_t tensor_conv2d_7_bias_0_dim[] = {8};
const nnom_qformat_param_t tensor_conv2d_7_bias_0_dec[] = TENSOR_CONV2D_7_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_bias_0 = {
    .p_data = (void*)tensor_conv2d_7_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_7_output_shift[] = CONV2D_7_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_7_bias_shift[] = CONV2D_7_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_7_config = {
    .super = {.name = "conv2d_7"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_7_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_7_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_7_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_7_bias_shift, 
    .filter_size = 8,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_1_config = {
    .super = {.name = "global_max_pooling2d_1"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_1_config = {
    .super = {.name = "flatten_1"}
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {8, 6};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};

const nnom_softmax_config_t softmax_1_config = {
    .super = {.name = "softmax_1"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_1_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_4_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_4_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_5_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_6_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_7_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_1_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_1_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_1_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_1_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_27_NNOM_H