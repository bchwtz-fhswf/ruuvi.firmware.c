#ifndef MODEL_19_NNOM_H
#define MODEL_19_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_19_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.24075012569983611f, -0.24075012569983611f, 0.0f, 0.24074851273755382f, -0.0f, 0.25f, -0.5f, 0.25f, 0.49040304612512053f, -0.24075173866211835f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_4_KERNEL_0 {-3, -12, -2, -11, 0, -4, 8, 12, 13, 72, -10, -69, 7, 30, -4, 35, 3, 44, 10, 27, 5, 27, -11, 40, -48, 1, -29, -9, -4, 12, -3, 27, 46, -9, 56, -18, 18, -7, -12, 6, -21, -35, 9, -7, -7, 29, -56, 43, -5, -14, 10, -36, 5, -3, 10, -20, -14, 63, -29, 43, 8, -17, -1, 17, -19, -4, 4, 14, 11, -21, -32, 27, -12, -14, 18, 22, 43, 62, -26, 7, -34, -25, -31, -40, -13, -42, 38, -26, 10, -4, 34, 26, 16, 26, -35, 41, 20, 4, -39, -4, -34, -19, 63, 3, -8, 22, -35, -13, 27, 42, 39, -22, -13, -42, -25, -13, -26, 43, 11, -38, -13, 38, -25, 11, 35, -12, 36, -15, -25, -10, -11, 32, -25, -16, -3, -74, 8, -7, -2, -3, 21, 23, 32, 10, 33, -41, 4, -18, 8, 1, -23, 0, -13, -14, -3, 16, 1, 13, 24, 19, -15, -18, 11, 6, 1, 20, -29, -25, 17, 17, -2, 25, -34, -7, -29, -34, 31, -10, 48, 38, -45, 47, 7, -8, -26, -6, 15, -8, -6, -3, -22, 35, -23, 71, -1, 22, 10, 1, 3, -39, 37, -56, -13, -6, -11, -13, -5, -1, 12, -8, -1, -5, -6, -33, 50, 12, -32, 21, 1, 12, -13, -15, 28, 54, -42, -29, 4, -10, -1, 8, 39, -14, 52, -24, -51, -19, -13, 29, 4, 16, -42, 11, 26, 2, 18, -13, -22, 43, 49, -44, -33, -30, -41, -6, 25, -6, -38, 8, 30, -3, -29, -5, 16, -5, 16, 18, -8, 0, 1, 4, 10, 15, -3, -2, 1, -19, 90, 26, -5, -1, 16, 12, 17, -2, -14, -21, -36, -15, 7, -12, 22, -2, -8, 29, 48, -5, -36, 16, -28, -16, -27, -7, 58, 9, -22, -1, 27, -3, -55, 9, 24, 2, 13, 66, 5, 11, -8, -41, -8, -18, 10, 9, 4, 63, -47, 25, 16, 4, -4, 15, -4, -18, 20, 31, 29, -46, 19, 46, -8, -29, -5, -7, -23, -4, -23, -27, -41, 11, -62, 5, -15, 3, 34, -10, -9, -18, 3, 7, 2, -9, -13, 55, -37, 5, 11, -51, 11, 22, 15, -20, 30, -33, 38, 29, -5, -71, -26, 22, 28, 25, 19, -10, -5, 16}

#define TENSOR_CONV2D_4_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_4_BIAS_0 {-18, -7, 10, -68, -11, 6, -24, -54, -73, -62, -11, -27, 7, 3, -40, -28, -36, 3, -49, -73, -75, -31, -4, -25, -18, -9, -6, -35, -1, 6, -40, -52}

#define TENSOR_CONV2D_4_BIAS_0_DEC_BITS {9}

#define CONV2D_4_BIAS_LSHIFT {4}

#define CONV2D_4_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_5_KERNEL_0 {0, -17, 20, 10, -25, 15, 16, -59, 3, -4, -4, 6, -59, 2, 10, 20, -39, 33, 39, 2, 26, 14, -7, 2, -22, 2, 10, 3, 23, 19, 11, 49, 19, 5, -37, -16, -24, 0, 6, 12, 36, -6, -10, -1, 2, 0, -1, -58, -16, 3, -51, -45, 47, -23, -7, 2, -22, -3, -27, 47, -39, 22, -2, 4, 3, -29, -2, 56, -5, -46, -3, -35, 43, 8, -15, -21, -30, -12, 37, -15, -30, -22, 8, -35, 21, -7, -4, 16, 4, -61, -31, -16, 9, -53, 3, 14, 22, 4, -21, -1, 9, 0, -23, -11, 8, 34, 2, -19, 10, 12, 9, -19, -10, 6, -8, -8, 26, -42, -5, 5, 9, -27, 0, 27, 6, 21, 23, -4, 44, 12, 17, 47, -17, 3, -3, -15, 60, -66, -5, -32, 4, -11, 4, -17, -32, 12, -11, 8, -30, 7, -14, 17, 9, -26, -58, 10, -3, -17, -6, 19, 36, -2, -12, 0, 23, -42, 5, 2, -22, -9, 0, -2, 9, 27, -42, 12, -3, 8, 25, 12, -21, 12, -7, -5, 2, 16, 10, 3, -9, 0, 26, -10, 8, 10, 20, 4, -1, -1, -29, -37, 38, 34, 12, 1, -20, -11, 18, 10, -31, 2, 15, 8, -40, 23, -23, -24, -8, 11, 0, 24, -9, 3, -15, 30, 24, 23, -7, -31, -11, -2, -29, -28, -7, 14, -14, 22, 9, -5, 20, -15, -3, 4, 9, -4, 17, 8, -1, 4, -64, 9, -9, 7, -47, -13, 27, 18, 8, -4, -14, -45, 11, 0, -36, 10, 34, -38, -2, -2, -9, 13, 15, -20, -13, -11, 9, -4, -21, -12, 1, -27, -6, -14, 4, -20, -29, 2, -32, -40, -7, -5, 1, -36, -5, -13, -28, 0, -14, 4, 3, -47, 1, -11, -1, 0, 23, 4, -27, 14, 8, -7, 19, -11, -1, -41, 11, -4, -16, -8, 8, -39, -11, 1, 16, 1, -11, 11, 36, -33, -39, -12, -3, 13, 0, 18, -24, -13, -6, -13, -12, -3, 3, -2, 0, -14, -29, -8, 7, -24, -10, -14, 6, 17, -12, -15, -3, -11, -5, -4, -8, -24, -21, 3, 30, 19, -11, 5, -6, -19, 11, 0, 4, -18, -35, -11, 12, 1, -3, 13, -14, -7, -6, 9, 8, 4, -3, 10, 14, -8, -2, -3, -19, -15, -4, 4, -31, 8, 2, -12, 3, -5, -11, -12, -15, -18, -10, 4, 5, 17, -25, 8, -9, 9, -30, -7, -10, -18, 23, -3, 4, 16, 11, 14, 10, 4, 5, -28, -5, 16, 0, -4, -6, -16, 21, 15, -15, 6, 15, 14, -4, 22, 9, -5, 9, 17, 11, 9, -4, -22, 12, 8, 10, -57, -64, 11, 1, -21, -26, -42, 5, -27, -18, 2, -19, 2, 9, 8, -24, -46, -28, -3, 18, 7, -11, -43, 8, 14, -34, 22, -10, -49, 18, 4, -40, 1, 31, 9, 10, 13, -17, 6, -13, -2, 29, 19, -25, 11, 14, 10, 13, -23, 32, 0, 10, 4, -10, 7, -6, 15, -7, -1, -5, -49, -12, 4, 11, 4, -18, -3, 6, -16, -48, -30, -3, -14, 15, 8, 2, -1, 0, 9, -17, -21, -41, 15, 16, 42, 25, 16, -6, 26, -5, -9, -15, -15, 33, 27, -1, 39, -3, -1, 23, 8, -13, 13, -6, 18, 7, 10, 5, 4, 0, 1, 13, 1, 3, 19, -6, 10, -5, 15, 27, 10, 6, 10, -16, -23, -17, 1, 0, -19, -17, 3, -14, 7, -17, 18, -7, 1, -6, -9, -7, 2, 2, 17, -20, 8, -13, -4, 9, -8, 0, 19, 18, -14, 3, -7, -10, -9, 21, 27, -12, -28, -6, -11, -5, 0, -26, 5, -9, 39, 22, -17, -11, 34, -9, -15, -26, -19, 16, -5, -9, -2, -8, 21, 12, -9, 8, -12, 4, 9, -27, -3, 10, 4, -12, -12, -3, 8, 12, -13, 0, -18, -4, -12, -6, -16, 1, 10, 21, -19, 12, 30, -7, 18, 10, 5, 4, 3, 14, 4, -18, -5, -24, 21, -16, 27, 2, 2, 12, 13, -3, 19, 5, 7, 16, -9, -43, 11, 28, -14, 26, 7, 26, 16, -3, -2, 12, 7, 5, 6, 30, -16, 4, -29, -47, 18, -19, 14, 4, 2, 19, -10, -35, -79, 6, -13, -10, 0, -15, 1, -10, 3, -4, -12, -10, -12, 7, 3, 7, -14, 14, -25, -3, 17, -19, 25, 6, 26, 3, -16, -5, 4, -4, -3, -73, 2, -10, 15, -10, -15, 3, -16, -15, -1, -8, -9, -47, 8, -6, -1, 20, 15, 11, -9, 5, 3, 18, -30, 18, 16, 12, -10, -15, -5, 12, -15, 17, 20, 0, 3, -46, -9, 5, 9, -13, 25, -3, 23, -10, 15, 3, -5, -8, 18, 15, -23, -6, 28, 2, 12, 24, -15, -42, -30, 3, 8, 11, -23, 11, -19, 23, -12, 12, -21, -2, -5, -45, -1, 8, 2, 16, -17, 2, -16, 11, 3, 0, -17, -28, -47, -38, 25, -8, -5, -18, -25, 9, -9, -23, 7, -21, 5, -5, 2, -7, 4, 14, -10, -16, 6, 3, -18, -3, -7, 12, -27, 12, 18, -22, -20, -11, 24, 5, 22, -7, 15, -16, 28, 9, 17, 4, -33, -10, 8, 9, -2, -4, 15, 18, -35, 2, 0, 8, 10, -21, 8, 5, -8, -1, 0, 30, 23, -18, 9, -11, -41, -40, 8, -12, -11, -12, -2, 20, -12, 0, -18, -8, 0, 2, -7, -9, 1, -10, 5, -35, 23, -6, -1, 13, 7, -14, -1, 3, -25, 3, -12, 39, 4, 20, -12, -26, 2, 2, -7, 0, -3, 10, -19, 5, 19, 4, 10, 8, 2, -6, -19, 27, 0, -12, -14, 3, 1, -15, -21, 24, 28, 20, 11, -10, 41, -1, -6, -45, 11, 16, 16, -3, 13, 31, 1, 5, 6, 33, 8, 30, -4, 6, -28, -14, -16, 16, 4, -3, 23, 25, 25, -2, -4, 29, -4, -38, 15, -2, -17, 4, -9, 4, 6, 33, -5, 5, 8, 8, -2, 4, -13, -1, 12, -7, -1, 3, -18, -12, 3, 0, -7, -23, -10, 32, 3, -8, -9, 12, 1, 3, 6, 20, -12, -38, -11, 36, -28, -27, 20, 3, -39, -30, -19, 26, 17, 11, 17, -20, -6, -5, -3, -3, 0, 6, -2, 5, 15, -2, 15, -9, -39, 1, -20, -38, 18, 32, 8, 11, 21, -4, 15, 14, -24, 12, 14, -4, 4, 5, -38, 20, 22, 42, -34, 6, -2, -3, -4, 19, 20, 6, -24, -111, -4, 7, 5, 22, 2, -16, -17, -9, -86, -24, 13, -9, 20, -4, -3, 1, -7, -11, 14, 4, -8, 5, -17, 0, -30, -21, 0, 0, 7, -8, -8, 18, 22, -7, 30, 3, 27, 26, 0, 11, 1, 1, 15, -15, 35, -11, 5, 6, -56, -8, -8, 2, 14, -45, 0, 1, -1, 39, 9, -1, 12, -7, -23, -20, 8, 5, 13, -2, -23, 0, -10, -26, 6, 12, 13, -2, 4, -23, -12, -14, 23, -1, 0, 19, 24, -1, 13, -8, -22, 3, -23, -7, -11, -10, 13, 28, 6, -38, 2, -2, 15, -11, 13, 11, -27, 1, -2, -17, 6, 14, 22, 6, 14, -14, 2, 5, -10, 4, -31, 2, 8, -5, -17, -3, -14, -4, -8, -39, 21, -40, 2, -2, -14, -8, 5, 0, 5, -45, -12, -9, 18, -10, -21, 34, 5, 17, -19, -1, -1, -46, -14, -8, -13, -27, -27, 23, -6, 9, 11, 15, 16, -53, -9, 12, -21, -21, -10, 18, -21, -24, -3, 13, -5, -12, 12, 7, 0, 7, -8, 11, -16, -4, -3, 10, -4, -34, -11, 0, 7, -43, 7, 25, 13, -31, 2, -23, -12, 6, 21, -13, 25, -35, -16, -2, -21, 12, 12, -21, -5, 1, -15, 6, -58, 8, 4, 1, 16, -3, 13, 6, -1, 1, 2, -22, -15, 28, 5, -10, 0, 23, 11, -6, 26, -8, 14, -1, 25, 11, 1, -6, 7, 26, 5, 2, -40, -18, 8, 15, -8, -25, 17, 21, 6, 12, -3, 7, 2, -4, 5, 2, -59, -14, -3, 9, -7, -53, -27, -12, -8, -2, 0, -1, -2, -24, 4, -21, -33, 8, 6, 1, 23, 19, 18, 11, 19, -5, 6, -4, -48, 28, 9, -5, -12, 13, -1, -14, 8, -66, -22, 11, -7, 9, -5, 20, 2, 18, 9, 1, -38, 4, 0, 16, -9, -20, 0, 19, 3, 7, -8, -18, -41, 8, 10, 4, -8, -8, -5, 5, -19, -45, -60, -29, 30, -12, -8, -8, -3, -21, -1, 14, -1, 7, 3, -6, 7, 6, -6, 13, -11, -9, -18, -37, -49, 8, -8, -1, 16, 14, -11, 6, -9, -22, -25, 9, -1, -8, -1, 0, -16, -6, -7, 14, -33, -26, 6, -1, -7, 14, 8, 2, -31, -1, -2, -2, -38, -48, 12, 18, -15, 7, 2, 2, -4, -15, -30, -14, 2, -21, -23, -13, -8, -7, 4, -3, 12, 4, 13, -10, 16, 6, 5, 16, -35, -24, 11, -26, -13, -45, -9, 19, 17, 19, -17, 12, 9, 31, -15, 8, 27, -1, 6, -7, -2, 2, 7, 8, -17, -36, 12, 3, -4, 25, 11, -2, 4, -15, 2, 23, -61, -36, 17, 16, 20, -40, -11, -6, -27, -3, 33, -1, -28, 4, 14, 19, -40, -44, -8, -23, 36, -23, 3, 8, 15, 1, 11, -22, -5, 23, 22, -9, 12, 32, -2, -33, 19, 7, -3, -12, -25, -9, 4, 12, -4, -25, -14, -8, 16, 9, -13, 8, 18, -14, 5, -8, -21, -35, -13, 3, -8, -7, -19, 7, -14, -5, -3, 8, -33, -31, -12, -27, -23, 46, 1, 12, -14, 0, -38, 14, -24, -22, 8, -7, -7, 2, -1, 13, 0, -13, 19, -28, 19, -15, 14, 16, 14, 8, -16, -19, -1, -13, -3, -19, 7, -31, -20, -14, 9, -35, -8, -7, -12, 22, -14, 8, -13, -8, 1, 4, -32, -33, -1, 3, 6, -26, -20, -5, 3, 11, -25, 25, 15, -1, 3, 52, 2, -37, -122, 15, 8, 4, -20, 14, 1, 5, 13, 5, -3, 19, 10, 2, -17, 27, 30, -8, 6, -50, 28, 25, -25, 4, -18, -1, 8, -11, -13, -5, -6, -45, 22, -19, -6, -20, -14, -4, -21, 8, 11, -5, 2, 2, 8, -6, -23, -17, 23, 13, 17, -4, -5, 19, 0, 4, 1, -5, 20, 23, 7, 25, 33, 11, 18, -4, -5, 8, 4, -60, -1, 21, -39, 38, 24, 32, 11, -21, 4, 24, 11, -22, -32, 24, -4, -61, -22, -22, -26, 4, 13, 1, -22, 5, -5, -22, 8, -18, 3, 14, 5, -30, -15, 9, -9, 14, 13, -8, -1, -7, -11, -4, -4, 8, -2, -17, -24, 12, 15, -8, 6, -71, 13, 17, 3, 41, -11, -27, 1, 40, 3, -10, 10, 1, 18, 11, -15, -32, 1, -1, 6, -10, -52, 9, 10, 12, -4, 6, 22, -4, 6, -21, -2, 6, -62, -65, -11, -6, -31, -6, 2, -22, -2, -5, 20, 8, -24, -38, 14, -33, 3, 22, -21, 6, -44, -40, -21, -3, -14, -23, -13, 3, 27, 7, -9, -7, -27, 7, -11, -21, -14, -20, 1, 5, 23, 8, 9, 20, -11, -15, -22, -25, 1, 12, 4, -4, -39, -25, 19, 5, 13, -2, -35, 10, 15, 14, 14, 3, 3, -41, 17, -2, -6, 15, 33, -4, -1, -16, 1, -2, 20, 6, 8, -44, -14, -11, -29, 5, 14, 1, -26, -21, -5, -3, -4, 2, 24, 4, -7, 18, -36, -10, 10, 12, 10, 1, 19, 19, -17, 15, -4, 16, -28, -4, -7, 5, -28, -8, 22, 14, -5, -3, -11, -24, 12, 5, -27, 23, 4, 21, 12, -8, -1, -8, 13, -13, -7, 21, 84, 18, -8, 18, 7, -52, 12, 4, 27, 4, 17, 7, -12, 5, 18, -4, -11, -27, 14, -18, 16, -35, -10, 13, -6, 12, 25, -4, 11, 11, -11, 39, -30, 16, -40, -10, -15, -13, -21, 5, -10, -5, -40, 8, -14, 6, 12, 32, -2, -12, -20, -28, 3, 8, 25, 12, -15, 12, -11, -4, 1, -15, -14, 0, 32, -1, -30, -20, 3, 29, -12, -69, -11, 8, 9, 8, -5, 6, -5, 9, 9, -9, -14, -15, 29, 19, -27, 12, 15, -29, -21, 3, -20, -12, -15, -48, 15, -5, -8, -28, 0, 9, 1, 18, -14, 4, 9, 33, -4, 4, -42, -4, -19, 7, 5, 21, 6, 26, 6, -12, -19, -14, 27, -3, 0, -24, -20, -2, -6, -37, 5, 0, -12, 4, -13, 0, 20, -28, -37, -8, -14, -2, -9, -1, 4, -10, -33, -6, -14, 0, -4, -11, 19, -17, -17, -15, -11, -10, -17, 16, 0, -1, 6, -14, 12, -11, 11, -1, 5, 9, -7, 25, 16, 8, -20, 9, 32, -16, -19, 6, -23, -2, 27, 8, -5, -8, 13, -33, 9, -24, 4, 10, -5, -7, 16, -20, -15, -34, 31, 6, 16, -8, -14, 32, 8, -3, -17, -29, 4, -24, 2, -11, -2, -24, 22, 6, 16, 12, -17, -13, -13, -4, 12, -9, 22, -1, -20, 9, -14, 34, -7, 0, 13, -1, 15, -21, 15, 26, 39, 7, -11, -5, 37, 14, 9, 17, -15, 17, -6, 4, 2, -21, -1, -5, 1, 30, 19, -2, 1, 19, -25, -21, -13, 17, 10, -2, -2, 16, 15, -2, 16, -20, -27, 3, 25, -4, 11, -4, -38, 4, 16, 18, 48, 10, 5, -4, 9, 17, -7, 1, 9, -9, 7, 14, 2, -23, 13, 12, 1, -2, 11, 2, -13, 11, 29, 28, 11, -2, -23, 17, 56, 34, -13, 9, -4, 6, -15, 3, 5, 11, 4, -19, 15, -8, -11, 21, -2, -16, 19, 28, 4, 14, 2, 22, 6, 4, 2, -34, -5, -28, -4, 31, -12, 6, 11, -5, -1, 0, 5, 5, -2, -14, -2, 0, 1, 3, -7, -4, -16, -11, 5, 2, 5, -4, 13, -18, -8, -2, 9, -12, -2, -20, 3, -29, -18, -12, -21, -9, -3, -11, 12, 4, -2, -6, -10, -16, -6, 0, -10, -23, -2, 5, 9, -5, -8, 5, 10, -11, -13, 11, 10, -2, -9, 6, -5, -19, 2, -5, 4, -21, -7, -5, 1, -3, 6, 3, -6, 10, -11, -1, 0, -1, 4, 9, -2, -1, -8, 4, -2, -16, -7, -8, 6, 11, -20, 11, 9, 0, -9, -2, -7, -9, -17, -19, -14, 0, 0, -21, 8, -5, -1, 8, -24, -1, -8, -16, 1, -9, -18, 2, -14, -12, -5, 9, 6, -12, -2, -4, -9, 0, -5, -8, 3, -20, -2, 8, -8, 3, -15, 6, -13, 1, -3, -8, 3, -5, -9, -25, -25, 2, 0, -8, 2, -12, -7, -1, 8, -1, -13, -7, 7, -17, -9, -20, -17, 2, -12, -3, 7, -16, -2, -18, -14, -12, -8, -10, -10, 0, 6, 5, 0, -6, 3, 8, -10, -4, -10, -2, -7, 11, -10, 1, -18, 11, -13, 3, 8, -6, -4, -7, -9, -8, -11, -13, -14, -11, -1, 2, 1, -14, -9, -12, -1, -14, -9, -20, -1, -5, -9, -4, 8, -18, -8, 2, 8, -11, 6, -8, -1, -4, -2, 20, 0, -11, 10, -3, -1, 4, 11, -5, -22, -3, 10, 0, -6, -19, -13, -3, -7, -10, -23, -16, -18, 2, -5, -2, -9, -16, 9, 8, 5, -25, -4, 7, 6, 21, 35, -26, 26, 10, -22, 8, 13, -39, 10, 15, 4, -2, 34, 7, 19, -23, -17, 3, -1, 15, 1, 3, -32, -7, 3, -11, -9, -14, 11, 10, -13, 12, 23, 21, 10, -5, 36, 16, -17, -21, 10, 5, -1, 1, 8, 8, 0, -15, 2, 0, -17, -1, 0, 17, 3, 2, -9, -39, -9, -38, 9, 16, -20, -1, 2, -43, 27, -11, -21, 22, 15, 11, -25, -6, -6, 22, 22, -20, 4, -9, 23, 11, -4, -15, 19, 24, -7, 12, -19, -32, -28, -1, 7, 8, 4, 12, 8, 14, -2, -1, 22, -3, -17, -7, -10, 19, -5, 9, 4, 35, 1, -10, 12, 1, 0, -11, 9, 13, 8, 6, -24, 12, 12, -37, 3, -12, -1, -18, -29, 22, 7, 12, -6, -1, -8, 21, 20, 0, 19, -12, -27, 6, -7, -7, -1, -63, 7, 0, 19, 10, 5, 20, -9, 7, 2, -8, 6, -14, 8, -1, -8, 16, 6, -15, 26, -2, 2, 10, 4, 14, 24, 6, -7, 25, 10, -22, -16, 0, 0, -7, -6, -8, -1, 3, -27, -23, 0, 14, -5, 13, -24, -14, 2, -37, -12, 10, 27, -8, -13, 28, 3, 0, 1, -9, -8, 3, 3, -27, -45, -16, 2, 9, 23, -2, -12, 28, 22, -5, 18, 16, -33, 12, -43, 28, 9, -10, -18, 5, 14, -7, -23, 42, -8, 4, 21, -5, -34, -22, 11, -7, -42, -3, -11, -8, 4, -13, 19, 33, -7, 12, 13, 4, 28, 11, 0, -2, 22, -6, 5, 14, 10, 12, 5, 12, 13, 22, 11, 17, 25, 25, 11, -22, 3, -18, 8, 5, 4, 25, 1, 36, -1, -13, 8, 9, -11, -12, -25, 1, -5, -19, 12, -30, 8, 7, 0, 11, 21, 38, -8, -15, -4, -7, 6, -14, 11, -3, 7, 6, 5, 16, -14, -2, 7, 9, 5, 20, 15, -1, -20, 9, -12, -14, 18, 12, 4, 1, -3, 27, 24, -3, -7, 13, 0, 7, 3, -16, 16, -2, 1, 4, 15, 3, 9, 17, 2, 8, 10, -12, 33, -6, -18, -2, 16, 27, -23, -4, -1, -1, -13, 4, 10, 31, -13, 14, -15, -14, 11, 8, 7, 19, -4, 5, -2, -8, -11, 12, 27, -1, 13, 2, 10, -8, -7, 13, 26, -1, 14, -3, -4, -5, -22, 17, 10, -31, -4, 1, 32, -14, 20, -10, 5, 1, 5, 1, 14, 10, 3, -4, 4, 8, -3, -11, -22, -1, -16, 16, 6, 1, 5, 0, 1, -3, -23, -7, 11, 10, -1, 14, 15, -5, 0, -15, -38, -7, -7, 14, -20, -6, -9, -8, 14, 2, -11, -6, 25, 20, 3, 12, 23, 8, -6, 10, 22, -6, -9, 14, 18, 12, 1, 14, -20, 0, -2, -17, 6, 21, -3, -2, 11, 18, -6, 29, 21, -21, 12, -2, 25, -9, -4, 6, -3, -17, 18, 9, 26, 3, -5, 2, 11, 2, 7, 16, 5, 22, 8, -9, -2, -5, 13, 0, -9, -18, 0, 26, -20, -7, 0, 0, 21, -5, -26, 2, 27, 1, 2, 21, 13, -2, 0, 7, 15, 15, -19, 2, 25, 5, -14, 2, 39, -10, -15, -2, -6, 18, -10, 16, 17, -3, -21, 3, 0, 5, -11, -11, -7, 4, 21, 13, -30, 3, 5, 11, 5, 7, -12, -8, 16, -44, -22, 7, 1, 8, 14, -8, -13, 5, -7, 1, 14, -4, -8, 10, 23, 7, -2, 10, 21, 20, 6, 23, 11, -7, -20, 9, 2, 14, -8, -12, 18, -28, -4, -9, 16, 18, -14, 6, 32, 2, -3, 8, 3, 1, -15, 0, -12, 3, -23, 7, -4, 12, 12, 2, 3, 4, -5, 5, -19, 13, -2, -5, 11, -8, -14, 2, 4, -24, -13, -11, -17, -3, 8, 21, 0, 8, -6, -1, -2, 6, 7, 8, 17, 4, 4, 3, -1, -11, -10, 23, 4, -11, -18, 0, 2, 11, 11, -26, -18, 8, 1, 15, -5, 6, 1, 5, -5, 11, 1, 1, -42, -4, -16, 8, 18, -43, -8, 10, -5, 13, -10, 17, 5, 7, 0, -16, -23, 5, -13, -6, -40, 28, 8, -10, -13, -59, -8, 13, -14, 13, -45, 10, -13, 4, -34, 11, -1, 16, 27, -5, 20, -13, -8, 5, -1, -3, -2, -4, 15, 23, -20, -3, 17, -9, -10, 4, 17, -4, -9, 26, -10, -5, 17, -6, 8, 32, 14, 3, 31, 8, -26, -9, -4, 17, 13, 22, 11, -19, 10, -3, 36, -28, -30, 19, 11, 16, -26, -3, -10, 1, -11, -1, 14, 0, -1, 5, 6, 4, -8, 3, 2, -5, -2, -1, -1, 1, -2, -3, -4, 1, 6, -8, -6, 4, 0, -1, -2, 4, -5, 3, 3, 3, 3, -8, -5, -7, -1, 0, 6, 3, -5, -2, -3, 6, 0, -6, 5, -4, -6, -8, 1, -7, 1, -7, 2, -4, 2, -2, -2, -6, -6, -5, 2, 0, -6, 5, 2, -7, -7, -6, -6, -7, 4, -2, 2, 6, -3, -1, -2, -1, 1, 3, -7, 1, 1, 5, -2, -2, -6, 5, 2, -7, -4, -2, -3, -5, 0, 0, 5, -8, 5, -4, 0, 1, -6, -7, -1, -4, -3, 3, 5, -7, -9, -6, -7, -1, -7, 1, -5, -1, 5, 5, -8, -1, -1, -4, -8, -1, -2, -7, -5, 2, 6, -8, 5, -8, -7, 0, -7, -6, -1, -1, -6, -2, 2, -5, -3, -4, -7, 4, -1, -1, -5, 5, -6, 0, 1, 0, -5, 1, 2, -7, -1, 5, -6, -6, 1, 0, -2, -3, -2, -6, 3, -3, -5, -1, -7, -5, 4, 4, 4, -2, -8, 2, -7, -8, -8, 3, -6, -1, -5, 1, -5, -2, -6, 0, 2, -9, 1, 2, 2, -6, 2, 4, -1, 3, -6, -8, -2, 1, 1, 2, -4, -1, -5, 1, -3, -2, -5, 3, -7, -2, 2, 6, -2, 2, 3, -7, -2, -8, 7, 3, 1, -5, 4, 3, -5, -8, 0, -5, -5, 4, -1, -1, 2, 3, 0, 0, -8, 1, -4, -7, 3, -4, -3, -3, 4, -8, -1, -8, -4, -1, 20, 28, 6, 16, 10, 24, 14, 37, -17, -2, 9, 4, 13, -25, -13, -16, 33, -6, -25, -1, -26, 26, -35, -25, -48, 3, -12, -2, -45, -2, 2, -7, -1, 3, 6, -22, 14, -25, -26, 0, -36, -10, 18, -37, -14, -33, 7, -14, -8, -6, -8, -4, -27, 8, -10, -29, -1, -13, -2, -24, -41, 9, -11, 34, -60, -4, -23, 6, -20, -2, 11, 2, 31, -2, -3, -9, -12, 20, -10, 2, 65, -34, -38, 4, -11, -23, -18, -29, -2, 3, -9, 14, -35, 12, 3, -13, 2, 9, 8, 2, 6, 7, -8, -44, -32, -4, 10, 15, 12, -40, -4, -20, 19, 0, -14, 6, 7, 6, -3, -10, -23, 2, -13, 4, -34, -22, -13, 32, 24, -9, -9, 27, -3, -41, 3, 33, -3, 2, -25, 32, 14, 29, 7, -6, 33, -23, -41, -2, 21, -43, -24, 6, 13, 10, 31, 8, -3, -7, 12, -3, -33, -20, 6, 10, -19, -27, 1, -37, -28, 13, 0, 25, -4, 0, 5, -22, -24, 26, -9, -3, 12, 13, -7, 2, 16, -4, 0, -34, -14, 7, -2, 38, -25, -1, 0, 19, -6, -16, 32, 13, 27, -25, -33, 13, 2, 12, 7, -9, -8, -10, -26, -4, -7, 5, -13, 4, -14, -1, 9, 21, -15, 22, 14, -3, -6, -32, -22, -15, -39, 14, -18, -76, -6, 1, 1, 9, -27, -35, 9, -22, -17, -48, -7, 5, 0, -8, 9, -17, -9, -25, -6, 27, 8, -29, 8, -14, 11, 0, 20, -27, -7, -17, -15, -16, 6, 20, -7, -11, -7, -18, 4, -26, -5, -13, 12, 14, 15, -4, 14, -10, -31, 4, -17, -21, 26, -1, -3, 21, 2, 6, -20, 11, -8, 19, -49, 13, 13, -20, -17, -8, 32, -1, 12, 11, -51, -11, -8, -13, -19, -24, -9, -6, 1, -21, -7, 3, -53, -10, -2, 0, 19, 6, 3, 5, 8, -7, 4, -4, -10, -2, 1, 12, -7, -10, -1, 3, -2, 6, 16, -13, 12, 2, 2, -6, 34, -12, 5, -60, -8, 30, -12, 6, -5, 19, 4, -11, 52, 13, -43, -3, 16, -6, -1, 19, 10, 14, -11, 12, 31, 32, 8, 0, 1, -5, -10, 41, 21, -10, -8, 8, -23, 5, 13, 3, 26, -6, 1, -42, 4, 10, 3, 2, 0, -11, 23, -28, 24, -30, 23, 18, 5, 18, 21, 0, -18, 5, 20, -1, 14, -7, -16, 35, 11, 20, 8, -5, 11, 21, -5, 30, 0, 2, 11, 1, 9, 3, 12, -28, -5, 4, -2, -9, 21, 15, -6, 13, 6, 7, 19, 8, -7, 10, 4, 11, 34, -10, 8, 11, 18, -3, -7, -1, 13, 3, -36, 10, 2, 6, -4, 19, 33, 12, 10, 23, 1, -15, 41, 4, 20, 4, -9, 24, 27, 53, -9, 17, 33, 32, -10, -6, 8, -9, 1, 1, -4, 18, 6, 11, 14, 3, -2, 14, 3, 36, 15, 6, 25, 7, -11, 8, 9, 12, -12, 13, 4, 26, 16, 16, -9, 9, 1, 15, 15, 2, -16, 12, 5, 27, 7, 10, 28, 3, -22, 9, 7, 6, -12, -15, 33, -9, -17, -16, 36, -1, -28, -2, 21, 4, 6, 12, 20, 10, -22, 7, 4, 12, -15, 9, 46, 9, 8, 3, -15, -4, -10, 10, 16, 19, -21, -3, -9, 24, 9, -15, 0, 1, -8, -14, 8, -7, 10, 13, -21, 2, -3, 1, 29, 4, -7, 3, 26, 13, 9, 2, 15, -9, -5, 0, 20, 14, -17, 20, -9, 7, 3, -28, 20, 17, 13, -7, 16, 19, 3, 8, -3, 4, -2, 1, 16, 16, -15, 12, 31, 0, 0, -9, -6, 7, -8, 11, 10, 10, -10, -2, 12, 18, 14, -20, -16, 18, 6, -2, 14, -13, -10, 19, 7, 4, -16, -1, 4, -1, -18, 4, 28, 13, 22, 12, 3, -7, -12, -19, 12, 9, -6, 3, 2, 18, 6, -7, 9, -1, 0, 0, 23, 13, -26, 11, 20, 30, 13, -12, -18, 4, -10, 4, 23, 15, -5, -16, 4, 9, 9, 16, 6, 8, -10, -3, -8, 32, -21, -11, 9, 6, -19, -7, -11, -2, -11, 14, -1, -1, -5, 11, 32, 0, -3, 9, 35, 16, -13, 16, 13, -17, -16, 28, 3, 23, 14, 15, 18, 10, -3, -13, 21, 7, -14, -7, 16, 31, -13, 22, 0, -11, 2, -1, 11, 2, -11, 21, 10, 5, -3, 15, -3, 7, -6, 4, 2, 7, -9, -4, 7, 17, -10, -20, 3, 10, -6, 0, 5, 18, 0, 9, -2, -16, -1, 19, -25, -19, 15, 21, 9, -24, -8, -15, -46, 15, 9, -4, -5, -26, 17, -42, -66, -12, -11, 10, 24, 25, 8, -1, -12, -25, -6, -73, -30, 24, -10, 4, -5, 11, 4, -2, 22, -30, -5, 23, -2, 6, -5, -32, 18, 4, 9, 29, -21, -4, 27, -2, -28, -39, -15, 2, 27, -8, 1, 5, -50, -19, -18, -5, -13, 24, 15, -12, 2, 23, -30, -17, -18, -2, 21, 4, -1, -30, -2, -2, -7, 1, -7, -3, -24, -7, 6, 5, -21, -6, 6, -10, -21, 23, -28, 5, -28, -7, -6, -14, -17, -59, -16, 0, -5, 2, 0, 12, -3, 0, 4, -19, -28, -34, 9, 2, -12, 9, 7, 8, -4, -6, -29, 4, -38, 16, -2, -11, 7, 22, -9, 11, -4, 3, -53, -4, 9, -8, -9, 20, 1, -13, 8, -4, 20, -13, 16, -3, -25, 22, -3, 14, -33, 19, 6, -20, -24, -21, -23, 18, 22, -5, -5, 30, -57, -53, 5, -11, -7, -7, 7, 4, -7, -35, -7, 11, -50, -56, -18, 12, -32, 20, -4, 18, 7, -25, 0, 18, -46, 14, -11, -15, -19, 15, 10, 39, -22, 3, 9, -18, 2, -2, -4, 1, 5, 29, 11, -29, 0, 14, 16, 2, -18, -16, 17, 2, 3, -9, 11, -13, -1, 30, -29, 2, 17, 15, 0, 9, -4, 12, -48, 10, 7, -38, 10, 9, -2, 3, -1, -24, -14, 7, 20, 16, -9, 15, 41, 27, 0, 0, -1, 7, -14, 27, 16, -3, -19, -17, 16, 7, 4, -10, 22, -51, -30, 5, 0, 4, -8, -25, 14, -85, 31, 50, -6, -20, -36, 22, 6, -53, 35, -73, -8, -83, 23, 14, -46, 12, 23, -3, 1, 12, -11, 14, -8, 6, 22, -22, 10, -30, 21, 4, 31, 9, 15, 16, 30, -36, 17, -38, 18, 9, 18, 5, 28, 2, -45, 33, 10, -31, -8, -7, -7, -31, -53, 8, 28, 9, -35, -10, 5, 2, 12, -9, -3, 16, 5, -5, 8, 4, -19, -16, 1, 8, 12, 4, -12, -1, 16, 30, 11, -29, -18, -34, -10, 10, 2, 19, 20, -33, -9, -7, 3, 23, -13, -4, -10, -12, -32, 13, 22, 8, 25, 4, 23, 3, 5, 9, -15, 42, 23, 19, 3, -19, -17, 3, -13, -12, -8, 3, 9, -21, -4, -28, -2, -114, 4, -3, -9, 22, 28, 12, 12, -1, 8, -25, -16, -14, -3, 17, -23, 19, -6, -7, 9, -52, 21, -25, 4, -17, 0, 22, -67, -9, 21, 0, 7, -18, -5, -22, -37, 12, 7, -53, 5, 9, 9, 8, 3, -4, -50, 23, -18, -26, 24, 14, 2, -17, -24, -15, -2, -5, 23, -1, 7, -1, -29, 8, 5, 12, 34, -30, -8, 23, -19, -16, 8, 3, -7, -2, 7, -20, 1, -28, -60, 30, 7, 13, -28, 3, 14, 9, -9, 4, 6, 11, -22, -5, 20, -13, 11, -20, 4, -6, 1, 3, -5, 19, -8, -15, 7, 9, 6, 16, 4, 12, 13, -19, -39, -10, 2, -40, 15, -13, 2, 26, -13, -26, -19, 12, 6, -17, 17, -18, 13, 49, 9, -18, 5, -60, 19, 26, 30, 4, 9, 19, 0, 12, -13, -19, 18, -5, -8, -1, -47, -6, -9, 9, -22, -15, 27, 0, 19, 17, 2, 3, 2, -6, -16, -4, 0, 16, -11, 5, 8, -8, 17, -2, 10, -2, -12, 5, -11, -1, -14, -18, -4, 6, -11, -13, -21, -1, 8, 3, 9, -20, 3, -1, -5, 4, -3, 5, -6, 19, -1, 11, 16, 15, 28, 9, 18, 11, -22, -5, 8, 30, 1, -13, 19, -4, 7, 10, 14, 11, -3, 2, 12, 1, -6, 16, -6, 5, -1, -7, -3, 9, -5, 6, 24, 14, -6, 0, 0, 14, -10, -12, -6, 4, -1, 2, -36, -19, 13, 22, 29, -4, -19, 1, -10, 15, 17, -21, -20, 15, -1, 8, -4, -10, 26, -2, 14, 29, 7, 1, 0, -3, 2, 27, 11, 16, -4, -9, -6, 6, 9, 28, 12, -6, 7, 8, 1, 32, -9, -71, 15, 8, -10, 14, 17, 6, -13, -3, -17, 0, 4, -3, 5, 6, 2, -20, 29, -44, -41, 27, 10, -31, 2, 24, -39, -32, 25, 1, 10, -18, -7, -4, -21, 22, 6, -12, -21, -30, -6, -1, 42, 29, -1, -10, 5, 29, 6, -18, 6, -27, -3, -22, -30, 12, -4, -7, -22, -44, 39, 0, -45, 12, -28, 17, -15, -17, -35, -9, 0, -3, 0, 7, 8, -5, 3, -9, -34, 13, 19, 3, -55, 9, 28, 15, -38, -10, 8, 30, 3, -46, -18, -22, -28, 20, -8, 5, 18, -41, 13, 27, -39, 14, 10, -4, -3, 33, 27, -16, -21, -20, 3, -25, -10, 9, 0, 3, -31, 15, 7, 17, 17, -21, 1, 11, 13, -25, -9, -22, 14, 22, 1, 5, 2, 26, 14, -28, -43, 9, 17, 4, -27, 13, 28, 1, -3, 5, 8, 2, -75, -37, -10, 28, 2, -1, -18, -38, -56, -16, -13, -3, -21, -3, -4, 27, -7, 30, 18, 0, 7, -21, -3, -8, -9, -46, 15, -11, -46, 3, -24, -37, -4, 5, 10, -2, -1, 19, 5, -4, -48, 0, 10, -4, 5, 30, -24, -2, 0, 11, 0, -6, 5, 15, 12, 28, -21, 1, -30, -57, -14, -17, 8, -5, -2, -9, 6, 22, -39, -13, -10, 4, -23, -12, 7, 28, 6, -8, 1, 15, 6, -7, 5, -6, 10, -3, -1, 7, 21, -14, 18, -10, -68, -27, -50, 2, 40, 13, -12, 26, 10, -58, 1, -16, -48, -1, 7, 8, -23, -17, -5, 8, 12, -18, -6, 0, 0, 16, -4, 4, 10, 0, -41, -21, 3, 12, -4, -47, -28, 26, -13, 43, -6, -24, -16, -7, 3, -12, 1, 20, 10, 4, 10, -26, -6, 38, -6, 9, -10, -26, 16, 1, 17, -2, -2, 22, 23, 1, -56, 22, 54, -13, 2, 4, -57, -23, 16, -18, -4, -4, 4, 27, -16, -1, 2, -21, 18, -37, 0, 3, -10, 13, 19, 13, -32, -2, -26, 6, -11, 31, 9, 3, 13, -11, 11, 31, -17, 11, -36, -7, 24, 7, -9, -3, 8, -18, 2, -13, 13, -18, -22, 6, -1, 0, -15, 8, -13, -9, -17, 11, -4, 4, 1, 18, -4, 21, -26, -1, -5, 18, -24, 7, -9, -31, 6, 7, 18, -29, 2, 24, -19, 12, 20, 11, 9, -22, 17, -3, -29, -25, 29, 7, -27, 7, -6, -26, 13, 22, 3, -19, 1, 11, 8, 6, 18, 2, 3, -13, 0, -18, -6, -2, -10, -18, -23, -22, -5, -5, -21, -1, 13, -18, -15, -44, -23, -15, -10, 13, -41, -16, -35, 13, 8, -73, -4, -7, 9, 10, -6, 4, -37, -24, -4, 28, 2, -29, 22, -7, 1, 19, 21, -15, -3, -28, 14, 23, 3, 15, -2, 3, 16, -11, 1, -18, 21, -5, 19, -3, 6, -3, 5, -7, 5, -18, 7, -21, 38, 4, -21, -2, -42, -40, -11, 11, 6, -16, -7, 24, -31, 15, 24, 17, 12, 17, 14, 6, 39, 10, -23, -10, 20, 27, 21, 22, 15, -7, 7, 1, -14, -3, 6, 0, 7, 2, 2, -5, 13, 16, 3, 32, 26, 14, -19, 11, 12, -21, -33, 0, -16, 17, 11, -49, -12, -13, 4, 22, -65, 18, 24, 2, -5, -8, 0, 5, 14, -7, -51, -83, 20, 11, -25, 18, 5, 12, 20, -33, -3, 0, 3, -6, 1, 18, -3, 0, 8, -8, -16, -87, -16, 22, -9, -6, 10, -6, 2, 1, 16, 14, -12, -41, -11, 21, 5, -3, -2, 6, 18, 4, -16, -26, 5, -31, -14, -43, 14, -36, -17, 13, 22, -9, -18, -22, 22, -15, -5, 10, 8, 10, 37, 6, 22, -20, -18, -3, -2, -26, 7, 16, 15, -8, -6, 22, 10, 2, -14, 2, -51, 14, 19, 15, 13, -19, 28, -6, 7, -7, -20, -9, 13, 5, 4, -2, 10, 17, -14, 8, 12, -7, -6, -18, 8, -7, 9, -9, 5, -26, -11, -3, -11, -22, 5, 4, 9, -26, -6, -1, 11, -5, -3, -13, -7, 14, 22, -2, -4, -7, -12, 6, 2, -14, 1, 3, -3, 1, -13, -7, 7, -6, 3, 8, -26, 1, 6, 21, 18, -34, 15, 11, -11, 2, -16, 38, -19, -2, 8, 11, -3, 15, -14, 2, -4, 4, -58, -16, -4, -19, -2, 20, 6, -9, -24, -16, -12, 15, -6, 5, 0, 10, 13, 1, -28, 25, -20, -15, 11, 7, 13, -6, 5, 11, 10, 2, 21, -9, -52, 11, -6, 15, 26, 11, 3, 11, 3, -20, -8, 2, -2, 1, 25, 2, -13, -1, -5, 18, 0, -14, 7, 18, 19, 36, -2, 10, 21, 9, 2, 23, 18, 20, -14, -38, -35, 5, 18, -6, -17, 15, 7, 0, -17, 26, 10, -9, 21, -13, -4, -45, 13, -19, -16, 10, -18, -16, 26, 7, -18, 20, -12, -17, 19, 6, -4, -4, 30, 3, 1, 13, -15, 7, -5, -4, 7, -4, 6, 16, 11, -17, 20, -10, 2, -71, -15, 13, -8, -21, 11, 9, -25, -4, -1, -29, 15, 15, -4, -30, 16, 13, -11, -5, -55, -8, 2, 6, 7, -28, 6, 14, -9, -7, -20, 28, 32, -6, -9, 5, -11, -13, 1, 19, 2, 16, -16, 5, -20, 13, 4, -2, 4, 3, 1, 16, -33, -13, -11, -34, -50, -16, -26, 12, -37, -26, -10, 2, -8, -77, -28, 27, -2, 6, -2, 2, -81, -4, -82, -10, 22, -12, -17, -8, -18, -2, -5, 42, -25, -58, -21, -4, 4, 3, 11, 13, -5, 4, -25, -45, 15, -48, 9, 14, -17, -24, -7, 4, -30, -12, -26, -29, 16, -55, 3, -5, -21, 28, 6, 11, -7, -35, 19, 27, 5, -1, 6, -10, -18, -5, -12, 14, 2, -53, -32, 15, -50, 3, -13, -20, -96, -4, 5, -17, 39, -7, 9, -20, 5, -8, 17, 4, 3, 13, -9, 25, 15, 10, -9, -15, 21, -9, -15, -62, -37, -27, -21, 14, 28, 7, 1, 13, -51, 24, -30, -11, -10, -25, 5, -9, -8, -2, 3, 13, 7, -11, -10, 6, -5, 9, -4, 22, 4, 4, 5, 1, -6, -25, -6, -16, -31, -6, -2, 7, -25, -29, 15, -24, -3, 0, -22, 12, 2, 43, 7, 4, 28, 8, 2, 22, 6, 15, -8, 15, -2, -6, 3, 0, -7, -36, 25, -7, -12, 6, 20, 22, 28, 4, -4, -15, 14, 23, 1, 12, -44, -13, -28, 26, -10, -21, -1, 9, 15, 25, 27, 2, 3, 37, 27, -18, -22, -1, -15, -5, -5, 5, -8, 13, 10, 11, 2, 17, 23, 2, 12, -14, 13, -1, 0, 6, -33, 14, -12, -7, -11, -7, 17, -26, 4, 0, 3, -7, 18, -11, 5, 6, 15, -12, 23, 8, -4, -13, 19, -7, 18, 28, -8, 6, 23, -9, 15, -5, -1, 6, 6, 16, 28, 1, 29, 1, 7, 3, 5, 15, -21, 13, 7, 12, 8, 21, 20, 26, 2, 10, -10, -38, 19, 6, 1, -19, -71, -18, 3, 10, -37, -47, -5, -8, -25, 14, 5, 16, 8, 12, -7, -25, -36, -17, -3, 15, 8, -3, 11, 7, -27, 10, -2, -7, 18, 24, 0, -12, -9, 21, 12, -6, 22, -21, -16, 15, 0, 15, 5, -14, 7, -7, 2, 2, 5, 10, -14, 18, -9, 4, 15, 27, 1, 9, 6, -18, 32, 15, -15, -1, -13, 1, 4, 11, -17, 20, -44, 4, -43, 6, -2, -21, -20, 10, -3, -17, -76, -8, 16, -1, -6, -14, 24, -11, 5, 0, -22, -37, -14, 17, -16, 5, -24, 6, 2, 18, -12, -43, 13, -5, -6, -3, 8, -19, -3, 4, -6, -5, 7, 6, -23, -3, 1, -7, 8, 20, -2, 19, 3, -40, -2, -11, 6, -12, -7, 7, 15, -27, -33, -21, -41, 18, -31, 7, -12, 9, 13, -1, -14, 0, -8, 29, 5, 0, -3, 0, 23, 28, -55, 6, 19, -24, -68, 19, -10, 11, -5, -23, -2, 12, -45, -31, 10, 27, -33, -3, 7, -1, -4, 4, -4, -32, -2, -1, 8, 0, -30, 11, 17, 38, -4, -11, -19, -21, -18, 30, 15, -30, 3, 12, 20, -50, 37, 9, 6, 0, -33, 21, 16, 15, -2, -11, 10, 28, -9, -4, -1, -3, -61, 9, 11, -1, -16, -25, -7, 14, 0, -24, 23, -11, 32, 8, -2, -9, -8, -28, 16, -7, -16, -9, 15, 2, 1, -40, 18, 11, 4, -72, 23, 14, -24, 4, 6, 6, 0, -7, -14, 15, -41, 0, 24, -116, -18, 8, 14, 21, 10, -24, -4, -22, -11, 21, 3, -9, -11, -20, -24, 17, -2, 6, 2, 1, -3, 7, -25, -1, 23, 16, 7, 15, 29, 2, -2, -31, -11, -49, 17, -21, -64, 7, -1, -39, 8, -18, 17, -2, -32, -21, -16, 5, -19, 8, -30, 12, -5, -76, -59, -11, -6, 25, -18, -18, 26, -15, 0, -55, -6, -11, 18, 26, -11, -5, -8, -19, 8, 18, 14, 1, 22, -13, -23, 10, -17, -10, 24, 0, 25, 17, 12, 11, -4, 28, -29, 46, 7, 7, -20, -5, -14, -29, 1, 5, -41, 29, -49, 1, -3, -16, -13, 11, 5, -9, 11, -9, -62, 16, 19, 7, 13, -41, -14, -15, -4, -21, 3, -6, 12, 7, 10, -24, 8, 16, 0, 5, 4, -11, 1, -60, 20, 8, 5, -16, 6, -61, -13, 23, 16, 30, 16, -6, -14, 16, 16, -10, 15, 33, -47, -38, 3, 2, -10, 9, 15, 0, 10, 17, 2, 8, -31, 2, 7, -2, 19, -5, -1, 2, 5, -4, -19, 25, 7, -9, 2, -13, -4, -20, 21, -4, 16, -7, 16, 39, -8, -39, 28, 23, 30, -1, 19, 40, 10, 3, -1, 38, 11, 25, 8, -3, 13, 25, -20, 13, -11, -7, -19, -9, -8, 9, -41, 7, 0, -6, 14, -40, 5, 21, 24, 9, 7, -7, -14, -7, 15, 18, -20, -15, 7, 15, 35, -35, 24, 26, 17, -33, 44, -10, -33, 33, 1, 21, 9, -16, 43, 8, -10, 20, 0, -46, -13, 2, -9, 23, -23, -5, 4, -5, 11, 2, 2, -13, -24, -16, -22, -80, -10, -89, -23, 4, -48, 0, -4, -10, 1, -19, -12, -3, 35, -49, 11, -14, -22, -14, -6, 31, -20, -7, 3, -19, -7, -16, 12, -20, -25, -17, -13, -57, 25, -7, -10, -2, -22, -4, -7, -31, -28, 8, 7, 19, 14, -5, 0, -5, -24, -12, 1, -29, -2, 22, -11, 15, -3, 0, -14, -7, 16, -2, -19, 13, -6, 0, -5, 12, -10, -36, 0, 9, -29, 6, 0, 21, 5, 24, 17, -10, 3, -67, 17, -63, -24, 44, -1, 20, -6, -11, 11, -4, 12, -17, 4, -20, -35, -4, 15, 10, 14, 7, -27, 0, -13, -25, -3, -7, 22, 12, 1, 7, -30, -21, 1, 25, -25, -7, 18, -40, -5, -5, 18, 14, -51, -56, 9, -16, 3, 11, -10, 7, 10, 8, -32, -27, 8, -13, -9, 27, 33, 6, 5, -41, 21, -3, 17, 1, 15, 30, 8, 3, -16, 9, 4, -32, 8, -16, 12, 10, 20, 10, -16, 14, 8, -15, -38, -13, 25, 5, 3, -3, 17, 8, -2, -59, -11, 31, 1, 11, -23, -36, -16, -2, 7, 4, 23, 23, -6, 10, -49, 13, -7, -15, -18, -2, 7, 1, -13, -8, 12, 5, -11, -2, 4, 15, 34, 2, -1, -9, 8, -14, -16, -48, -24, 9, 19, 11, -10, -1, 3, 7, -6, -23, 18, -37, 8, 13, 16, 17, 3, -5, -31, 13, 8, 6, -6, -1, -1, -25, -2, -11, 29, 32, -36, 21, -26, 26, -11, 22, 7, 2, 15, 5, -12, 11, -9, -21, 18, -5, 5, -7, 2, 22, 15, 34, -17, 28, -5, -27, 24, -14, -3, -10, 1, 11, -10, 41, 28, 37, 4, 12, -23, -5, 16, -11, 3, -23, -29, 6, 16, -5, -9, -20, 10, 1, -24, 3, 21, -11, 5, -21, 12, -8, 10, -1, 19, 19, -1, -7, 46, -15, 11, 7, 14, -12, -19, -38, -14, 16, 18, -23, -6, -20, 7, 27, -12, 16, -18, 2, -6, 13, 11, -52, 19, -12, -27, 11, -3, 1, 12, -6, -5, 18, 27, 4, -25, -7, -5, 3, 6, -16, -2, -16, 7, -4, -10, -7, 15, -21, -25, -10, 10, 0, -22, 4, -19, 22, -51, -87, -8, 3, -17, 1, 5, -55, -2, -11, 21, -26, -40, -33, 7, 8, -17, -4, 4, 16, -11, 7, -29, -48, 27, -9, -13, -14, -28, -22, 25, -32, -25, 18, 0, -5, 28, 5, -22, -42, 9, 11, 10, -72, 17, 8, -28, 22, -19, 23, 33, -1, 24, 1, 6, -30, -19, 11, 5, -3, -25, 20, -6, 2, 3, 14, -15, 11, -3, -20, -13, -18, 20, -5, 10, 1, -20, 18, -14, -2, 0, -12, -21, 18, 22, -13, 2, 8, 15, -2, -4, -51, -16, 0, -31, 5, 12, 15, -7, -6, 6, -32, -25, -10, -5, -16, -4, -1, 23, -1, -52, -18, -17, -68, -20, 18, 7, 12, 3, 45, -18, 12, -1, 45, 13, 18, -2, -23, 4, -2, 24, 37, 29, -12, -13, 15, -34, 18, -12, 24, 20, 4, -9, 14, -43, 10, 2, 3, -5, 10, 1, -8, 1, -8, 1, -16, -5, -1, -62, 2, 4, 23, 4, 12, 36, 19, -7, 0, 2, -14, -2, -2, 9, 4, 3, 0, -10, 24, -2, -8, -8, -2, 8, -1, -7, -20, -4, -25, 22, -9, 3, 4, 6, 16, 0, 11, -12, 9, -1, 10, 1, 6, 0, 23, -4, 3, 13, -3, -15, 8, -1, -12, -9, 11, 25, 25, -19, -25, -3, -17, -3, 1, -53, 22, -9, 5, -27, 34, 4, -17, -12, 19, -7, -1, -23, 18, -24, -28, 4, -12, 24, -9, -11, -8, -23, 37, 30, 12, -8, 0, -13, -24, -23, 42, 8, 9, -19, 2, -19, -23, -10, 13, 19, 7, 9, -6, 24, 23, -2, 7, -8, -26, 14, 8, -25, -12, -45, -12, 1, 7, -1, -30, -7, -18, -1, 20, -32, 4, 9, -4, 3, 0, 8, -30, 4, -22, -30, -10, -1, 13, -2, -5, -17, -1, 21, 22, -4, 9, -39, -13, 9, 35, 2, -38, -14, -11, 2, 28, 23, -16, 28, -25, 18, -22, -18, 47, -12, -63, 9, 3, 3, 19, 0, -14, -4, -10, 10, 3, -33, 2, 21, 12, -40, -34, 30, -2, -3, -5, 16, 33, 9, -26, 7, 9, 7, -15, 3, 9, -5, -16, 3, 8, 22, -14, 12, -14, 13, 15, 0, -4, 29, 1, 15, -4, 17, -8, 14, 8, 22, 13, -1, 19, 11, -8, 12, -9, 16, -11, -13, 57, -27, 3, -32, 6, 0, -45, 1, -15, 17, 12, -41, 11, 4, 7, 9, 16, -36, -32, -10, 1, 5, 25, 18, 28, 4, -17, 7, -30, -1, -26, -17, 38, -30, 12, 11, -10, 6, -26, -6, -6, 0, 37, 3, -5, 6, 19, 5, -8, 21, 3, -9, 6, -8, 17, 1, -13, 17, -17, -16, 12, 21, -26, -3, 48, 15, -7, -3, 11, -17, 11, 13, -23, 4, 28, -5, 17, 12, -20, -8, 9, 6, -2, 37, 0, 5, 5, -5, 10, -17, 12, 14, -36, 2, -10, 13, 35, 9, -7, 8, 4, -14, -2, 5, -11, 23, 15, -4, 6, 6, 7, 10, 4, 1, 5, -3, -11, 11, 15, 1, 14, 18, 18, 8, -36, -39, -75, -30, 44, 9, -1, 2, 5, 16, 31, 7, -51, 43, -20, -4, 19, 6, 10, -21, -30, 0, -10, 12, -31, -12, 22, -9, -8, 1, -5, 22, -11, -2, -27, 9, 15, -12, -20, -13, 9, 14, -15, -7, -8, 11, -22, -14, -16, -23, -7, 1, -18, -24, -1, 12, 14, 12, -34, 17, -10, -6, -25, -2, 27, -19, 12, -63, 0, -14, 32, 31, -25, -8, 32, 31, 8, 27, 19, 19, -5, 45, 0, -25, -3, 48, 29, -9, 20, 20, 10, 49, 4, -40, -6, -31, -20, 8, 23, -16, -13, -5, 10, -24, 21, -8, 7, -59, 7, -11, -14, -42, 23, -27, 3, 3, 23, 16, 0, -6, -12, -29, -12, 46, -4, -1, -12, 6, 7, -2, 31, -18, 41, -4, -1, -1, 19, -5, 32, 0, 0, -29, 3, -10, 6, 9, 3, -8, -4, -3, -7, -2, -10, -7, 21, 17, -3, -28, -8, -7, 9, 9, 4, -6, -5, -7, 10, -6, -37, 7, 20, 13, 9, -6, -5, -15, -44, 5, 11, 1, 4, 16, 29, -11, 0, 16, -16, 24, 4, 13, -5, 19, -16, 7, 26, 3, 26, -22, 9, 1, 12, 18, 10, 14, 28, -6, -47, -5, -68, -2, 7, 19, -6, -4, -16, -14, -15, 4, -63, 9, 2, -30, -23, -33, 8, 17, 4, -11, -38, -6, -5, -12, -17, 6, 2, -8, -3, -8, 14, -4, -26, -14, 4, -29, -35, -8, 39, 14, -25, 2, 4, 3, 19, -22, 6, -6, 6, -3, -7, -5, 19, 6, 33, -10, 10, 6, -13, 0, -43, 31, -15, -26, 9, 1, 0, 6, -9, 28, -6, 19, -14, -13, -11, -9, 13, -22, -29, -2, 17, 18, 5, -11, -23, -28, 18, -5, -12, 0, 1, 24, -9, -34, 10, -28, 6, -28, 5, 6, -15, -8, 33, -15, 6, -27, -23, 9, 31, 20, 14, 8, -32, 0, -11, -6, -17, 0, -3, 6, 7, -7, 33, -18, 18, 11, 4, -42, -36, -2, 24, -6, -2, 12, -6, 2, -1, -18, -5, -4, -23, -30, 7, 21, 25, 16, 37, -21, -4, 23, 8, -39, -14, 9, -1, -10, -54, 5, 11, 16, 0, -10, 3, 5, -6, 0, -2, -3, -11, 7, -5, 3, 14, 18, -6, 22, 23, -8, -4, -1, 34, 7, -12, 10, 8, 5, -19, 5, 24, 15, 6, 4, -29, 10, 1, -27, -8, 6, -2, 22, -15, 0, 21, 21, 18, -25, -6, 6, 12, 1, -9, 15, -9, 3, 5, 19, -5, 4, 35, -5, -19, -16, 19, 35, 9, -30, -6, 0, 18, -12, 14, 15, 6, 14, -22, -7, -5, 20, -27, -3, -9, 18, -24, -11, 3, 10, 15, 10, 5, -19, -4, 20, 17, -2, 1, -7, 2, 8, -2, -19, -28, 13, 8, -17, 13, 8, 22, -13, -32, -15, -8, 2, 2, -7, 19, -11, 9, -12, 12, -10, 8, -16, 0, -12, -35, -19, 2, 2, 56, 2, -3, -13, -17, 19, 24, -17, 14, 3, -18, 35, 21, 29, -15, 0, -2, 6, -14, -21, 10, 23, 14, 22, 21, 13, 5, 13, 12, -26, -25, -34, 28, -3, -9, -9, 13, 17, 18, 11, 12, -21, 10, 19, 13, -16, -14, 3, -23, 5, -16, -24, -2, 19, -9, -5, -15, 8, 7, 13, -34, -20, -12, -1, -34, -29, 9, -18, -20, -14, -4, -26, 25, 7, 16, 18}

#define TENSOR_CONV2D_5_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_5_BIAS_0 {-29, 33, 1, 13, 6, 22, -22, 2, -15, 2, -43, -63, -35, -3, 1, -7, -75, 15, -10, 5, 10, -22, 12, 7, 16, 21, 9, 9, -2, -8, 4, 6}

#define TENSOR_CONV2D_5_BIAS_0_DEC_BITS {7}

#define CONV2D_5_BIAS_LSHIFT {3}

#define CONV2D_5_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_6_KERNEL_0 {38, -21, 16, -11, -13, -5, -61, 26, 17, -11, -55, 1, -4, -10, -8, 14, 16, 28, -35, 16, -34, 27, 7, -13, 14, -17, -2, -6, 37, 67, -49, -16, -3, 9, 19, 21, -35, -2, -18, 14, 2, -23, -40, -5, 6, -16, 5, 15, -7, 8, 63, 3, -24, 13, 21, 16, 3, 25, 13, 26, -6, 60, -23, 11, 24, -1, -22, -7, 3, -19, -40, 15, 4, -1, 1, 29, 29, -3, 41, -2, 17, -25, 38, -1, 0, 37, -10, 33, 19, -34, -4, -33, 4, 29, 11, 2, 78, -31, 4, -17, 18, -46, 12, -2, -28, -9, -3, -26, 16, -6, 40, -15, 39, -22, 39, -17, 16, 11, 21, 18, 8, -18, 3, -1, -5, 53, -13, 26, -49, -35, -20, -5, 41, -25, -47, 33, -4, 6, 7, 5, 13, -16, 16, -18, 15, 23, -24, 8, 9, 22, 10, -5, -18, -3, 16, 3, 3, 47, -3, 22, -41, 0, -17, -8, -9, -27, 2, 0, 13, -15, -20, 4, 19, -9, 16, 28, -16, -27, 35, -11, 13, 25, -36, -3, 1, 22, 3, 25, 23, 25, 6, -8, 73, -7, -12, 43, 35, 4, 5, 12, -3, 19, 0, 20, 2, 13, 7, 14, 29, 21, 19, 7, -16, 15, -6, 9, 12, 9, -3, -10, -17, 13, 28, 18, 39, 7, -22, 9, -3, 18, -51, -14, -3, 2, -42, -7, 27, 11, -63, -21, -11, 20, 13, -23, -34, -2, 16, 44, -3, 17, 25, 11, -8, 15, 34, 27, 80, -6, 7, 26, -10, -10, -59, -4, 41, 25, 0, -27, 3, 10, -27, 26, 8, 1, 54, -5, -36, -12, 12, 43, 2, 21, 29, 17, -23, 10, 29, -4, 11, -10, 30, -4, -4, 22, -14, 24, 31, -14, -16, -19, -31, -9, -20, 5, 9, -11, -31, 48, -1, -37, -7, 14, 41, -6, 7, -24, -19, 44, 6, 19, -20, 1, 16, 24, 46, -7, -3, -11, -13, 8, -17, -12, -11, -2, -36, 12, -19, 18, 12, 29, -9, -11, -4, -19, 2, 6, -43, 26, 39, 11, 16, 27, -45, 25, -12, 3, 18, 25, -57, -21, -12, 7, -25, -28, -7, -13, -18, 21, -14, 19, -22, -14, 5, -9, 24, 29, 13, 30, -13, 1, 8, 19, -3, 22, 28, -12, 46, 12, -33, -1, -10, 47, 23, -25, -52, 11, -32, 12, 2, -30, 16, -10, 3, -24, 7, -20, 17, 10, 28, -9, 19, -8, 16, 4, -12, -29, 1, 12, -7, -26, -10, -2, -44, 10, -5, 27, 26, 27, 29, 15, 17, 16, -16, 32, -4, 18, 20, 20, 34, -16, 1, -33, -28, -1, 15, 25, 4, -16, -33, -11, 19, -29, 12, -4, -21, 17, 2, -5, -37, 8, -16, 5, -24, 4, -10, -15, 58, 13, 41, 11, -6, -40, 24, -5, -35, 26, 11, 16, 25, -6, -36, 11, 29, 13, -19, -8, -17, 0, -2, -20, -6, 5, 2, -7, -21, 4, -38, 44, -12, -32, 19, -34, -2, 26, 20, -21, -18, -18, 34, 14, 4, 24, 28, 21, 5, -13, 5, 30, -44, 15, -12, -20, -34, -17, 20, -15, -12, -7, -21, -11, -71, 12, -16, -60, -14, 32, 7, 2, 11, 15, -9, 9, -14, -16, 5, 30, 39, -25, 0, 16, -25, 10, 31, -12, -36, -3, 15, 5, 25, -33, -35, -15, -19, 41, -3, -28, 4, -24, 7, -11, 59, 28, -8, 17, 10, -13, 14, 33, -9, 17, 28, 29, 12, 14, -37, -40, 8, -14, -36, 9, 34, -26, 13, 34, -65, -10, -2, 41, -12, 26, -18, 48, 22, -5, -78, -23, -53, 4, -6, 26, 7, 11, -17, 8, 5, 14, 27, -30, 9, -24, -1, 13, 1, -33, -28, 5, -13, -9, -12, 6, -1, 29, -10, 28, 22, 33, -11, -46, -6, 3, -25, -16, 17, 2, 31, -19, -8, -17, 7, 15, -9, 20, -17, -7, 28, -11, -13, 20, -12, -4, 5, -19, 10, -29, 13, -26, -17, -44, -14, -8, -6, 0, -5, 4, 3, 30, -12, -7, -29, -5, 16, -22, 30, -1, 30, 3, 15, 6, -18, 7, -20, -4, 22, 1, 17, 4, 5, 26, 13, -14, 47, 26, 33, 27, 75, 10, 8, 7, 10, 44, -19, -36, -19, -21, -26, -51, -35, -9, -22, -10, -22, 4, 39, -6, -3, -7, 5, 32, 4, 11, -58, 22, -13, -47, -22, -9, 24, 21, -1, -23, 16, 12, -95, -33, -48, -5, 15, 6, 8, -5, -10, -7, -3, 18, -23, -24, 47, 43, 8, -13, -32, 5, -58, 16, -1, 12, -8, 7, 17, -7, -36, -12, 11, 0, -32, -36, 22, 5, -10, 14, 2, -6, 7, 0, -6, -55, -12, 13, -35, -8, 0, 0, -16, 4, -12, -10, -2, 34, -7, 5, 17, 5, 18, -5, 11, -3, 31, -16, -2, -6, -31, 13, 9, -6, 9, -8, 20, 7, 18, -40, -16, -5, -15, -19, -12, -19, -21, -16, -27, 20, 1, -19, 19, 24, -20, 33, -4, -9, 3, 11, 14, 20, -12, -30, 22, -16, 47, -52, -27, -34, -3, -9, -39, -36, -26, 38, 23, 15, 37, 23, 17, 9, 40, 4, -14, -21, -5, -9, -1, 7, 57, 33, -7, -21, -54, -28, 8, 14, 0, -8, 18, 8, -50, -5, 0, 17, -8, -7, 36, -24, 41, -29, 9, 3, -6, 34, -12, -33, 3, -7, 9, -23, 22, 10, 14, 13, 27, 41, 22, 2, 27, 10, 38, -17, 7, 0, 6, 39, 16, 2, 12, 5, 5, -21, 7, 2, 24, 19, -10, -50, 11, -9, 0, -43, 87, 10, 27, 5, 41, 15, 12, -2, 21, 33, 40, -23, 18, 12, -7, 27, -9, -2, -10, 31, -17, 26, 10, 14, 4, 15, -18, 0, 28, 6, 11, -13, 24, -33, 2, -21, 11, 10, -5, -11, 8, 15, -37, 14, -4, -34, 54, 4, 24, 5, 8, -16, -3, -25, 6, 1, -6, 13, 22, -14, -7, 26, -12, 1, 44, -45, -46, 26, 37, -3, 5, 14, -1, -16, 34, -1, -23, -16, 11, -31, 30, -12, 1, 30, -22, -6, 9, -2, -21, 17}

#define TENSOR_CONV2D_6_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_6_BIAS_0 {-3, -11, -10, -5, 0, 16, 2, 14, 4, 16, 5, 5, -5, 7, -23, 2}

#define TENSOR_CONV2D_6_BIAS_0_DEC_BITS {6}

#define CONV2D_6_BIAS_LSHIFT {0}

#define CONV2D_6_OUTPUT_RSHIFT {6}

#define TENSOR_CONV2D_7_KERNEL_0 {-1, -29, 8, -66, -25, 18, 17, 19, -47, -68, -16, 1, 0, 2, -70, 2, 7, -54, -55, 8, -75, 18, -1, 10, -70, 15, 25, 5, 19, -54, -83, 16, 10, -32, -9, -22, -29, 17, 3, 13, -36, -40, 7, 17, 26, -63, -93, 18, -8, -44, -37, 30, -78, -5, -3, 16, -31, 22, 10, 1, 45, -22, -30, 9, -21, -19, -27, -33, 14, 3, 18, 13, 3, -25, 1, 4, -31, 54, -28, -30, -19, -50, -77, -65, -32, 10, -4, 28, -38, -34, 3, 6, -18, -27, -92, 3, -48, 15, -50, 12, 3, -11, -56, -24, 14, -24, -21, -15, -36, 43, -34, -21, -13, -43, -95, -107, 14, 13, 15, 26, -6, -20, -3, 22, -30, 35, -69, -2, -12, -13, -37, 0, -20, -3, 23, -21, -22, -48, -25, -6, -1, -13, -1, 23, -13, -44, 6, 15, 16, 24, -31, -40, -35, -24, 20, -50, -35, 12, 7, -28, -42, -61, -7, 21, -31, 0, -40, -28, -2, 26, -5, 29, -34, -23, -14, -33, -16, -23, 14, -23, -12, -5, -12, -2, -5, 11, -16, 44, 23, -24, 37, 36, -39, -33, -27, -6, -22, 6, -31, -33, 26, 25, -38, 15, -10, -2, -9, 10, -27, -34, 14, 13, -41, 13, -19, -16, -14, 14, -10, 33, -11, -17, 41, -14, -49, 2, -17, -9, -2, -62, -7, -2, -5, 14, -11, -10, 44, 49, -15, -32, 28, 18, -7, 18, -19, 7, 15, -16, -5, -10, 7, -3, 19, 21, 7, -17, -13, -44, -8, -34, 0, -65, 25, -20, 21, 22, 8, -60, -36, 29, -22, 15, -5, 15, -7, -42, 10, 2, -32, 21, -47, 18, -16, -35, -17, 19, 22, -24, -35, -53, 3, 6, -12, -3, 23, -34, 0, 23, 19, -73, -25, -12, -1, 10, -12, -5, 10, -48, 4, -67, 15, -40, 13, 17, 7, -1, 20, 25, -8, 32, 26, 18, 5, -11, -19, -30, -27, 13, -49, -18, -28, -30, 45, 0, 3, -2, -10, 4, -34, 0, -3, -24, 13, -7, -16, -26, 18, -6, 43, -12, 7, 25, -16, -29, 3, 18, -6, -6, 0, -36, 16, 25, 2, -36, -16, -29, -10, 22, -12, -8, 2, -54, -4, -47, 25, -52, 25, 17, -24, 37, 23, 12, 3, 32, 17, -14, 7, 7, -22, -20, -25, -28, 5, -15, 15, -12, 8, -14, 5, -24, -32, 23, -4, 4, 15, -31, 6, -13, -46, -32, 11, 27, 24, 7, 5, 19, 9, 10, -24, 26, 27, -4, 9, -24, 32, 18, -29, 37, 5, 20, -15, -86, -20, 1, 57, -51, -52, -19, -5, 2, -4, 10, -42, 15, 52, -51, 18, -68, -36, 9, -93, 2, 19, -28, -47, 1, 16, 3, -54, -12, 25, 40, -35, -8, -1, -1, -20, 15, 7, 7, 16, 5, 1, -13, 22, 20, 42, 17, -34, -48, 2, 19, -32, 25, 22, -10, 2, -34, -7, 41, -3, 11, 6, 7, -14, -45, 6, 10, 9, -46, -29, -10, 8, -24, 24, 18, -76, 22, 42, -58, 26, -77}

#define TENSOR_CONV2D_7_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_7_BIAS_0 {6, 7, 4, 4, -8, -8, -8, -13, -5, -3, -29, 0, -18, -5, -1, -11}

#define TENSOR_CONV2D_7_BIAS_0_DEC_BITS {6}

#define CONV2D_7_BIAS_LSHIFT {0}

#define CONV2D_7_OUTPUT_RSHIFT {8}

#define TENSOR_DENSE_1_KERNEL_0 {-35, -23, -43, -35, 14, 16, 6, 7, -39, -21, -46, -39, 8, 11, 6, 5, -24, 10, -25, 20, -24, -42, -13, 14, -31, 18, 21, 9, -14, 19, 12, -31, -29, 14, 15, 8, 19, -15, -28, -55, -28, 15, -29, 11, 19, -7, 16, 7, 13, 6, 7, -20, -25, -62, 10, 5, 16, 9, 13, 5, 5, 9, -6, 6, -53, -63, -67, -77, -124, 17, 15, -46, -112, -118, -56, -95, -55, -49, -78, -58, 17, 12, 9, 8, 15, -24, -24, -32, -38, -35, -32, -28, -37, -16, 7, -25}

#define TENSOR_DENSE_1_KERNEL_0_DEC_BITS {5}

#define TENSOR_DENSE_1_BIAS_0 {-9, -6, -34, -19, 81, 7}

#define TENSOR_DENSE_1_BIAS_0_DEC_BITS {5}

#define DENSE_1_BIAS_LSHIFT {0}

#define DENSE_1_OUTPUT_RSHIFT {5}


/* output q format for each layer */
#define CONV2D_4_INPUT_OUTPUT_DEC 7
#define CONV2D_4_INPUT_OUTPUT_OFFSET 0
#define CONV2D_4_OUTPUT_DEC 4
#define CONV2D_4_OUTPUT_OFFSET 0
#define RE_LU_4_OUTPUT_DEC 4
#define RE_LU_4_OUTPUT_OFFSET 0
#define CONV2D_5_OUTPUT_DEC 1
#define CONV2D_5_OUTPUT_OFFSET 0
#define RE_LU_5_OUTPUT_DEC 1
#define RE_LU_5_OUTPUT_OFFSET 0
#define CONV2D_6_OUTPUT_DEC 1
#define CONV2D_6_OUTPUT_OFFSET 0
#define RE_LU_6_OUTPUT_DEC 1
#define RE_LU_6_OUTPUT_OFFSET 0
#define CONV2D_7_OUTPUT_DEC -1
#define CONV2D_7_OUTPUT_OFFSET 0
#define RE_LU_7_OUTPUT_DEC -1
#define RE_LU_7_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_DEC -1
#define GLOBAL_MAX_POOLING2D_1_OUTPUT_OFFSET 0
#define FLATTEN_1_OUTPUT_DEC -1
#define FLATTEN_1_OUTPUT_OFFSET 0
#define DROPOUT_1_OUTPUT_DEC -1
#define DROPOUT_1_OUTPUT_OFFSET 0
#define DENSE_1_OUTPUT_DEC -1
#define DENSE_1_OUTPUT_OFFSET 0
#define SOFTMAX_1_OUTPUT_DEC 7
#define SOFTMAX_1_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {7};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_4_input_config = {
    .super = {.name = "conv2d_4_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_4_kernel_0_data[] = TENSOR_CONV2D_4_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_4_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_dec[] = TENSOR_CONV2D_4_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_kernel_0 = {
    .p_data = (void*)tensor_conv2d_4_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_4_bias_0_data[] = TENSOR_CONV2D_4_BIAS_0;

const nnom_shape_data_t tensor_conv2d_4_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_4_bias_0_dec[] = TENSOR_CONV2D_4_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_4_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_4_bias_0 = {
    .p_data = (void*)tensor_conv2d_4_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_4_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_4_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_4_output_shift[] = CONV2D_4_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_4_bias_shift[] = CONV2D_4_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_4_config = {
    .super = {.name = "conv2d_4"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_4_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_4_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_4_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_4_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_5_kernel_0_data[] = TENSOR_CONV2D_5_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_5_kernel_0_dim[] = {4, 2, 32, 32};
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_dec[] = TENSOR_CONV2D_5_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_kernel_0 = {
    .p_data = (void*)tensor_conv2d_5_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_5_bias_0_data[] = TENSOR_CONV2D_5_BIAS_0;

const nnom_shape_data_t tensor_conv2d_5_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_5_bias_0_dec[] = TENSOR_CONV2D_5_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_5_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_5_bias_0 = {
    .p_data = (void*)tensor_conv2d_5_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_5_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_5_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_5_output_shift[] = CONV2D_5_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_5_bias_shift[] = CONV2D_5_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_5_config = {
    .super = {.name = "conv2d_5"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_5_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_5_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_5_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_5_bias_shift, 
    .filter_size = 32,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_6_kernel_0_data[] = TENSOR_CONV2D_6_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_6_kernel_0_dim[] = {2, 1, 32, 16};
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_dec[] = TENSOR_CONV2D_6_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_kernel_0 = {
    .p_data = (void*)tensor_conv2d_6_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_6_bias_0_data[] = TENSOR_CONV2D_6_BIAS_0;

const nnom_shape_data_t tensor_conv2d_6_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_6_bias_0_dec[] = TENSOR_CONV2D_6_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_6_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_6_bias_0 = {
    .p_data = (void*)tensor_conv2d_6_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_6_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_6_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_6_output_shift[] = CONV2D_6_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_6_bias_shift[] = CONV2D_6_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_6_config = {
    .super = {.name = "conv2d_6"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_6_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_6_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_6_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_6_bias_shift, 
    .filter_size = 16,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_7_kernel_0_data[] = TENSOR_CONV2D_7_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_7_kernel_0_dim[] = {2, 1, 16, 16};
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_dec[] = TENSOR_CONV2D_7_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_kernel_0 = {
    .p_data = (void*)tensor_conv2d_7_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_7_bias_0_data[] = TENSOR_CONV2D_7_BIAS_0;

const nnom_shape_data_t tensor_conv2d_7_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_7_bias_0_dec[] = TENSOR_CONV2D_7_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_7_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_7_bias_0 = {
    .p_data = (void*)tensor_conv2d_7_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_7_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_7_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_7_output_shift[] = CONV2D_7_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_7_bias_shift[] = CONV2D_7_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_7_config = {
    .super = {.name = "conv2d_7"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_7_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_7_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_7_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_7_bias_shift, 
    .filter_size = 16,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_1_config = {
    .super = {.name = "global_max_pooling2d_1"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_1_config = {
    .super = {.name = "flatten_1"}
};
const int8_t tensor_dense_1_kernel_0_data[] = TENSOR_DENSE_1_KERNEL_0;

const nnom_shape_data_t tensor_dense_1_kernel_0_dim[] = {16, 6};
const nnom_qformat_param_t tensor_dense_1_kernel_0_dec[] = TENSOR_DENSE_1_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_kernel_0 = {
    .p_data = (void*)tensor_dense_1_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_1_bias_0_data[] = TENSOR_DENSE_1_BIAS_0;

const nnom_shape_data_t tensor_dense_1_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_1_bias_0_dec[] = TENSOR_DENSE_1_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_1_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_1_bias_0 = {
    .p_data = (void*)tensor_dense_1_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_1_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_1_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_1_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_1_output_shift[] = DENSE_1_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_1_bias_shift[] = DENSE_1_BIAS_LSHIFT;
const nnom_dense_config_t dense_1_config = {
    .super = {.name = "dense_1"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_1_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_1_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_1_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_1_bias_shift
};

const nnom_softmax_config_t softmax_1_config = {
    .super = {.name = "softmax_1"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_1_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_4_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_4_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_5_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_6_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_7_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_1_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_1_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_1_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_1_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_19_NNOM_H