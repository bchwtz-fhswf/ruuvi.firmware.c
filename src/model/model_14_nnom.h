#ifndef HAR_CNN_NNOM_H
#define HAR_CNN_NNOM_H

#define APP_ACTIVITY_MODEL_NAME har_CNN_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.24075012569983611f, -0.24075012569983611f, 0.0f, 0.24074851273755382f, -0.0f, 0.25f, -0.5f, 0.25f, 0.49040304612512053f, -0.24075173866211835f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_24_KERNEL_0 {19, -2, -14, -25, 5, -23, -28, 18, -6, 35, 39, -3, 38, -18, -34, 10, -3, -13, 4, -4, -29, 13, -44, 3, 32, 14, -40, 19, -29, 0, 45, -10, 8, -4, -41, 25, -17, 27, -25, -10, 14, -25, 31, 14, -10, 36, -14, -42, -12, -6, 0, -27, 2, 2, 19, 6, -41, 20, 50, -37, -34, 33, -21, 20, -3, -46, 4, 17, 17, -4, 32, -3, -17, -1, -30, 4, -29, -28, 23, -29, 0, 7, 47, 37, 43, -20, -3, 26, -3, 15, 21, -31, -4, -1, -40, -8, -25, 1, -5, -7, 6, 16, -5, 3, -1, -11, 25, -10, 14, -5, 12, 9, 22, -5, -32, -12, -22, -3, 67, 11, 16, -3, 40, -57, 9, 20, -9, 5, -25, 14, -15, 18, -29, 4, 5, 6, 48, -4, -5, -37, -21, -10, 10, 45, -5, 59, -10, 12, 5, -33, 12, 5, 8, -50, -12, 43, -11, 9, -5, -3, -3, -3, 7, 8, -10, -40, -19, 65, -31, -37, -14, 23, 45, 25, -13, -4, -8, -15, -8, -4, 0, -12, -9, 28, -16, -18, 15, 1, -10, -3, 15, -1, -1, -50, 7, -31, -1, -24, 10, -27, 1, -20, 4, -19, 49, -13, -2, -11, -15, -8, -31, 29, -7, 16, -32, -2, -22, -20, 13, -5, 15, 2, 23, 18, 25, 33, -69, -27, -37, -39, 28, -27, 19, 34, 8, -17, 20, 9, -6, 25, 11, -8, -2, -9, 16, 7, 18, 27, -13, -73, -3, -48, 0, -5, 2, 5, 5, -23, -27, -49, -24, 37, -14, -11, -42, 3, 15, -19, -46, -6, -28, 37, -1, 19, 51, -4, -40, 45, 38, -20, 15, -4, 7, -9, 17, -4, 19, -13, 37, 25, 16, -10, -13, -25, 3, 11, -3, -16, -22, 19, -32, -31, -1, -14, 10, 41, -1, 0, 19, -11, 26, 16, 25, -37, 30, -42, -7, 45, -12, -1, -17, -7, 11, 9, 47, 14, 25, 7, 21, 5, -40, -10, -31, -12, -54, -18, 26, 6, 7, 10, -24, 12, -8, 0, -10, -7, 53, -15, -6, 12, 4, 23, 32, 23, -24, 44, 15, 26, 22, 22, 19, 28, -15, -11, -27, 0, -2, 9, 23, -3, -36, -37, 58, 22, -19, -30, -31, 9, 17, 4, 19, -6, 48, 12}

#define TENSOR_CONV2D_24_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_24_BIAS_0 {-18, -31, -72, -41, -25, -38, -34, -63, -1, -74, 10, -63, -8, -36, -26, -8, -3, 10, -33, -36, -24, -28, -99, -22, 5, -12, -68, -81, 4, -2, 7, -43}

#define TENSOR_CONV2D_24_BIAS_0_DEC_BITS {9}

#define CONV2D_24_BIAS_LSHIFT {4}

#define CONV2D_24_OUTPUT_RSHIFT {9}

#define TENSOR_CONV2D_25_KERNEL_0 {12, 2, -31, 7, 31, -32, -4, -8, -8, 18, 18, -23, -6, 1, -24, 9, 24, 26, 8, -32, 10, -21, -18, 13, -12, -26, -24, -14, 10, -2, -13, 4, 16, -13, 1, 24, 26, -17, -15, -41, 16, -20, 22, -32, 39, -7, 12, 21, 21, -17, 17, -27, -8, -13, -35, -17, 15, -5, 19, -34, 5, -20, 3, 9, 20, -5, -5, 13, 18, -4, -4, -20, 5, -17, 1, -31, -31, -34, -9, 6, 6, -3, 0, -9, 3, 5, -11, -5, 0, 7, -29, -21, 15, -5, 20, 10, 8, 11, 6, 6, 7, -26, -16, -2, 10, -6, -1, -6, 0, 10, 0, 14, 11, 6, 0, -18, 14, -2, 1, -3, 14, -3, -6, -14, -3, 16, 10, -3, 26, -6, 1, 15, 24, 1, -26, 4, 13, -40, -18, -12, 26, 10, -21, 21, 6, -12, 21, -22, 4, -41, 10, -3, -9, -2, -2, -7, 13, -5, 2, -13, -21, -6, 10, 15, 10, 4, 9, -9, 8, -12, 6, 9, 14, 15, -2, -18, -6, -11, 18, -20, 7, 12, -30, -23, -4, 15, -20, -33, 2, 11, 13, -36, -23, 0, 1, -32, -46, -16, 4, -18, 9, -2, -11, -4, -3, -9, 3, 3, 3, -20, -25, -21, 18, -10, -12, 2, -1, -32, 7, 2, -18, 8, -3, 22, 33, 46, 10, -6, -5, 41, 16, 10, 29, 21, -10, 18, 25, 4, 7, 15, -17, 1, -29, -16, 30, 6, -2, 11, -13, 13, -5, 4, 27, 28, -18, 11, -4, -15, 16, -63, 5, -52, -1, -31, 17, -25, -21, 3, -21, -23, -21, 7, 6, -3, -24, -22, 0, -36, -7, -33, -10, 1, -3, 43, 19, 0, 9, -16, -7, -6, -15, 6, -7, 17, 27, -22, 11, 12, -2, 2, -4, 14, -32, -18, -9, 7, -2, -1, 15, 14, -13, -27, -10, 7, 4, -19, 7, 31, 3, -19, -18, 9, -14, -22, 5, 15, -10, 4, 4, 24, -16, -28, 16, -2, -38, 1, -2, 13, -6, -6, -18, 3, 0, -6, 3, -8, -4, 33, 9, 15, 0, -13, 24, -6, 18, -17, 5, 5, 28, -18, 9, -21, -1, -20, 27, 9, -7, -16, 4, 5, 12, 11, 39, 6, -6, -33, 6, 5, -32, -49, 21, 8, 0, -10, -23, 11, 14, -50, -1, -3, 13, -8, 9, -46, 0, -47, -9, 0, -26, 23, 15, 16, -15, 0, 11, 18, -18, 8, 2, 7, -39, 11, -5, 14, -3, -8, 3, 4, 9, 9, -2, 23, 11, 11, 3, -8, 1, -8, 55, -18, -42, 13, 13, 1, 6, -2, 17, 1, -3, 6, -5, 5, -12, 12, 5, 6, 12, 6, -21, 10, 6, -22, 15, 3, -8, 45, 1, -35, 6, -29, 18, -21, -28, -10, 25, 5, -8, -8, 4, 9, -4, -11, -8, -3, -4, 10, 6, 21, -11, 3, 4, -26, -12, 20, -9, -22, 38, -17, -3, -18, 28, 1, 1, 2, 25, 23, -4, 4, 3, 37, 7, 9, -33, -25, -4, -9, -17, -11, -3, -4, -9, -8, -33, -9, 0, 5, 2, 17, -2, -10, 8, 28, -42, -12, 23, -5, -36, 2, 4, -43, -26, 7, 21, 23, 10, 26, 17, 13, 53, 51, -6, 17, 7, 12, -10, 25, 9, 28, 22, -23, 16, 11, 11, -32, 8, -2, 17, 11, 22, -12, 11, 21, 22, 14, 11, -12, -5, -4, 4, -2, 8, 11, 16, -3, 2, -20, -12, 27, -24, -13, -32, 16, -10, 17, 15, 13, 10, -18, -6, -3, 8, 0, 15, -30, 12, 8, -29, 21, -26, -2, 10, 11, 23, 18, -28, 14, -6, -15, 9, -8, -9, -5, 32, -5, 5, 4, 6, 2, -14, 18, 3, -14, 23, 13, 11, 2, -40, 23, 15, -7, 30, 18, -12, -12, 7, -24, 10, 8, 29, 5, 5, -18, -17, -42, -45, 1, 9, -18, -2, -47, 20, -29, 2, -1, 14, 10, 21, -10, 6, 37, -15, 2, -23, -20, 0, -6, 16, -12, -15, -2, -20, 7, -5, -31, -16, -9, -2, 1, 16, -1, 4, -9, 15, -24, -14, -9, 1, -2, 8, -11, -15, -16, -46, -33, 6, 8, -5, 4, -13, -26, 9, -9, 5, 9, -12, 12, 7, -38, -39, -26, 35, 20, -8, -22, 23, -9, -2, -8, 1, -5, 10, 10, -18, 21, -22, -16, -15, -62, 28, 29, -14, 58, -33, -24, -38, 5, -7, -64, -26, -12, -21, 43, 0, -41, 15, -3, -9, -13, 31, -58, -14, 4, 26, -14, -64, -23, -72, -35, 1, 16, -22, 25, -3, 33, 19, -8, -28, 3, -20, 12, -18, 24, 10, 20, 28, 19, 7, -12, 13, -2, 19, 15, -4, -15, -2, -8, -6, 25, -5, 13, 27, 38, 22, 15, 3, -34, -16, 5, 5, -23, 0, 22, -25, -7, 14, 7, -5, -7, -2, 12, -2, -5, 0, -2, 6, 30, 12, 7, 1, 15, 6, -27, 18, 14, 5, 6, -24, 3, 0, 7, -7, -5, 9, 15, 1, 11, 23, -3, -1, 42, -17, 19, 14, 15, -9, 22, -2, -6, 7, -1, -12, 0, -4, 1, 5, 1, 9, 7, -4, -12, 8, 0, 13, 7, -7, 8, -10, -11, 9, -8, -11, -10, 25, 11, 0, -17, -20, 17, 2, -11, -1, -14, 3, 16, 0, 8, 0, -2, -13, 8, 2, -2, -14, -6, -1, -8, 0, 2, 2, 17, -1, 3, 5, 1, -10, 25, 4, 30, 1, 16, -18, 11, -1, 1, -17, -3, 9, -1, 1, 4, 9, 7, -11, -5, -3, -3, 8, -9, 2, 19, -2, 2, 9, -13, -21, -13, 12, 24, -23, -25, 0, 12, -7, -1, 4, 4, 6, -9, 16, 21, -4, -1, 8, 4, 13, 5, -2, -4, 0, -18, -3, 16, 23, 24, 19, 8, 15, 25, 12, 21, 8, 32, -1, 25, 13, -2, -3, -2, 15, -11, 6, 1, -18, 21, 8, 23, 8, -2, -9, 0, 22, -22, 5, 14, 18, 15, 1, 0, 31, 8, 4, 6, -14, -1, -2, 30, 1, -1, 7, -14, 33, 11, 13, 8, 16, 6, -12, 9, 14, 3, 0, 19, 2, -2, -26, -30, -6, -46, -26, -12, 23, -27, 15, -10, -54, -17, 7, 2, -40, -1, -10, -60, -22, 12, -5, 20, -53, -6, -62, -13, 33, 28, -6, -6, -12, -39, -18, 8, -109, 11, -18, -30, -35, -7, 3, 5, -9, -18, -58, -3, -9, -34, -11, 1, 29, 16, -11, 1, 5, -23, -8, -19, -12, 13, 25, 40, 11, -18, -13, -25, -42, -8, -9, 11, -12, -40, -4, 8, -15, -2, 8, 21, 6, 1, 1, -14, -27, 57, -8, 31, -57, 10, -1, 22, -14, -10, -15, 7, -18, -59, 3, 6, -7, -37, 31, -33, 9, 6, -8, 3, -17, -1, -17, 7, -22, 8, 3, -1, 32, 25, 7, -20, -4, 0, 6, -24, -5, 3, 17, 30, 23, 17, 12, -45, -36, -50, -18, -4, 11, -35, 9, -32, 32, -24, 3, -1, 0, -7, 13, 4, -19, 10, 31, 9, -29, -12, 7, -3, -14, 5, -8, -12, -22, -4, -13, -13, -33, 34, -19, -11, -7, 16, 3, -8, 16, -63, -39, -20, -38, 7, 11, 3, -8, -21, 7, -9, -9, 1, -15, -42, -9, 38, -3, -10, 21, 11, 8, -20, -16, -4, -1, 5, 40, 42, -6, -20, 24, 15, 17, 22, -13, -2, 3, 10, -8, 34, 23, 1, 16, -8, 24, 43, -30, 31, -20, -29, -34, -38, -7, -12, 20, -26, 13, 27, -3, 10, 15, 17, 29, -45, -19, -53, -22, 4, 30, 16, -17, 11, -81, -11, 44, 37, -21, 26, -26, 23, 13, 24, 13, -20, -1, -7, -18, -34, 26, -11, -2, -30, -3, -6, 0, 25, 5, 0, -14, -12, 4, -4, 15, -31, 1, -11, -14, -20, -11, -16, -32, 12, 6, 9, 10, -7, 13, 0, -32, -5, -8, 5, 22, 22, 11, 19, -10, -3, 4, 18, -7, -2, 7, 4, 10, -13, 25, -16, 5, -31, -2, -5, 16, -21, 17, -18, -12, -10, -6, -3, 26, 7, -2, -1, -11, -24, 2, 20, 3, -33, 4, -10, -36, 4, 1, 11, 18, -25, 10, 11, 3, 2, -1, -16, -23, -9, 17, -3, 5, 27, 4, 1, 13, -8, 22, -24, -6, -5, 7, 1, -11, -14, 29, -11, -35, -14, 6, -7, 11, 7, 20, 0, -9, -17, 0, -2, -45, 2, -4, -9, 1, 2, 0, 14, 2, -29, 12, -10, 4, 21, -3, -8, -5, 8, -20, -31, -11, -8, 6, 11, -6, -10, 6, 22, 6, 1, -37, -26, -7, 14, 7, 5, 6, 8, 27, 12, 26, 4, 0, 2, 14, 9, 5, 2, 7, -5, 8, -1, 10, 1, -12, 15, -3, 0, 9, -9, -12, -26, 6, 24, -29, -15, -2, 15, -11, -31, -12, -12, 11, -18, -3, 13, 9, 12, 5, -15, -11, -23, 8, -23, -1, 13, 9, -5, -9, 17, -17, -10, -23, -5, 1, 8, 1, 13, 4, 12, 2, 11, -12, -36, -14, 37, -4, -8, -7, -23, 0, -21, 22, 38, 20, 8, 10, -1, -25, -1, -20, 6, 25, -14, -23, -6, 14, -4, -18, -51, 13, -4, 28, 1, -8, -3, 1, 1, -11, 26, 41, -7, 1, 6, -22, 2, -2, 18, -13, 2, -25, -11, -2, 7, 9, 17, 15, 18, 4, -5, 1, 6, 26, -14, 13, 13, -14, 24, 20, -18, -2, -1, 6, 7, -26, -1, -1, -18, -3, -4, -23, -4, -7, 17, 5, -1, 9, -6, 19, -7, 11, -31, -31, 21, 4, 3, -3, 14, -28, 41, -4, -8, -6, 16, 22, 1, 12, 31, 16, -11, 10, 9, -6, 5, -8, 17, -30, 46, 4, 4, 10, 23, 5, 30, 11, 1, 3, -9, 9, -13, 11, 5, 1, -6, -12, -2, 8, -5, -7, -4, 7, -17, 1, -13, 17, 0, -1, 4, 7, -3, 13, 8, -13, 16, 4, 11, 10, 37, 6, 21, -14, 11, -7, -6, 20, -29, 3, 29, 1, -4, -1, 1, 15, -9, 2, 3, 0, 6, -3, -10, 20, 2, -20, 23, -8, -10, -3, 13, 20, -29, 0, 4, 0, 1, 4, -34, -51, 11, 4, -11, 3, -22, -2, -6, 5, 0, -11, -23, 10, -10, -11, -4, -4, 9, -7, -1, -4, 2, -1, -20, 9, 10, 12, -6, -10, 9, 13, 39, 15, 3, -19, 4, 5, 20, 0, 26, 13, 6, -1, -5, 18, 7, -17, -1, -8, -2, -69, -3, 13, 28, 21, 38, -30, 10, 11, 6, -20, 5, 12, -28, -12, -33, 11, 10, 10, -28, 2, 11, 13, 10, 8, -36, 0, 15, 19, 17, -33, 17, 14, -13, -21, 11, 3, 14, 10, 27, 11, 4, 2, 10, 14, 2, 29, 9, 18, 28, 16, 39, 8, -22, -12, -5, -17, 7, 28, 10, 14, -29, 34, -14, -2, -17, 61, -52, 27, -10, 17, -17, 1, 17, 25, 32, 18, -35, -41, 2, 29, -19, -4, -11, 6, 40, 30, 17, 19, 18, 3, -5, -20, -8, 7, 1, -11, 11, -4, 9, -2, 12, -7, -8, -3, -22, -23, -48, 9, 12, -8, 43, 11, 6, -9, 5, 16, -19, -77, -8, 22, 11, 3, 15, -22, -21, 23, -17, 7, -8, 17, -6, 12, 12, -14, 19, 16, 3, 13, -11, 7, -14, -22, -10, -15, -7, -32, -14, -3, 25, 22, 3, 7, -7, 5, -14, -21, 15, -6, -3, 2, 3, -10, -32, 9, -22, 9, -7, 0, -49, -29, -26, -4, -52, 23, 4, -1, -3, 27, -22, 2, 71, -10, 29, 10, 16, 39, -7, -4, 2, 45, -7, 9, -6, 32, -12, 13, -41, -52, -51, 2, 14, 15, 32, 18, -2, 14, -40, -39, -11, 10, -18, 1, 35, 6, 14, 20, 22, -11, 0, -25, 14, 26, -47, -25, 16, 4, -55, -9, -9, 31, 17, 9, -14, -20, 15, -3, -20, 19, 0, -22, -2, 14, -31, 9, -1, -3, 28, 4, -6, 7, 13, 13, 23, -7, -24, 7, 16, -57, -45, -3, 11, 19, -2, -21, -16, -11, -1, -18, -42, -39, 14, -7, 4, 23, -52, 6, 41, 4, 0, 32, -25, 32, -7, -29, -16, -6, -11, 16, 15, -3, -5, -7, 24, 46, -17, 1, -35, -3, 6, 13, -25, 5, 22, -5, -64, 20, -11, -13, 27, 14, -13, -40, -59, 16, 1, 22, 23, -2, 0, 0, -14, -22, -23, -12, -8, -29, -30, 26, 3, 0, 5, -17, 19, 30, 8, 29, -27, 0, -5, 12, -1, -8, -5, -19, 16, -9, 6, -11, -44, 23, -15, -28, 13, -12, -14, -20, -4, -13, -57, 20, 11, 2, 20, 16, -42, -4, 22, 2, 24, 13, -17, -3, -29, 12, -42, -27, 27, 10, 6, 12, 10, 50, 5, 2, -29, -30, 6, 7, 1, -4, -30, 19, 14, -7, 7, -5, -9, 2, 16, 12, 32, 9, 10, 16, -19, 6, 13, 13, 14, 15, 7, -26, 3, -10, -19, -3, 17, -14, -8, 27, 14, -39, -3, -18, -36, 2, 8, 0, 15, 1, 27, -8, 6, -14, -15, 12, -6, -3, -28, 42, 20, -30, 3, 12, -9, 48, -32, 9, 46, 5, -3, -11, -9, 20, 22, 10, 18, 13, 7, -18, 3, 0, 24, 2, 2, 27, -15, -10, 13, 2, -35, -9, -5, -18, -15, -24, 3, -6, 2, 9, -2, -21, 5, 0, -6, -8, 5, 0, -11, -15, -19, 5, -39, -14, -17, 5, -2, -35, -6, 18, -1, -50, 21, 5, -20, 18, -15, -4, -60, -7, 11, -8, -5, -7, 0, -30, -26, 24, -26, 15, 23, -1, -26, 8, -5, -7, -5, 35, -32, -41, 16, 0, 14, -8, 37, -3, 16, 52, 3, -22, 1, -2, -15, -24, 1, -6, -9, -6, 5, 7, -14, -7, 0, -1, 7, 19, 15, -8, 1, 23, -1, -26, -6, 16, -35, -114, -17, -21, -35, -17, -3, -10, -54, -2, -64, 29, 9, -2, -8, -25, -7, -19, 38, -1, 21, 5, -36, 5, 12, -44, 1, -13, -47, -18, 17, -13, -58, -16, 17, -43, 5, -37, -15, -18, 24, 14, -34, 22, 21, 44, -29, 13, -34, -59, -20, 8, -7, 24, 17, -7, -4, -4, 4, 4, -29, -35, -1, 0, 5, -12, -8, 26, 18, -29, -16, 9, -38, 0, -11, -4, 0, 12, -1, -19, -20, 0, 29, -25, 17, -23, -12, 7, 0, 11, 1, -17, -27, 18, -11, 6, 13, -16, 19, -19, 19, -37, -17, 6, -3, 17, -60, 21, 4, 6, -57, -25, -6, -22, -22, 15, -10, 8, 7, -3, -10, 9, -25, 13, 12, 19, 18, -12, -15, 15, -7, -20, -15, 18, -13, -4, 4, -14, 26, 12, 29, -44, -29, -16, 4, -3, 14, -60, 1, -11, -17, 10, 2, -61, -6, 44, 1, -25, -3, 17, 10, 1, 19, 13, -12, 28, 3, -4, -2, 31, 6, -26, 8, 20, 2, -14, 27, 19, -5, -10, 12, 19, -19, 6, -10, -28, -1, 5, -7, 19, 12, -14, 15, 2, 26, 19, -28, -15, -9, 4, 9, 23, 6, 25, 6, -9, -35, 13, 4, -29, -1, -5, -15, -33, -21, 9, -25, 3, 41, -14, -10, 24, 16, 5, 9, 33, -27, -5, 15, -12, 15, 0, -9, 19, 11, -1, -12, 0, -5, 11, -16, -47, -28, 2, -9, 7, 16, -3, -10, 1, -22, 10, 14, -3, -32, -6, 21, -2, -8, 2, -52, -56, 8, -3, 18, -37, -32, -12, 2, 26, 6, 22, 0, 23, 37, 10, -3, -5, 2, 12, -3, -12, 6, 1, -20, 19, -22, -7, -48, -26, 20, 4, 21, -18, 8, 6, -22, -8, 7, 2, 8, -17, -6, -28, -4, -5, -35, -18, -18, 5, 3, 23, -25, 18, 16, 10, 30, 19, -21, -1, 19, -2, -40, -1, 12, -11, 8, 13, 7, 14, -5, -14, -45, -16, 19, 9, -6, -7, -31, -7, -13, 3, 26, 21, -15, -20, 18, 11, 5, 19, -8, -6, -18, 1, 1, 2, 20, 5, -6, -7, -4, 5, 4, -7, 16, -3, -4, -10, 7, 36, -41, -16, 4, -28, 3, 16, 16, -27, 9, 20, 14, 39, -22, 2, -65, -16, -7, 5, -13, 15, -8, 7, -8, -1, 7, 5, 8, 35, 22, -48, 23, -24, -8, -5, -6, -16, 15, -1, -6, -44, 13, -5, -6, 6, -10, -8, -27, -2, 2, 12, 6, 5, -4, -15, 6, -20, -7, 20, 14, 4, -1, 1, -2, 5, 5, 6, 3, -26, -29, -19, 54, 28, -1, -23, -31, -26, 18, 4, -33, 8, -4, -6, 20, -7, -5, -11, 16, 57, 8, -2, 12, -80, 9, 8, -16, -21, 79, -10, 0, -23, 21, -3, 7, 4, -2, 16, 6, -33, 22, -8, 21, 13, 28, 33, 2, -18, -17, 6, -1, -22, -1, -3, -4, 7, -7, 15, -30, 20, -6, 7, 7, 0, -10, 7, 6, -6, 12, 9, -9, 16, 8, -12, 17, -10, 7, -20, 26, -10, -6, 22, -25, 19, -14, -14, 22, 28, -5, -20, -15, -32, -23, -5, -7, 5, -9, 12, -15, 12, -1, 6, -3, -6, -12, 16, 20, 2, -1, -16, 28, -32, -5, 2, -16, 0, -8, -1, 11, -13, 5, -7, 13, -5, -16, 2, 32, 6, 6, 24, -3, -24, 13, 29, -5, 7, 9, -7, 17, 3, -2, 4, 0, -13, 7, 7, -8, -10, 21, 7, 39, -17, 9, -9, 30, 5, -10, -11, 9, -2, -4, -6, -20, 0, -1, 23, -11, -21, -18, 11, -5, -3, 3, -4, 20, 4, 10, 7, 3, -6, -21, 2, 9, 0, -10, -8, -23, 1, -39, -1, 5, 24, -7, 12, -14, 0, -15, 28, 11, 4, 24, 6, 18, 16, 5, -24, 12, 14, -8, 2, 0, -6, -8, 17, -3, 7, 13, 4, 14, -41, 32, 0, 5, 18, 14, 13, 15, 29, 22, 4, 2, 7, 4, 3, 24, -32, -11, -22, 42, -16, 2, 6, 0, 25, 9, 15, 24, -32, -3, -13, 3, -21, -45, 2, 13, 18, 1, -13, 46, 25, 1, 2, 24, -23, 48, 7, 10, 8, 27, 3, 14, 2, 4, 20, 5, -24, 8, 22, 0, -21, 12, 4, 32, 16, 11, -14, 22, 20, -39, -14, 11, -15, -13, 19, 24, 1, -23, 2, -19, -13, 47, 8, -3, 14, 13, 8, 4, -25, -2, 14, 19, 3, 29, -5, 24, -9, 30, -31, 34, -5, -19, 1, 14, -21, 1, 4, -14, 10, 9, 3, 9, -30, 1, 6, 2, 26, -6, -35, -7, -2, 35, -18, 1, -5, 7, 14, 33, -21, -10, -7, -11, -34, 10, -5, -42, 13, 7, -41, -19, -2, -5, -11, -6, -44, -27, -34, 0, -1, 10, 12, -29, 13, 31, -12, -15, -6, -4, -41, 4, 2, -23, 2, 14, 25, 18, 1, 8, -20, -11, -19, -7, -46, 19, -3, 14, 16, -29, -21, -39, -10, 5, -21, -2, -58, 26, -7, 9, -7, 6, -4, 19, 33, 51, -24, 2, -21, -13, -37, -8, 3, -25, 10, -5, 7, 8, 14, -64, -21, 10, 4, 17, 11, 10, 9, -7, -5, -8, 28, -34, -32, 12, 1, 23, -42, -26, -17, 23, 1, 23, 8, -1, -13, -15, 44, -53, -14, 9, -4, 12, 21, 5, -46, 4, -6, -14, -7, 20, 16, -14, -2, -1, -25, -2, 29, 19, 8, -2, 12, -17, 3, 12, -5, 47, 5, 23, 6, -2, 16, 20, 7, 1, -27, 5, 15, 33, -10, 2, 8, 11, 29, 12, 24, 29, 12, 24, -2, 18, -43, -4, 20, -7, 3, -42, -12, 1, 2, 1, 13, -7, -18, 20, -3, 13, 9, 21, 16, 20, -4, 1, -19, 14, 1, -2, 19, 12, 7, 12, 52, 20, -1, -10, -23, 1, 35, -10, -4, 2, -11, 14, 32, 29, -23, -3, 2, 6, -12, 33, 2, -3, -1, 13, -8, -28, 12, 14, 7, 25, 38, 7, -9, -1, -25, -24, 4, 14, 1, -41, -11, 22, -8, 2, 23, 26, 44, 16, -14, -1, 11, -30, 21, 6, -23, -2, -9, 4, -2, -12, 6, 5, 21, 32, 15, -14, 11, -3, -4, -9, -1, -2, 5, 25, 29, -1, 7, -11, -11, -3, 6, 5, -11, -24, 6, 5, -7, -17, -1, 4, 2, -10, 19, -38, -28, -5, 6, 0, -40, 8, 25, 13, 8, 5, -4, 52, -3, -13, 2, -19, 12, 43, 4, 14, 19, 2, -9, -3, -11, -4, 3, 14, -1, 5, 9, 18, 7, 9, -18, -3, -4, -18, -3, 3, 12, 11, -19, 21, -1, -5, -4, 6, -7, -12, 3, 9, -15, -9, 4, 9, 11, 8, -9, 1, 9, -13, 13, 4, -30, 10, -9, 9, -19, 7, 5, 14, 13, -6, 0, 15, 13, -11, 5, 0, 3, 17, -16, 5, 3, 3, -11, 16, -11, -2, 7, 7, 36, -25, 6, 1, -17, -7, -3, -7, -7, -17, 16, -3, 8, 7, -6, 5, 20, -10, -4, 2, -5, -19, 5, 17, -7, -24, 4, 29, -10, -10, -15, -1, 26, -3, 27, 14, -27, -2, 5, -19, 10, 0, -5, 3, 10, 2, -16, 29, 12, -6, 3, 6, -11, 10, -11, 23, 4, 4, 0, 12, 6, -5, 4, 4, -9, 4, 2, 2, -15, 2, 3, 0, -25, 1, 6, 7, 25, -5, 4, 14, -10, 11, 23, -12, -4, -28, -1, -1, -5, 29, 3, -3, -2, -7, 3, 8, -6, 22, 19, 23, -21, -2, 0, 15, 21, 10, -2, 1, -1, 2, -1, -19, 0, -38, -7, -21, -6, 27, 7, -14, 27, 6, -28, -2, 17, 17, 30, 14, -24, -7, -3, -1, 1, -28, 0, 18, 3, -34, -26, 13, 24, 13, -1, -18, 9, 11, 22, 18, 48, -23, 17, 13, 14, 10, 7, -5, 13, 3, -6, -22, -12, 7, 8, 26, 0, 10, -44, 19, -44, -5, -17, 18, -9, 6, -26, 0, -8, 15, -14, -18, 3, -1, 0, -31, 14, -23, 42, -21, 24, 5, 5, 3, -13, 12, -5, 1, -1, 3, 14, 25, 5, -2, 6, -2, 17, -10, 8, 16, 39, -29, -15, 29, 28, 10, 11, -23, 9, -6, 27, -20, 17, 12, 3, -7, 18, 28, 3, -1, -24, 14, 27, 42, 12, -2, 22, 18, -3, -34, 3, 29, 5, -11, -20, 8, -25, 49, -1, -16, -10, -8, -18, -22, 6, 11, 6, 2, -41, 12, 0, 14, -13, 26, -6, 15, 2, 9, -7, 26, -1, 14, -24, 6, 21, 0, 6, -9, -38, 0, -9, -79, -7, -16, 3, 7, -23, 6, 13, 7, 8, 46, -9, -24, -28, 15, 8, -28, -5, -29, 3, -9, 14, -4, -2, -28, -27, -28, -13, -7, -38, 0, 21, -17, 6, -4, -11, -10, 4, 9, 19, -8, -28, -11, -14, 1, -67, 0, -13, 20, 2, 12, -2, -19, 19, 4, -41, 17, 23, -4, 31, -10, 18, -19, -8, -33, -17, -52, 19, -2, 13, -5, -3, -6, 15, 14, 26, -7, -24, 12, 18, -6, 9, -5, -32, -21, -6, -4, 17, -1, 2, -9, -13, -22, -5, -12, -32, 15, 26, -31, 29, 26, -4, 16, -5, 17, 15, 10, 12, 12, 2, -18, 11, -25, 28, 12, 10, 3, 7, 37, -4, 21, 4, 12, 10, 11, 21, 14, -12, 15, -3, 23, 15, 16, 7, 2, 13, -24, 0, 10, -2, -7, 3, 29, -17, -1, 6, 4, 2, 15, 2, -22, -11, -9, 16, -11, -8, 10, 0, -7, -1, 8, 17, 34, -27, 4, 2, 14, 1, 27, 21, 28, 3, -5, 14, 12, -4, 1, -15, -13, 15, 1, 15, 2, -33, 1, 18, 2, 10, 0, -15, 10, 14, 1, 7, 13, 17, 2, 11, -11, 6, -15, -7, 15, -21, 13, -50, 11, 8, 7, 17, -3, -14, -5, -20, -19, 12, -8, 21, -27, 7, 18, 20, -7, 0, 6, -18, -8, 9, 8, 5, -19, -7, 8, 4, 2, 1, -5, -25, 0, 10, -7, -6, 17, 11, -1, 6, 21, 9, 1, -19, 3, -5, -18, -26, -4, -15, 2, -1, -22, 3, -12, -3, -1, -6, 4, -2, -3, 3, -10, 14, -4, 8, -29, 8, 32, 5, -12, -14, 8, 23, -25, -3, 0, 32, 14, 4, 15, 0, -7, 1, 10, 5, 20, 18, 2, 3, -30, -24, 0, -13, 9, 11, 1, -2, -10, -71, 28, 7, -4, -3, -9, 0, -21, 18, -24, 9, -34, -27, 17, -17, 8, 13, -12, 4, 0, 2, 1, 12, 1, 4, 17, -23, -12, 14, -10, 5, -44, 16, -5, -10, -4, -20, 1, 19, 13, 20, 5, 23, 13, -12, 31, -13, -9, 11, 2, -3, 18, 23, 12, 12, -4, -13, 14, -10, 29, 5, -1, 31, 27, 15, -21, -42, -2, -18, 1, 5, 17, 2, 4, 11, 9, 19, 2, 11, 14, -14, 24, -2, 11, 14, 1, 0, -23, 23, 39, -41, 34, 30, 40, -44, 13, 9, -82, 0, -8, 19, 6, -1, -7, -20, 11, -2, -18, 0, -24, -14, -10, 1, 11, -1, 22, 11, 2, -6, 4, 1, 3, -3, 13, 23, -3, 9, 12, 2, -35, -11, -2, -17, 10, -8, -7, 18, 11, 34, 6, 1, 9, -1, -5, -5, 13, 12, 34, 13, -9, 6, -29, 10, 20, -31, -4, -2, 19, -14, 5, 21, -27, -19, -24, -2, -2, -9, 4, -5, 11, -2, 3, -16, 25, -3, 10, -24, 0, -45, 19, 10, -23, -20, -14, 3, 10, 12, 26, 2, 26, -3, 16, 15, -16, -7, 2, 13, -15, -15, 16, 13, 6, -4, -16, -30, 1, -16, 17, -7, 22, -14, 17, 10, 20, 3, 3, 12, 24, -5, -3, -30, 5, 12, -6, -10, 18, -60, 13, -2, -6, -4, -13, 12, 27, 29, 14, -23, 0, -2, 33, 7, 4, 14, 38, 4, 5, 5, -10, 17, -33, 21, 21, -21, -6, 18, 7, 24, -5, -2, -38, 8, -34, -9, 35, 16, -3, 39, -42, -19, 18, -21, 12, 8, 1, -19, 6, 12, -39, -4, -1, 16, -8, 1, 2, 2, -9, 27, -18, 19, 26, -22, 3, 5, -29, -7, -15, -18, -10, -15, -44, 18, -35, 2, -9, -8, -25, -64, -35, -1, -27, 35, -4, 42, -9, 18, -26, -3, -38, -28, -16, 4, 16, -19, -3, -8, -18, 21, -9, -8, 30, 39, 34, 29, 7, 18, -22, 4, 2, 15, 18, 11, -9, -5, -29, 5, 4, 27, -9, 2, -8, -32, 2, 1, -8, -8, -3, -18, -23, 10, 7, -28, -19, 35, -26, 17, -13, -7, 42, 14, 7, -11, 14, -18, -8, 3, 13, 3, 9, 2, 0, 18, -16, -4, 4, 3, -1, 8, 0, -11, 4, 14, -15, -4, 11, 28, 23, 23, 0, -3, 28, 18, 1, 33, 20, 13, -15, -4, 0, 1, 6, 15, 14, 18, -6, 1, 22, 13, 17, 19, 19, -29, 7, 32, 14, 3, -25, -10, 11, -5, -5, -22, 43, -6, 2, 13, -3, -10, -8, 5, 26, 21, -5, 8, 12, -8, -16, 10, 18, -24, -27, 6, 12, 24, 6, 11, 12, -15, 10, -9, 1, -3, 11, -4, 19, -5, 27, 32, 2, 14, 10, 9, -5, 29, -5, 13, 9, 11, 9, 9, -18, 23, 9, 7, 21, -22, 10, 10, -12, 17, -40, 6, 3, 8, 23, 14, -21, 7, 6, -8, 18, 20, -4, 25, 2, 14, -10, -2, -9, -18, -15, 6, -10, -28, -22, -2, 19, -7, 27, 17, -33, -18, 16, 27, 15, 2, -25, 8, 20, 9, 23, 7, -7, -5, -16, -8, -12, 21, -30, 9, 26, 6, 14, -19, -1, 13, 4, 5, -2, 1, 25, 17, -3, -6, 12, 3, 0, -42, -11, 10, 4, 5, 2, 0, -3, 2, -3, 21, 10, 0, 3, -12, -2, -15, 1, -18, 9, -18, -27, -9, -2, -16, -11, 12, -25, -1, 25, 15, 18, -1, -16, 16, -9, 17, 4, 17, -6, 7, -11, 16, -12, -9, -2, -22, 37, -5, 8, 15, 27, 9, -14, 0, -3, 23, 29, 18, -12, -24, -7, 18, 5, -4, -33, 16, -28, -28, -10, 9, -25, 1, 21, -9, 2, -15, -26, 13, 1, -10, -3, -11, 17, -21, 5, 8, -10, 3, -4, -1, 0, -8, 9, 8, -2, -3, -5, -2, -39, 7, -11, 10, -12, -6, 25, 9, 13, 17, -7, -12, -27, 21, 15, 9, -11, -19, 0, 3, 5, -3, -23, 5, -9, 2, -11, 0, -3, -9, -5, 4, -27, -19, -15, 8, 13, -15, -1, 0, -20, 25, -6, -4, -32, 10, -18, 2, -28, -17, -13, -7, -10, -1, -3, 10, -21, -4, 19, -7, 13, 10, -15, 12, -26, 16, -15, -13, 13, -3, 18, 18, -11, 7, 6, -7, -1, -5, 2, -3, -4, -14, -35, 14, 19, -19, 18, 2, -1, -18, -24, -12, -11, -22, -23, -1, -58, 2, -12, -1, -12, -22, 1, 3, 10, -32, -5, 4, 9, -9, -12, 4, -13, -7, -3, -9, -15, -9, 2, 3, -7, 3, -18, -3, 1, -12, 4, 13, -25, 9, -33, 4, -22, -3, 4, 1, 13, -59, -19, 5, -2, -20, -9, 12, 0, -24, 7, 2, -3, 10, -8, 9, -2, -9, 3, 22, -12, -22, -9, 2, -30, 8, -10, 1, -25, -4, 7, 26, -2, 30, 6, -6, -1, -8, -15, -2, -14, -9, -8, 12, -1, 18, 49, -6, 16, -4, -21, -9, 0, 19, -13, 12, -26, -21, -24, 22, 5, 3, 27, 1, 1, 13, -40, 6, -26, -3, -4, 1, -3, -59, 17, -12, -29, -4, -12, -7, -21, -7, -1, 0, -56, -15, -16, 2, 32, 16, -5, -10, -9, -2, 19, 15, -8, 31, 1, -5, -27, -20, -43, 8, -5, -8, 4, -7, 10, 4, 1, 21, -29, 1, 17, 15, 8, 31, -16, 21, 4, -3, 7, -9, 23, 4, -12, -14, -21, -6, -5, 10, -10, -31, -11, -15, 16, -32, -64, -4, 36, 18, -35, 6, -19, -6, 10, 12, -4, 14, -5, 1, 12, 6, -5, -6, 6, -2, -2, -15, -15, 3, 15, 8, -3, -56, -17, 21, -11, 11, 33, -7, 12, 5, 6, 12, 21, -7, -2, 22, 35, -35, 21, 16, 6, 4, 12, 26, 4, 5, -8, -12, -4, 3, -29, 19, 5, 47, 25, -8, 2, -30, 3, 9, 12, 12, -17, 18, 2, -24, 19, 14, -13, 12, -10, -18, 29, 11, 1, -11, -24, 3, 12, -6, 19, -2, 1, -22, 4, 38, -2, -9, 2, -8, 21, 0, 12, -11, 8, -12, 18, 41, -8, -3, 11, 42, 38, 31, -10, -7, 41, -12, -19, -12, 17, 3, -23, -2, -8, 26, 18, -23, -20, -8, 26, -19, 3, 6, 23, 16, 1, 17, -14, 24, 23, 10, 63, 1, 18, -1, -39, 3, 17, 9, -6, 25, 4, 11, -5, -1, -42, 23, 31, 28, -18, 28, 1, 5, -73, 4, -12, -1, 12, 20, 3, 23, 9, -22, -31, -28, 20, 21, 30, 2, 19, -5, -2, 33, 2, -35, 0, -3, -21, 32, 15, -42, -20, 29, 24, -2, -32, 6, -18, 13, 23, 20, -29, 20, 23, 20, 20, 7, -9, 9, -60, -7, -12, 25, -13, 16, 12, 6, -14, 9, 1, -16, 5, 24, 8, 7, 4, -1, -45, -5, 3, -8, 18, 13, -18, 19, 2, -13, 0, 12, -22, 4, 3, 13, 24, 24, -23, 1, 3, -32, 5, -30, -5, -17, -2, -21, 4, -4, 3, -7, 3, 1, -6, -10, 16, -12, -27, -17, 13, 6, -4, -10, -12, 2, 12, 23, 3, 14, -17, -6, 0, 6, -14, -4, 15, -18, -1, 33, 10, 1, 7, 26, -34, 1, 8, -2, -5, 25, -20, 1, 11, -1, 18, 3, -9, -2, 15, 11, -23, 27, -20, 17, 17, -8, -1, -41, 0, -27, -10, -15, 34, 13, 38, 34, -19, 21, -5, -19, 5, 30, 13, 14, 12, 11, 7, -20, 28, -9, -7, -9, -23, -20, -33, 20, 19, 6, 12, -7, 1, -11, -3, -15, 21, -7, -9, -10, -25, 15, -16, 22, -9, -17, 19, 15, -4, -15, 2, -3, 28, -7, -43, 0, -15, 12, 36, 9, 1, -13, -11, 19, 51, 12, -23, -6, 7, 21, -8, -21, -71, -20, -21, 32, 24, -3, 8, -6, 20, -2, 3, 3, 36, -12, -68, -2, -3, 17, 44, 10, 6, -9, 11, 12, 4, -36, 5, 12, 2, 8, 15, 14, -80, -18, -3, -13, -15, 20, -36, -6, -21, 2, 2, 7, -2, 17, 13, 0, 7, 19, 14, -3, 18, -13, 12, -3, -13, -30, -30, 7, 10, 3, 22, 3, -19, 8, -15, -27, -17, 0, 17, 14, -11, -12, -4, 9, 23, 1, 15, 11, -18, 24, 35, 28, -10, -18, -5, -20, -4, 11, 25, 11, -6, 13, 2, -39, 9, -24, -6, 14, 8, 3, -27, 11, -10, -4, -15, 5, -5, -7, -12, -6, 20, -25, -2, 8, 19, 16, -6, 1, 13, -35, -4, -30, -1, -15, -9, 6, 0, 11, -19, 26, 8, 14, -20, -30, 5, 3, -2, -19, 18, 2, 36, 1, 39, -4, 20, 1, 1, -16, 7, -4, 17, -9, 13, -48, 14, 16, 8, 13, 13, -4, 4, -11, 3, 11, 3, 2, -10, 25, 5, -14, 4, -9, -13, 11, 11, -17, 40, 2, 8, -3, -6, 0, 1, -22, -7, -6, 9, 2, -14, -3, -17, -4, -16, 8, -6, 14, -3, -11, -5, 17, -33, -23, -6, 8, 44, -2, 11, 9, 23, 1, -6, 9, -22, 25, 11, 5, 9, 7, 2, -1, 9, -7, -21, 19, -24, 19, 15, -7, 1, 5, -8, -30, -26, -24, -22, 15, 19, 6, 5, -22, 5, 10, -18, -6, 16, 35, -1, -9, 8, -16, 2, 6, -10, 14, 2, -8, 10, -13, -21, -5, 8, -20, -20, 32, -23, 20, -30, 2, 4, 0, -43, 27, -1, -59, 7, 6, -2, 16, -9, -8, -67, -44, 6, -23, -27, 8, 24, 16, -16, -2, 5, 2, 17, -50, 13, -7, 18, 16, -9, 16, -13, 12, -50, 24, 17, -37, -13, 18, -1, 41, -19, -27, -19, 7, -14, -1, 6, -32, 2, 11, -19, -36, -33, -8, 23, 3, 2, 2, -2, -13, -7, 7, 10, -10, -36, -6, -27, -29, 1, 13, 5, 9, -36, 27, 22, -1, -10, -5, -3, -38, 20, -21, -14, 24, -3, -1, 1, -28, -6, 4, 7, 3, 2, -6, -38, -33, -33, 39, -6, -15, 13, -1, -2, -6, 8, 32, -16, 30, 2, -13, -11, -62, 6, 1, -1, -3, -26, 23, -1, 7, -4, 14, -26, -17, -26, 12, 3, -23, -5, 2, -2, -5, -2, 2, 10, 40, -52, 3, 0, -28, -20, -34, -33, 7, -9, 20, 27, -8, -14, 17, -3, 3, -13, -2, -47, 7, -8, -5, -3, 3, -19, 1, 25, -49, -5, -7, -7, 19, -1, 16, 0, 16, -36, -25, -23, -12, 1, -4, 8, 13, -33, 5, 10, -4, -29, -8, 0, 11, 15, 4, -14, 23, -10, -4, -22, -6, 6, 11, -5, -8, 5, -5, 4, 5, -13, 10, -15, -3, 43, -9, 21, 16, -15, 6, -12, -16, 13, 14, -1, -2, 2, 15, 7, 10, 28, 7, 8, 1, 4, -4, 3, 34, -24, 32, 14, -23, -29, 26, 13, 3, -4, 21, 6, 13, -6, 3, -3, 4, 16, 7, 23, 30, 41, 1, 55, 8, 70, -18, 8, 56, -9, -5, 3, -4, 0, -7, -24, 0, 18, 34, 13, 2, -27, 2, -7, 3, 8, -60, 20, 7, 2, -16, -30, -14, 26, 6, -43, -41, 12, 2, 24, 21, 16, 5, -14, -2, 38, 9, 22, -6, 17, 1, 4, 38, -63, -29, 0, -1, 15, 1, 5, 13, 33, -6, 28, -16, -2, -1, -21, 14, 16, 6, 8, -3, -18, 13, -18, 26, -6, 4, 15, 11, -22, 16, 6, 7, -35, -1, -3, -12, 6, -22, -18, -28, 6, 2, 3, 0, -41, 4, -10, 2, -2, 8, 3, -10, -6, -17, -32, -16, -2, 10, 26, -9, -2, -35, -10, -12, -29, -16, -19, -10, -17, -22, 1, 9, 68, 0, -29, -17, -9, -12, 6, -7, 22, -16, -2, 13, -14, -20, -22, 35, 1, -19, 6, 70, -3, -23, 2, 0, -14, -25, 8, -8, -51, 20, -47, -33, 9, -15, 11, -35, -24, 0, 28, -1, -17, 2, 7, 2, 2, 7, -9, -22, 25, -1, -10, -2, 8, -20, 5, -1, -31, 5, 1, -7, -44, 14, 7, 29, 36, 9, 15, 30, 14, -11, 28, 0, 26, -27, 5, 38, -3, -36, 4, -8, 12, 3, 7, 0, -6, -4, 27, 53, 15, -1, 14, 16, -46, -25, 21, 21, -23, -25, -41, -47, 14, -8, 14, -19, -3, -32, 49, 0, 17, 7, -2, -6, 4, 7, 9, 0, -7, -2, 3, -8, -26, 2, -18, 1, 22}

#define TENSOR_CONV2D_25_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_25_BIAS_0 {34, 26, 13, -45, 18, 48, -39, 14, 21, 45, -67, -35, 19, -52, 2, -66, -105, -91, 106, 30, -1, 0, 57, 3}

#define TENSOR_CONV2D_25_BIAS_0_DEC_BITS {8}

#define CONV2D_25_BIAS_LSHIFT {2}

#define CONV2D_25_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_26_KERNEL_0 {17, -24, 2, -2, 2, 30, 11, -27, -10, -23, -37, 10, -4, 27, 22, 20, 14, -27, -9, 23, 17, 33, 16, 3, 28, 13, -16, 15, -16, -41, -14, -12, 21, -37, -23, 28, 3, 14, 34, 13, 33, -5, 18, 19, -16, -27, -31, -15, -6, 21, 29, -5, -28, -31, -9, -20, 26, -45, 48, 1, -3, 12, -26, 18, 40, 26, -50, 19, -10, -26, -42, 10, 26, 12, 28, 3, 28, -5, 23, 1, -8, 0, 65, -8, -52, 0, -7, -11, -26, 26, -19, 2, 6, -20, -13, 5, 15, 28, -14, -24, 24, 21, 4, -65, 3, 29, 29, 15, 23, -11, -18, 13, 17, -55, 4, 12, -30, 2, 17, 13, 24, 5, 18, -26, 12, -1, 23, -36, 24, -10, 46, 4, -3, 6, -15, 15, 30, 9, 24, 27, -25, -10, -8, -39, -13, 33, -26, -2, -14, 11, -7, 48, 8, 37, -4, 7, -44, 1, 31, 12, 25, 3, 11, 6, 49, 14, -8, -28, -34, 3, -26, -24, -1, 5, 23, -23, 50, 3, 9, 2, 29, 12, 18, 3, -41, 22, -41, -19, 27, 15, -7, 9, 38, -16, 1, -15, -42, -17, -29, -13, 48, -19, -19, -23, 4, 6, -26, -16, -19, -24, 4, 10, -26, 24, 27, 7, -19, 13, -22, 12, -54, 26, 4, 32, 18, 46, -4, -3, -42, -5, -24, -32, -1, 30, -5, 13, 13, -31, -17, 46, -1, 2, 2, 7, 33, -7, 39, 26, 10, 41, -27, 18, -4, 21, 10, -2, -3, 6, -21, -26, -3, 5, -1, 4, -1, 0, -11, 26, 26, -25, 7, 4, 19, 6, -51, 16, 43, -2, -12, 29, -7, 0, -49, 27, 15, 25, -36, 31, 6, 38, -4, -4, 7, 17, 17, 11, 12, 16, 41, -3, 9, 8, 34, 9, 41, 16, -19, 26, 22, 10, -10, -25, 22, 4, 35, -7, -6, 14, 24, 2, 40, -23, 12, 35, 15, 33, -8, 0, -14, 15, 7, -29, -13, -16, 31, -8, 32, 17, 38, -6, 27, 33, -13, -12, 5, 11, 0, -15, -14, 15, -22, 15, -23, 35, -3, 26, 20, -6, 40, -18, -16, 27, 3, 0, 0, 19, -31, -1, -10, 33, -58, 29, -5, 11, -10, -15, -13, -14, -7, 19, 18, -1, -29, 1, -8, -24, 20, -9, -13, 9, 10, 6, -7, -6, -44, -20, -11, 23, 17, 3, 41, -31, -14, 16, 6, 31, -13, 15, -3, 14, 11, 3, -4, 3, -4, 5, 24, -46, -21, 33, 31, 14, 22, 12, 53, 23, -17, 22, -11, -4, -4, -2, 26, -1, -20, 3, -34, -1, 4, -45, 25, -15, -33, -3, -12, 11, -11, -22, -64, -3, -5, 2, 15, 3, -10, 17, 6, 4, -17, -10, -22, 19, -10, 33, 23, -42, -44, 16, 22, 5, 39, 12, -10, 7, 21, 4, 21, -23, 40, 53, 29, -10, -16, 5, -50, 25, -23, -4, -19, -7, -52, 18, 2, 6, 39, -19, 2, -10, 38, 5, 24, 24, 4, -34, 22, 27, 4, 31, -34, -15, 10, 13, 22, 17, -50, -22, 5, 32, 73, 10, -7, -20, -21, 32, -16, 49, 8, -39, -9, 2, 36, 14, 21, -12, 7, -10, 13, 20, 33, 0, -34, 19, 3, 10, 39, 30, -11, -6, 18, 11, 12, 17, 18, -12, 18, 17, 46, 6, 2, -1, 13, -7, 15, 42, 23, -12, -19, 7, 8, 12, -11, -3, -2, 28, -11, 17, 5, -63, -48, -4, -19, 10, -5, -67, 0, 47, -40, 6, 13, 17, 2, 16, -6, -87, 20, 7, -11, 7, -28, 26, 11, -16, -77, -3, 7, -12, -13, 2, 40, -8, -5, -3, -60, -4, -15, -4, 31, 2, 7, 8, 25, -7, -2, 28, 1, 21, -52, -3, 20, 9, -9, -32, 19, -6, -31, 23, 12, 15, 39, -68, -20, -4, 15, -28, -13, -15, 2, -3, 4, -15, -6, -2, -9, 9, 45, -17, 32, 19, -66, -4, -22, 6, 8, 12, -51, -27, 20, 20, 3, 31, 34, 28, -17, 23, 16, -8, 54, 24, -17, -4, -19, 31, -42, -21, -4, -34, 8, 25, 6, -11, 9, -13, 6, -22, 27, 23, -5, 10, -34, -44, -11, 11, 10, -16, 18, 6, -19, 3, 29, -6, 12, -4, 34, -35, 32, -15, 26, 32, 19, -37, -50, 18, -22, 27, 36, -20, 14, 36, -27, -42, 46, 23, -28, 12, -18, 18, 29, 37, 39, -17, 27, 12, 6, 3, -27, -11, -8, 27, 2, -7, -16, -5, -29, 20, 30, 3, 20, 3, -8, -39, 15, 6, -72, -34, -13, 12, -67, -4}

#define TENSOR_CONV2D_26_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_26_BIAS_0 {-2, -12, 8, 10, 3, -15, -1, 13, -3, 5, 12, -14, 3, 1, 8, -12}

#define TENSOR_CONV2D_26_BIAS_0_DEC_BITS {6}

#define CONV2D_26_BIAS_LSHIFT {0}

#define CONV2D_26_OUTPUT_RSHIFT {6}

#define TENSOR_CONV2D_27_KERNEL_0 {-41, -47, 15, -36, -16, 10, 12, -26, -19, 10, 8, -22, 29, 23, -21, 2, 15, -51, -66, 5, 16, -40, -21, 19, 9, 17, -19, -21, 32, -11, -38, 29, -27, -27, 16, -17, 13, -29, 12, 32, -18, -9, -41, 0, 3, -40, 13, 23, -8, 14, -5, -6, -67, 5, -49, 13, -13, -4, 2, 15, -11, -17, -11, 14, 0, -66, -5, -42, 22, -65, 12, 8, -29, 26, 22, -77, -87, -6, -44, -43, -41, -38, -46, -38, 26, -35, -50, 27, -1, -16, 26, -32, -97, -59, 8, 6, 12, -96, 9, 11, -5, -4, -5, -20, -13, 15, 2, -7, 34, 18, -1, 44, -14, -55, -1, -41, 21, -6, -34, -1, -47, 22, -8, -41, 14, 24, -32, 3, -14, -36, -60, 30, -3, -41, -9, 1, -25, -16, -10, -27, 6, -81, 16, -69, -6, -52, 5, 25, -13, -33, -3, -16, -51, 29, 4, -69, 3, 18, 37, -8, -16, -2, -25, -28, 20, 7, -31, -18, 10, 27, -43, 2, 48, -16, 22, 63, 23, -53, 21, -5, -33, 4, -31, 5, 17, -5, 0, 6, 27, -27, 25, 22, 10, 4, -17, -17, 7, -19, -24, -43, -2, -2, 6, 6, 11, -14, 0, 16, -10, 25, -1, 16, 4, 25, 18, -61, 9, -46, 10, 11, 2, -8, -77, 14, 18, 4, 28, -3, 7, -4, 3, -42, 19, -54, 7, -21, 37, -29, -1, 1, -35, 28, -2, 0, 12, -47, 10, -19, -25, 27, -38, -14, 9, 15, 3, -18, 9, 6, 14, -27, -8, 14, -10, -15, 5, -26, 20, 7, 28, -1, 17, -27, -60, 35, 20, -58, -41, -26, 18, 2, -19, -48, -61, 13, -54, -26, 27, -18, -62, -1, 25, -35, 15, -20, 7, 20, -25, 11, -43, 19, 10, -29, 9, -4, 6, 47, 17, -14, -119, 25, -44, 5, -22, -11, 2, -16, -65, -23, 1, 38, -8, -33, -38, -29, 41, -94, -8, 16, -12, 15, 40, -53, -55, -32, -43, -20, -13, -68, -4, 15, -33, -51, -33, 7, -42, -15, -1, -13, -45, -8, 8, -40, -8, 15, -27, 21, -9, 1, 10, -47, 18, -28, 15, 14, 5, -19, -41, 13, 1, 14, -32, -37, 4, 12, -9, -13, -21, -9, -30, 11, 13, 22, -18, 17}

#define TENSOR_CONV2D_27_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_27_BIAS_0 {24, 68, 55, 14, 6, -27, -73, 10, 10, 8, 67, -87}

#define TENSOR_CONV2D_27_BIAS_0_DEC_BITS {8}

#define CONV2D_27_BIAS_LSHIFT {0}

#define CONV2D_27_OUTPUT_RSHIFT {9}

#define TENSOR_DENSE_6_KERNEL_0 {8, -9, -22, -19, 6, -6, 2, 1, -33, -5, 4, -11, 0, 3, 5, 2, -21, -18, 10, 7, 7, 9, -5, -17, 2, -1, -10, 5, -3, -20, 5, -10, -11, 5, -20, -18, -4, 4, 8, 6, -14, 3, 8, 5, 1, 4, -8, -21, -44, -54, -35, -42, -34, -25, -17, -65, -39, -45, -40, -20, 0, -9, 5, 2, 11, -23, -10, -11, -15, -14, 8, -12}

#define TENSOR_DENSE_6_KERNEL_0_DEC_BITS {4}

#define TENSOR_DENSE_6_BIAS_0 {-7, 1, -20, -9, 42, 0}

#define TENSOR_DENSE_6_BIAS_0_DEC_BITS {4}

#define DENSE_6_BIAS_LSHIFT {0}

#define DENSE_6_OUTPUT_RSHIFT {4}


/* output q format for each layer */
#define CONV2D_24_INPUT_OUTPUT_DEC 7
#define CONV2D_24_INPUT_OUTPUT_OFFSET 0
#define CONV2D_24_OUTPUT_DEC 4
#define CONV2D_24_OUTPUT_OFFSET 0
#define RE_LU_24_OUTPUT_DEC 4
#define RE_LU_24_OUTPUT_OFFSET 0
#define CONV2D_25_OUTPUT_DEC 2
#define CONV2D_25_OUTPUT_OFFSET 0
#define RE_LU_25_OUTPUT_DEC 2
#define RE_LU_25_OUTPUT_OFFSET 0
#define CONV2D_26_OUTPUT_DEC 2
#define CONV2D_26_OUTPUT_OFFSET 0
#define RE_LU_26_OUTPUT_DEC 2
#define RE_LU_26_OUTPUT_OFFSET 0
#define CONV2D_27_OUTPUT_DEC -1
#define CONV2D_27_OUTPUT_OFFSET 0
#define RE_LU_27_OUTPUT_DEC -1
#define RE_LU_27_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_6_OUTPUT_DEC -1
#define GLOBAL_MAX_POOLING2D_6_OUTPUT_OFFSET 0
#define FLATTEN_6_OUTPUT_DEC -1
#define FLATTEN_6_OUTPUT_OFFSET 0
#define DROPOUT_6_OUTPUT_DEC -1
#define DROPOUT_6_OUTPUT_OFFSET 0
#define DENSE_6_OUTPUT_DEC -1
#define DENSE_6_OUTPUT_OFFSET 0
#define SOFTMAX_6_OUTPUT_DEC 7
#define SOFTMAX_6_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {7};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_24_input_config = {
    .super = {.name = "conv2d_24_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_24_kernel_0_data[] = TENSOR_CONV2D_24_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_24_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_24_kernel_0_dec[] = TENSOR_CONV2D_24_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_24_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_24_kernel_0 = {
    .p_data = (void*)tensor_conv2d_24_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_24_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_24_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_24_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_24_bias_0_data[] = TENSOR_CONV2D_24_BIAS_0;

const nnom_shape_data_t tensor_conv2d_24_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_24_bias_0_dec[] = TENSOR_CONV2D_24_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_24_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_24_bias_0 = {
    .p_data = (void*)tensor_conv2d_24_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_24_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_24_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_24_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_24_output_shift[] = CONV2D_24_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_24_bias_shift[] = CONV2D_24_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_24_config = {
    .super = {.name = "conv2d_24"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_24_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_24_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_24_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_24_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_25_kernel_0_data[] = TENSOR_CONV2D_25_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_25_kernel_0_dim[] = {4, 2, 32, 24};
const nnom_qformat_param_t tensor_conv2d_25_kernel_0_dec[] = TENSOR_CONV2D_25_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_25_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_25_kernel_0 = {
    .p_data = (void*)tensor_conv2d_25_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_25_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_25_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_25_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_25_bias_0_data[] = TENSOR_CONV2D_25_BIAS_0;

const nnom_shape_data_t tensor_conv2d_25_bias_0_dim[] = {24};
const nnom_qformat_param_t tensor_conv2d_25_bias_0_dec[] = TENSOR_CONV2D_25_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_25_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_25_bias_0 = {
    .p_data = (void*)tensor_conv2d_25_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_25_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_25_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_25_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_25_output_shift[] = CONV2D_25_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_25_bias_shift[] = CONV2D_25_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_25_config = {
    .super = {.name = "conv2d_25"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_25_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_25_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_25_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_25_bias_shift, 
    .filter_size = 24,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_26_kernel_0_data[] = TENSOR_CONV2D_26_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_26_kernel_0_dim[] = {2, 1, 24, 16};
const nnom_qformat_param_t tensor_conv2d_26_kernel_0_dec[] = TENSOR_CONV2D_26_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_26_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_26_kernel_0 = {
    .p_data = (void*)tensor_conv2d_26_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_26_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_26_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_26_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_26_bias_0_data[] = TENSOR_CONV2D_26_BIAS_0;

const nnom_shape_data_t tensor_conv2d_26_bias_0_dim[] = {16};
const nnom_qformat_param_t tensor_conv2d_26_bias_0_dec[] = TENSOR_CONV2D_26_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_26_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_26_bias_0 = {
    .p_data = (void*)tensor_conv2d_26_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_26_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_26_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_26_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_26_output_shift[] = CONV2D_26_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_26_bias_shift[] = CONV2D_26_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_26_config = {
    .super = {.name = "conv2d_26"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_26_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_26_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_26_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_26_bias_shift, 
    .filter_size = 16,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_27_kernel_0_data[] = TENSOR_CONV2D_27_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_27_kernel_0_dim[] = {2, 1, 16, 12};
const nnom_qformat_param_t tensor_conv2d_27_kernel_0_dec[] = TENSOR_CONV2D_27_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_27_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_27_kernel_0 = {
    .p_data = (void*)tensor_conv2d_27_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_27_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_27_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_27_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_27_bias_0_data[] = TENSOR_CONV2D_27_BIAS_0;

const nnom_shape_data_t tensor_conv2d_27_bias_0_dim[] = {12};
const nnom_qformat_param_t tensor_conv2d_27_bias_0_dec[] = TENSOR_CONV2D_27_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_27_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_27_bias_0 = {
    .p_data = (void*)tensor_conv2d_27_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_27_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_27_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_27_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_27_output_shift[] = CONV2D_27_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_27_bias_shift[] = CONV2D_27_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_27_config = {
    .super = {.name = "conv2d_27"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_27_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_27_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_27_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_27_bias_shift, 
    .filter_size = 12,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_6_config = {
    .super = {.name = "global_max_pooling2d_6"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_6_config = {
    .super = {.name = "flatten_6"}
};
const int8_t tensor_dense_6_kernel_0_data[] = TENSOR_DENSE_6_KERNEL_0;

const nnom_shape_data_t tensor_dense_6_kernel_0_dim[] = {12, 6};
const nnom_qformat_param_t tensor_dense_6_kernel_0_dec[] = TENSOR_DENSE_6_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_6_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_6_kernel_0 = {
    .p_data = (void*)tensor_dense_6_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_6_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_6_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_6_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_6_bias_0_data[] = TENSOR_DENSE_6_BIAS_0;

const nnom_shape_data_t tensor_dense_6_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_6_bias_0_dec[] = TENSOR_DENSE_6_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_6_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_6_bias_0 = {
    .p_data = (void*)tensor_dense_6_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_6_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_6_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_6_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_6_output_shift[] = DENSE_6_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_6_bias_shift[] = DENSE_6_BIAS_LSHIFT;
const nnom_dense_config_t dense_6_config = {
    .super = {.name = "dense_6"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_6_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_6_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_6_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_6_bias_shift
};

const nnom_softmax_config_t softmax_6_config = {
    .super = {.name = "softmax_6"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_6_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_24_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_24_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_25_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_26_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_27_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_6_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_6_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_6_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_6_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //HAR_CNN_NNOM_H