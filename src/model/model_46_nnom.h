#ifndef MODEL_46_NNOM_H
#define MODEL_46_NNOM_H

#define APP_ACTIVITY_MODEL_NAME model_46_nnom
#define APP_ACTIVITY_RECOGNITION_PRECISION_FLOAT (0)
#define APP_ACTIVITY_RECOGNITION_SENSOR_SCALE (2)
#define APP_ACTIVITY_RECOGNITION_SENSOR_RESOLUTION (8)
#define APP_ACTIVITY_RECOGNITION_SAMPLING_FREQUENCY (10)
#define APP_ACTIVITY_RECOGNITION_FREQUENCY_DIVIDER (0)
#define APP_ACTIVITY_RECOGNITION_HIGHPASS_STAGES (2)
#define APP_ACTIVITY_RECOGNITION_INPUT_SIZE (192)
#define APP_ACTIVITY_RECOGNITION_STEP_SIZE (32)
#define APP_ACTIVITY_RECOGNITION_CLASS_COUNT (6)

#ifdef INCLUDE_MODEL
static const float highpass_coefficients[] = {0.2069928239055942f, -0.2069928239055942f, 0.0f, 0.2068179864931189f, -0.0f, 0.25f, -0.5f, 0.25f, 0.4490699651581907f, -0.2071676613180694f};
static const char* APP_ACTIVITY_RECOGNITION_CLASSES[] = {"jog","skip","stDown","stUp","stay","walk"};
#include "nnom.h"

/* Weights, bias and Q format */
#define TENSOR_CONV2D_36_KERNEL_0 {5, -8, 16, 19, -4, -1, 21, 12, -1, -11, 33, 22, 16, 36, -4, -59, -1, 12, -4, 25, -14, -36, -4, 46, 39, -3, 17, 4, -36, 27, 1, 11, -1, -8, -56, -21, -8, 10, 1, -42, -25, 13, 29, 4, 23, 9, -32, -31, -31, -43, 29, -19, -1, 27, -5, 20, -5, 8, 28, 65, 46, 1, -22, 25, -16, 22, 41, 13, -6, 17, 34, -13, 24, -27, -19, -17, -43, 7, -40, 40, -44, 32, -19, 18, 38, -6, 49, -31, 53, -27, 1, -12, -17, 4, -32, 32, 6, 54, -7, 15, 5, 34, -27, -1, -25, -30, -11, -58, 3, 7, 24, 9, 25, -36, -9, -42, 14, -13, 19, 71, -14, -28, 19, -32, 17, 15, 16, 20, -26, 20, -26, -10, -44, 18, 39, 4, -13, 14, -6, -13, 18, -12, -17, -56, 43, 29, -24, 2, -28, 28, 34, -41, -17, -1, 0, 6, 11, 70, -8, -11, 8, -59, 4, -21, -6, 7, -22, 67, 4, -61, -6, -25, 2, -12, 0, 61, -2, 28, -10, -18, 0, -22, 35, 12, 13, -14, -5, -14, -34, -30, -36, 24, 19, 5, 11, -4, 36, -13, 17, -5, -11, 10, -31, -20, -21, -15, 35, -16, -29, -2, -21, 7, 12, -9, 50, 29, -26, -55, 26, -44, -4, 0, 29, -12, 16, 37, -19, 38, -38, 21, -9, 7, 4, -13, 47, -40, 40, -29, -13, -31, 20, -13, 44, 5, -11, 22, -24, -5, 33, -25, 53, -12, 3, -49, 2, -22, 5, 11, -28, 3, 5, 28, 57, -51, -32, 6, -24, 3, 41, 30, -4, -27, -10, -19, 37, -28, -20, 28, 29, -23, 5, -5, -1, -13, -45, 3, 52, 1, 12, 9, 4, 19, 15, -6, -11, 2, -26, -57, -25, -44, -22, -12, -26, 15, 13, 9, 50, 11, 42, 41, 46, -27, -45, 2, -2, 15, 44, 19, -8, -14, -13, -18, -17, 2, 20, -25, -3, -2, -13, 11, -39, 24, -42, 4, -30, -30, -9, -26, -30, 11, -62, -13, -10, -32, -25, 22, -32, 2, -44, 39, -9, -51, 35, -18, -10, 14, 14, -7, -13, -26, -11, 5, -4, 2, -10, -36, 35, 6, -2, -33, -24, 44, -49, -32, -33, 17, 16, 4, 28, -18, -8, -27, -13, 33}

#define TENSOR_CONV2D_36_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_36_BIAS_0 {2, -27, -31, -51, -35, -47, -25, -46, -43, -78, -57, -47, -53, -24, -21, -67, 7, -83, -52, -56, -87, -18, -53, -72, 12, -27, -64, 13, -17, -18, -34, 8}

#define TENSOR_CONV2D_36_BIAS_0_DEC_BITS {9}

#define CONV2D_36_BIAS_LSHIFT {6}

#define CONV2D_36_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_37_KERNEL_0 {4, 42, -4, -1, 47, -25, 18, 5, -1, -21, -31, -11, 2, 17, -4, -10, -33, -10, 1, 51, 39, 5, -7, 31, -2, 0, -39, 5, 1, -9, 27, 35, 1, -6, 0, 16, -54, 33, -17, -9, -32, -10, 21, -38, 22, 2, 54, -3, 4, 11, -15, -48, 1, -12, 1, -47, -18, 4, -8, -21, -3, 8, -19, 6, -2, -17, 7, -4, -8, -1, 31, 11, -1, -10, 21, -29, 8, -31, 9, 8, 5, 8, 10, 19, 40, 22, 19, -47, 8, 37, 41, 0, 14, 27, -7, 35, -15, -1, 5, 8, 33, -1, 2, -32, 27, 10, 7, 52, -4, 11, -38, 12, 0, -16, 1, 8, -32, -18, -5, -13, 11, 4, 4, 28, 20, 24, 12, 14, 14, -9, -16, -10, -8, -6, -9, 29, -19, 6, 16, -22, 0, -1, 5, 2, 24, -30, 7, -6, -55, 14, -15, -11, -1, -16, -19, -2, 34, -11, 13, 1, 12, -27, -24, 6, 0, -18, 1, 3, -12, -34, 6, -31, 1, -69, -5, -6, -7, 7, 27, -1, 16, -13, 6, 11, 13, -9, 2, -6, -9, 21, -45, -27, 2, -48, -22, -28, 17, -42, 50, -7, -10, 3, -8, -25, -2, -3, -38, -6, -38, 31, -6, -2, -11, -31, 9, 5, 4, -13, 12, 7, -1, 2, -2, 10, 12, -23, -7, -18, -18, -10, -7, -23, -50, -10, 8, 0, -11, 9, 54, -21, -24, -14, 1, -29, -1, 6, -45, 22, -24, 14, -14, 20, -18, -33, -1, -7, -2, 4, 9, 5, -15, -4, -31, -18, -27, -68, -1, 6, 17, 9, -7, -43, -2, 35, -33, -53, 33, 0, -33, 38, -20, -59, -14, -4, -25, -12, 5, 7, 3, 18, -11, -21, -4, 11, -64, -54, -45, -30, -3, 13, 28, -20, -33, -16, -9, -39, 27, -11, -29, -44, 22, -35, -28, -19, 16, -42, 13, 18, -1, 6, 15, 1, 12, -11, 19, 6, -20, -61, 15, 16, -5, -39, 31, -20, -19, -4, -23, 19, 3, -32, -9, 12, 1, 43, -12, -43, 15, -6, 7, 12, -10, 11, -1, 30, 13, -26, 30, 20, -18, -15, -23, 6, -25, -11, 8, -13, -27, 3, -19, 21, 16, -7, 3, 12, 14, 6, 4, 8, -21, -3, 10, 15, -9, -11, -6, -29, -18, 2, 28, -11, -33, -64, 5, 20, -19, 5, 6, 9, 0, 25, -2, 42, -14, -13, -3, 19, 8, 32, -5, 0, 12, -5, 10, -4, 18, -11, 2, 13, 33, 15, 30, -1, 8, -5, 8, 2, 2, 13, 10, -24, 2, 43, -7, 10, 39, 34, -3, -1, 21, 28, -16, -49, 1, -15, 24, 21, 24, 0, 2, 3, -11, 1, 34, 5, -35, -80, 11, 5, -35, 13, -10, -48, 7, -47, 6, 36, -67, -10, 8, -2, 21, 34, 27, 2, 6, 18, 6, 20, -78, -64, 3, -20, 29, 23, 3, -13, 1, 7, 16, 33, 13, 20, -13, 22, 27, 12, 27, -22, 9, 21, 0, -27, -26, -13, -7, -65, -47, 2, 20, -35, 49, 25, -9, 21, 15, 14, 16, 12, -2, -40, 11, 10, 6, 12, -3, -21, -9, -24, -13, 7, -3, 17, 17, -5, 18, 22, -1, -7, 4, -1, 33, 35, 12, 23, -6, -2, -14, -18, 26, 8, 3, -8, 3, -12, -6, 26, 22, 7, 18, 6, -6, 36, 21, -3, 20, -1, 6, 4, -3, -6, 11, -9, 25, 4, -12, 12, 0, 6, 14, 6, 9, 31, -12, -3, -6, 32, 8, 21, 11, 3, -2, 2, -2, -5, -6, -8, 4, 6, 17, 29, 3, 0, 23, 3, 31, 19, 12, 0, -11, 6, 16, -2, 39, 10, 12, -8, 14, 6, -7, 56, 0, 3, 10, 17, 1, 54, 24, 18, 43, 7, 11, 17, 8, -2, 9, -7, -4, 15, 0, -20, -8, 25, 13, 10, 28, 24, -7, 8, 5, 0, -5, 19, 24, 0, -5, -2, 1, -5, 13, 16, -18, -3, 10, 48, -4, 11, -6, 8, 16, 1, 10, 18, 4, 21, 5, 11, 12, -19, 5, -22, 21, -7, 0, 7, 0, -13, 18, -12, -8, 1, 23, 16, 1, 15, 38, 8, 3, -3, 17, -2, -40, 28, -9, -8, -14, -36, 19, 26, -3, 12, -11, 0, 7, 8, 16, 15, 10, -15, -1, 1, 18, 21, 18, 19, 38, 24, 22, 41, 1, 10, 3, 13, 9, 15, 10, 34, -10, 12, 11, 12, 21, 12, -14, -2, 17, 58, 23, 20, 17, 10, 21, 23, -9, 31, 40, 13, 20, 17, 15, 13, 7, -23, 15, 4, -5, 2, 1, -1, -16, 11, 0, -9, -6, 0, 39, 4, 11, -12, -4, -6, 12, 6, 19, -17, -15, -19, 15, 41, 35, 15, 14, 10, 1, -2, 23, 15, 18, -1, 0, 4, -16, -10, -29, -6, -19, 17, 0, 3, 27, -44, 32, 26, 11, -18, 27, 4, 0, 2, 45, 20, -1, -1, 11, -54, -9, 4, 19, 4, -37, 11, 16, 15, -20, -26, 16, 11, -15, 5, 3, 32, -2, -17, 2, -4, 5, 5, 3, 17, -5, -10, 8, 14, -36, -5, 15, 28, -5, 5, 18, -1, -3, 3, -7, -23, -31, 19, -1, 3, 9, -19, -11, 4, 17, -55, 13, 0, 7, -18, -3, 7, 2, 1, 10, 23, -28, -19, 16, 18, 5, -13, 7, 4, -34, 2, 10, -5, -28, -19, 10, -6, -4, -31, 7, 49, 1, -12, 9, 9, -6, 4, 10, 29, 10, -4, 29, 29, -10, -7, 5, -18, 13, 0, -13, 14, 0, -5, 5, -11, -21, 11, -2, -14, -19, -49, 5, 15, -2, -52, 11, -15, -12, -5, -13, 21, -7, -20, 13, 24, 4, -35, -27, -6, 11, -17, 15, 4, -14, 17, 10, 2, -20, -4, 1, -3, -11, -11, 25, 29, 20, 23, 27, 18, 5, 6, -3, 9, 16, 21, 17, 22, 6, 10, 1, 4, 20, 9, -11, 22, 10, 4, -6, -7, -30, 9, 18, 6, -17, 23, 14, 4, 13, -28, 10, -29, 34, 3, -11, 17, 4, 28, -12, 10, 38, 5, -34, 23, -4, 0, -3, -4, 18, -1, -8, -33, 5, 8, 0, 24, 0, 29, 11, 9, -25, 18, 27, -6, 9, 5, 7, -27, -1, 11, 7, 30, -4, 17, -30, -7, 11, 22, -19, 17, 18, 51, 14, -3, 9, 38, 30, 20, 31, 8, 34, -47, -8, 14, 4, 1, -19, -22, 24, -4, 12, 18, 7, 5, 41, 4, -1, 1, 2, 4, 12, 20, -35, 4, -5, 7, 13, -2, 26, 9, 21, -17, -2, -8, -38, 7, -2, 1, -8, 10, 0, 6, -10, 7, -1, 30, -18, -19, -19, 7, 8, 10, 12, -4, 5, -7, 23, 38, 19, 7, -2, -41, -4, 11, -11, -16, 6, 44, 0, -17, -20, -19, 9, -6, -3, 10, -9, 19, 2, -5, 8, 26, 0, 14, 41, -4, -32, -12, 0, 21, -2, -16, -17, -5, -7, 24, -3, -16, -14, 0, -4, -16, 33, 13, -7, -26, 11, 22, 0, 11, 29, 0, 7, 25, -12, 1, 29, 7, 9, 36, 22, 35, 6, 33, -18, -30, -25, -6, -6, 11, -7, 54, -32, -13, 24, -1, -14, 3, -4, -17, 9, -17, -15, -4, -8, 5, -32, 7, 35, -20, -15, -29, -16, -5, 12, 9, 33, 13, 30, 16, -7, 0, 24, 48, 3, -2, -7, 33, 8, -19, -9, -3, -1, -12, 32, 8, 8, 8, 8, 32, 12, 26, 4, -2, 28, 22, 16, -9, -6, 0, 5, 9, -10, 4, -37, -50, 18, -10, 18, -32, -16, -3, 26, 43, -41, -18, -3, 46, 21, 9, -19, 6, -10, -16, 7, 31, -25, -10, -6, 37, -44, 1, 21, -19, -16, -60, -23, 18, -8, -15, -15, 28, -15, -42, 14, -53, -27, 36, -51, -17, 4, 21, 7, -36, 1, 13, -25, 12, 48, -9, 7, 19, 19, 13, -9, 22, -46, -23, -108, -38, -1, -22, 13, -40, 26, -19, 2, 20, -36, -40, -8, 3, -3, 8, -31, 0, -20, -49, -20, -54, -26, 6, -7, 6, -19, 3, -19, 16, -32, -10, 2, 16, 20, -13, -13, 3, 9, 9, 14, 13, -5, 6, 15, 0, 2, -26, 27, 35, 17, 28, -30, 27, -22, -6, -20, 3, 34, -15, 26, 16, -20, -27, -11, -10, 0, 32, 2, -28, -13, 5, 14, 27, -18, -4, 18, 47, -4, 14, 15, -21, 7, -5, 28, 2, 14, 12, 18, 3, -24, -16, 10, -25, -42, 28, -1, 25, -14, -38, 13, 11, -14, -4, -36, 15, 3, -36, 1, 4, -18, 41, 18, -51, -8, 4, -2, -28, 18, 8, 0, -2, -39, -54, 12, 12, 19, -20, -19, 2, -26, -15, 28, -35, -29, -7, -2, 16, -1, -70, 21, 5, 19, 10, 14, -23, 1, 16, 24, 3, -27, -3, 4, -31, -17, 23, -54, -9, -3, -65, -24, 11, 4, -16, 6, 14, -14, -41, -29, -2, -24, 14, 32, 21, -80, -72, -42, 0, -76, -53, 12, 15, 19, 45, 1, -19, 26, 40, 27, -42, 14, -119, -85, -12, -47, 59, 22, -29, 8, -56, -11, 9, -10, -32, 11, 24, 3, -26, -44, -13, 1, 15, -1, -1, 19, 18, 0, 27, -7, -3, 27, -18, -9, 16, 5, -28, -5, -11, 20, 27, -8, -37, -17, -4, 38, -53, -20, 18, 20, -44, -47, 15, -13, -36, 6, 17, -11, 3, 0, 28, -29, -6, -4, 22, 7, -21, -7, -38, 23, 6, 43, 10, 33, -9, -7, -15, 9, -17, -8, 9, 30, -25, -40, 18, 22, -29, 13, 25, 16, 11, 5, 5, -7, 10, 14, -11, -13, 22, -2, -3, 17, -9, -9, -26, 20, -13, -1, -38, 40, 20, -64, 0, 32, 20, -35, 30, -18, -33, 7, 6, -7, 8, -6, -17, -1, -4, 27, -14, 9, -5, -19, -41, -15, 37, 6, 40, -26, -16, -5, 12, 28, -2, -19, -2, 32, 10, 15, -11, 4, 11, -17, 10, 20, -6, -6, 8, 1, 9, 9, -27, 17, 12, -7, -19, 38, -4, -14, -9, 22, 27, 0, -6, -24, 0, 5, 16, -55, -22, 2, 10, -21, 5, 4, -6, -4, -6, -6, 14, -6, 30, -20, -10, -1, -8, 34, -14, 17, 9, 5, 0, 28, -29, 5, -33, 29, 3, -11, -41, 12, -22, -15, -7, -28, -7, -38, 24, 21, 4, -16, 3, 28, 2, -18, 22, -15, 30, 9, -24, -12, 21, 3, -26, 5, 15, 38, -23, -36, -5, -39, -26, -26, -27, 32, -5, -8, 31, 24, 15, -34, -22, 6, -29, -1, -5, 8, 3, -39, 11, 31, -47, 43, -22, 4, 45, 35, 29, 22, -5, 14, 18, -19, 7, -15, -40, 12, -35, -9, 0, -31, -19, 46, -6, 1, -19, 5, -11, -7, 13, -7, 13, -35, -45, -7, -16, 11, 7, 8, 17, 8, -50, 4, -25, -20, 2, -15, -53, -2, 2, -39, 11, -21, -15, 15, -15, 10, -44, -9, 0, 7, -21, 23, -27, -29, -16, 5, 0, -16, -16, 18, -3, -11, -32, -17, 23, -34, 1, -27, 13, -16, 9, -30, -4, 17, -2, 13, 21, 4, -21, -12, -11, 7, -14, 7, 12, -10, -26, 3, -2, -24, 14, 3, 3, -2, 16, 14, -14, -11, 4, -1, -28, 0, 18, -19, 4, -26, -20, -21, 0, 9, -37, -16, -4, 8, -24, -15, -15, -6, 2, -6, 11, 2, 5, -23, -13, 11, -16, 3, 19, 2, -2, 9, -4, -10, 8, -14, 9, 35, 10, 7, 5, 10, -51, -8, -2, -8, 3, 27, 10, -5, 4, -11, -10, 8, 9, -3, 6, -7, 34, 8, -3, 34, 18, -24, 19, -11, -14, -52, 0, 23, -47, -2, -26, 3, -9, -24, 22, -3, -11, 9, 10, -2, 9, -5, 1, -36, -5, -13, -18, 1, -6, 17, 5, 2, -2, -13, -11, -6, 6, -22, 4, 12, 36, 8, 0, 22, 10, -6, -16, -17, -9, 25, 15, -29, -12, -20, -31, 3, 26, -5, 32, -21, -2, -9, -4, -15, -43, -45, -39, -22, 7, -35, -19, -13, -25, 13, -12, 17, -16, -1, 11, 16, -9, 13, -4, 9, -14, 19, 22, -7, -19, 19, -26, 9, -15, 13, -9, -6, 14, -40, -14, -19, 27, -36, -3, -21, -17, -2, -4, -2, 29, 2, 19, 17, 11, 13, -3, 13, 16, 0, 1, -6, 0, -1, 12, -6, 7, 0, 11, 8, 7, -9, 54, 1, -7, -10, 11, 36, 21, 19, 19, 0, -9, 9, -8, 35, 30, 9, -9, 27, -10, -14, 36, 30, -27, 1, -7, -3, 34, 39, -9, 5, 22, 31, 35, -7, -15, 29, -12, 7, 11, -2, 11, 7, 14, 7, -2, -10, -1, -9, 21, -18, 30, 6, -17, -3, 17, 1, 23, -16, -1, 13, -3, -21, 16, -8, 17, 3, 21, 7, 6, 31, 17, 9, -8, -2, 13, 3, -21, 32, 12, 10, -18, 18, 12, -4, 40, -8, -33, -2, 17, 4, 29, 5, 1, 35, 15, 15, 20, 3, -1, 11, -5, -11, -4, 11, 10, -3, 16, -10, 6, 13, -11, -3, -10, 13, -10, -4, 26, 12, -18, 11, -13, -14, -5, 18, -8, -42, 20, -7, 14, -3, 16, -5, -14, 10, 18, 18, 10, 3, 0, -1, -19, 27, 5, -7, 16, -15, 16, -22, -31, 31, -17, -12, 0, -6, 6, 28, 13, -15, -16, 13, 24, -8, -9, 14, -11, 16, 2, -5, -1, -10, -12, -5, 17, 12, -6, -6, -10, 1, 7, 12, -11, -7, -12, 10, -19, 5, 30, 3, -12, 18, 9, 15, 21, 2, 16, -11, -4, 9, 5, 25, 26, 8, -23, 8, -11, 16, 14, 24, -9, -8, 38, 3, 3, 20, 17, 2, -8, 0, 21, 31, -6, 0, -7, 9, 39, -28, -17, 24, 2, 28, -1, 7, 18, 21, -59, 11, 1, -30, 30, -37, -18, 4, -3, -12, 7, -2, 21, -3, -5, 16, -10, -11, -50, -68, -4, -19, -33, 0, 0, -12, -12, -32, -5, 0, -7, 11, 26, 14, -16, -12, -35, 2, 16, -44, -24, -11, -19, 14, -11, -19, 13, 0, -52, 0, 1, -23, 39, -99, -43, -32, -10, -12, -12, 12, -8, 9, -1, -5, 2, 0, -17, -17, 6, 1, -31, -3, -5, -9, -5, -39, -23, 10, -12, 7, -15, -6, -3, -50, 6, -11, -13, 13, -25, -46, 7, -26, 8, 22, 1, 6, 4, -13, 4, -56, -12, -7, 9, -15, -42, -18, -33, -18, 10, 3, -3, 5, -21, -21, -15, -26, 4, -9, 16, 1, 8, -27, 1, -17, 13, 0, -14, -2, -25, 13, -25, -27, 36, 5, -41, 1, 16, 4, -7, 10, 15, 1, -6, -6, -10, -24, -1, 3, 29, -25, -59, 12, -10, -6, 20, 9, 21, 6, -12, -5, 28, 8, 15, 6, -3, -9, -19, -9, 26, -4, -10, -47, 5, 11, 2, 20, 4, -40, -14, 24, 30, -19, -4, -2, 9, -8, 6, -22, 12, 12, 20, 0, -9, 10, -16, -27, 14, -39, 32, -24, -11, -16, -11, 3, 28, -2, -28, 5, -34, -52, 20, -17, -16, 8, -38, 3, -10, -12, -1, -5, -24, -10, -15, 9, -8, -21, -5, 13, -2, -20, 1, 14, 19, -2, -24, -24, -4, -30, 9, 10, -23, -10, 28, -4, 14, -20, -40, 18, -20, -14, 7, -10, -28, 13, 14, 8, -8, -19, 10, -3, -13, -30, -16, 4, -25, -42, 33, 43, 41, -43, -14, -48, 12, -12, -44, 42, 28, -15, 5, -38, -23, -27, -64, -33, 5, 15, -19, 8, 75, 5, 6, -34, -21, 5, 30, -4, 1, -50, 15, 23, 56, 41, 14, -32, -12, -57, -15, -9, 20, 8, -35, -19, -35, -1, 23, -39, -32, -27, -51, 1, -10, 6, 29, -18, 10, 8, -29, 5, 37, -18, -32, 45, 8, 1, -27, 11, 13, -40, 1, 1, 6, 6, 10, -19, -22, -3, -2, -19, 7, -7, 17, 7, 47, 15, -16, -2, -7, 4, -19, -6, 25, -11, 47, 17, 27, -12, -30, -17, 42, -2, -60, 14, 23, -9, 29, 12, -24, 8, 1, 14, -51, 25, -2, -4, 29, -29, 7, -13, 24, -1, -61, 19, 5, -4, -10, -7, 1, 0, 18, 17, -64, -30, 7, -42, 41, -13, -17, 12, -21, 18, 0, -17, 38, 38, 41, -8, 23, -28, 26, 10, 1, 5, -9, -55, 18, -8, 6, 9, 23, 3, -5, 8, 25, 3, -16, 0, 14, 12, 11, 6, -2, -11, -24, 7, 3, 3, 1, -10, -5, 25, -12, 27, 49, -30, -27, -30, 6, 27, 20, 10, -10, 9, -6, 18, -4, -40, 5, -26, 31, -14, 2, 38, 14, 9, 13, 16, 20, 30, 36, -12, -1, -27, 3, 8, 5, 3, -21, -27, 6, 38, 1, -15, 49, 28, -4, 19, 28, 22, 28, 22, 34, -28, 16, 19, -3, -21, 13, -31, 21, 42, 19, -34, -16, 14, 26, -14, 8, 19, 43, 21, -15, 18, 15, 18, 21, 7, 25, 13, -2, 19, 15, 2, 17, 15, 26, 6, 3, 47, 11, 22, 19, -24, -10, -27, 18, -15, 3, -25, 0, 48, 27, 11, -42, 4, 4, -2, 35, 29, 7, 1, -38, 6, 12, -34, -14, 19, -40, -20, -5, 11, 6, 5, -11, -3, -5, -19, -18, 16, 13, 1, -23, 14, 53, -5, -14, 3, 1, -6, 14, 5, 41, -9, -35, 28, 6, -5, -7, -6, 12, 11, 0, -8, 0, -25, -8, -17, -19, -39, 34, 23, 7, 5, -22, 42, 0, -6, -17, 19, -14, 9, 5, 15, 13, -6, -19, 9, 14, 8, 9, 23, 21, -5, 5, 14, 1, -52, -2, 21, -1, -10, -6, 10, -15, 2, 14, 31, 12, 8, 1, -4, 12, 21, -7, 12, -18, 14, 34, -29, 25, 27, 1, 23, 14, -7, 18, -13, 12, -3, 18, -6, -6, -10, 9, -4, -20, 23, -16, 0, 13, -5, 12, 2, -47, -3, 12, 13, 16, -16, 7, 27, 3, 9, 5, -11, 1, 0, 7, 13, -9, 3, -17, -35, 3, 5, -27, -19, -15, 19, -18, 22, 10, 8, 29, -5, 2, -5, 5, -29, 33, -18, 22, 49, 22, 20, 38, 1, 7, 6, 30, -2, 13, 6, -8, 17, -6, -15, -2, 4, -19, 8, 27, 4, 12, 30, 11, 7, -16, 16, 6, 1, 24, -14, 34, -24, -10, 26, 4, -21, 29, 2, 39, -39, -12, 16, -23, -18, -27, -2, 28, -3, -8, 27, -9, 33, -11, 3, -11, 2, -24, 5, 9, 17, 22, 8, -71, 20, 64, 14, 26, 37, 17, 18, 14, 45, 24, 11, -19, 8, 31, -11, -31, -26, 21, -11, 14, 4, 20, -7, 2, 8, 22, 3, -4, -2, 7, 10, 5, 2, 16, -2, -12, 24, -40, -36, 12, 8, -19, -51, 21, 11, 32, 11, -33, 0, 4, -46, -5, -4, 67, -14, -19, 3, -20, -27, 42, 4, 27, 10, -27, -6, 9, -1, 1, 16, -5, 14, 32, 30, 3, -14, -21, -31, -8, 3, -47, -24, 14, 14, -4, -26, 6, 21, -1, 1, 32, 14, 2, -29, 9, 13, -36, 12, 22, -42, -11, -17, -3, -1, -17, 2, 8, -3, 10, 7, 5, -10, 11, -13, -33, -25, -42, 34, 48, 16, -20, -33, 0, 1, 6, -15, 13, 6, -10, 8, 11, -43, -13, 1, 11, -1, -12, -58, 15, 18, -27, -6, -46, 2, 6, 14, -8, -64, 14, -7, 22, 16, -78, 7, -37, 11, -35, -1, -2, 9, -15, -4, -10, -7, -56, -6, 16, 13, -12, 19, 3, -33, 28, -14, -18, -2, -3, -24, -1, -40, -6, 55, -14, 18, -14, -33, 18, -31, 3, -15, -18, -13, 5, 31, 23, -5, 4, -31, -38, 11, 19, -60, 11, -10, 21, -8, -22, -24, -16, 37, -29, -30, 13, 10, 14, 11, -44, -31, -6, 37, -9, 27, 10, 0, 4, -34, 11, 0, -15, -43, -7, -9, -11, 22, 6, 8, -1, -20, 12, 5, -28, -13, -2, 9, 12, 8, -17, -5, -14, 8, -19, -13, -40, 10, 7, 22, -5, -4, -5, -35, 12, -4, 10, 4, 14, 2, -6, 26, -13, -16, 2, 32, -57, -39, -1, -2, -23, -32, 29, 70, -3, 2, 2, 3, 0, -27, -36, 1, -29, 25, -5, -58, 7, -1, -52, -1, 3, -19, -27, -1, -26, 14, 8, 2, 29, -13, -22, 10, 6, -6, 2, -4, -14, -6, 8, -18, -9, 8, 18, -17, -33, 10, 0, -22, -7, -31, -57, 4, 31, -31, 4, 11, 1, 29, -1, 17, 8, 3, 35, 3, -15, -5, -14, 8, 5, 3, 6, -20, 16, -1, -5, -1, -44, -6, -3, -8, -18, 21, 12, 18, 44, -15, -21, -57, 16, 3, -16, 1, 33, 3, -21, 18, 1, 21, -7, -4, -49, 17, 18, -6, -13, 12, -51, 2, -11, 25, 11, -16, -19, 11, -16, -29, 31, -22, 7, -6, -21, -30, -10, -3, 6, -4, -37, 18, 6, -17, 5, 13, 36, 12, -20, -48, 55, 16, -2, 11, -42, 4, 64, -17, -16, -19, -13, 12, 32, -17, -1, -38, 23, -1, 4, 7, -13, -33, -30, -30, -39, 6, 7, -46, -10, -9, -30, 25, -1, -29, 5, -17, -9, 37, -3, -21, -5, 8, -14, -46, -43, 7, -16, -33, -12, 12, -22, 16, 24, 19, -38, 41, 34, 17, 25, 53, 79, 2, 27, 23, 28, 18, -39, 1, -6, 30, -13, -8, -28, 22, 23, 20, 24, -14, 1, 26, -35, -41, -29, 0, 13, -34, 2, 9, -52, 17, -47, -44, -8, -23, 9, -29, -7, 7, -53, 1, 7, -11, 52, 36, 20, 3, 32, 1, -19, -10, -12, -45, -9, 26, 66, 10, 18, 2, 19, -5, 22, -64, -21, -74, -15, -16, 27, 15, -34, -14, -84, -12, 6, 0, -14, -35, -20, -6, -23, -55, 5, 3, -34, -21, -32, 4, 21, 2, 5, -8, -3, -46, 14, -39, 2, 6, -56, 8, -39, 45, -51, 12, 28, 12, 2, -23, -2, -37, 21, 11, -26, 3, 26, 24, 0, -7, 15, 18, 8, 11, 44, 20, 18, 26, 6, -9, -28, -22, -2, -10, 32, -6, -54, -30, 30, 5, -11, 10, 11, -41, -19, -35, -14, 10, -22, 13, -20, 16, 21, 2, 4, 18, -9, 4, -30, -5, -46, -52, 17, -13, -1, -11, -19, 4, -5, -19, 10, 5, -17, -10, -19, -65, 10, -22, -1, 23, -11, -18, 9, 27, -24, 28, 7, -1, 3, -1, -23, 1, 17, -26, -14, -40, -37, 18, -40, 21, -22, -12, 6, -13, 5, 44, 12, -8, -18, 2, 20, -5, -40, 5, -4, -9, 20, -9, -5, 0, -4, -8, 19, -5, -3, 2, -20, -22, -4, -27, -5, 31, 10, -18, -29, -27, 36, -37, 11, 24, 10, 13, 17, -2, 8, 0, 24, -10, 38, -22, -31, -1, 25, 64, 46, 13, 4, 14, -14, 12, 43, -4, 9, 9, -4, 9, 5, -15, -31, 37, -75, -10, -4, 5, 31, -18, -78, 35, 12, -3, -33, -16, 9, 9, 3, 5, 8, 10, 15, -24, 33, -29, -28, 19, 13, -36, -38, 18, 14, 33, -19, 20, -29, -42, 5, -6, -57, 28, 26, 3, 36, -4, 1, 29, -2, 11, -14, -9, 17, 24, -19, -14, -12, 49, 51, 12, 35, -13, 12, 8, -3, 28, -29, -7, 12, -39, 31, 33, 24, 34, 5, 1, -8, 30, 25, 17, 8, 6, 29, 10, -36, -2, 3, 42, 6, -21, -28, -13, -12, 8, 23, -23, -30, -15, 6, 35, 14, -1, 5, -2, -42, 9, -30, -11, 30, 6, 2, 6, -5, 1, 15, -5, -22, -18, 5, -12, -15, -6, 35, -2, -18, -41, 49, 56, -9, 13, -36, -24, 2, -14, 21, 21, -13, 16, 41, -7, 12, 2, 3, -27, -6, 1, 16, -2, 11, 12, -6, -6, 36, -53, -14, -68, 16, 0, 19, -14, 2, -46, 3, 43, -6, 24, 21, -35, -44, -57, 0, 25, -46, -28, -4, -6, -10, -1, -2, 25, 6, 7, 36, 7, -22, 16, 66, -39, 49, 20, 40, 15, -34, -29, -10, -17, -12, -25, 6, 3, -12, -7, 55, 12, 22, 0, -42, -25, -19, 22, 45, -32, 3, 29, -17, 10, -8, -45, -42, -9, -9, 0, 5, 2, -17, -31, -44, -17, -15, -32, -33, -22, 8, -72, -10, -23, -98, -28, 4, -27, 27, 16, -3, -37, -22, -18, -6, 5, -20, -51, -17, -56, 10, 8, 7, -25, -62, -27, -72, -38, 3, -43, 0, 34, -65, -30, 16, -16, -22, -15, 3, 5, 18, 11, -5, 7, -2, 16, -1, 23, 11, -29, 31, 28, -46, 28, 11, 20, 16, -45, 8, -6, -31, -10, 21, -13, 8, -30, 7, 36, 5, 7, -8, -25, 10, -10, -15, -40, 3, 14, -30, -15, -56, -40, 5, -11, 1, -18, -34, -65, 42, -14, -82, 21, 13, 13, -15, -19, -11, 10, 14, 11, -20, -11, 22, -11, 15, -4, -33, -5, 15, 2, -17, 37, -12, 25, 1, 0, -4, -2, -5, 5, -13, -16, 3, -5, 0, -48, 25, -18, 9, -9, -11, 1, -5, 7, -11, 13, 11, 5, -32, -1, 19, 7, -29, -45, 3, -27, -37, 19, -35, -23, -2, 5, -2, 1, 9, 4, 20, -26, -12, 4, 15, -2, -23, -3, -4, -27, 3, -6, 10, 11, -10, -10, -2, 21, -25, -2, -8, -39, -4, 16, -43, -4, 4, 2, -16, -21, 23, -16, -19, -5, -1, -12, 18, -8, 20, 15, -26, -12, 23, 16, 19, 11, -30, 18, 20, 0, -33, 11, -10, -1, 21, -10, 3, -41, -25, -3, -14, 0, -4, -4, -32, -2, -4, -19, 3, -17, -6, 4, 5, -13, -35, 35, 22, -13, -15, 11, 18, -31, 21, -30, -19, 3, -51, 1, 2, -9, -42, 26, -6, 37, -17, -72, -7, 9, 46, 1, -31, 4, 42, 5, 5, 9, 15, -51, 27, -30, -30, 22, 39, -21, -15, -28, 11, -24, -70, -7, -17, -16, 14, 0, 1, -1, -86, -51, 30, -32, -25, -22, -44, -5, -56, -10, -19, -22, 22, 8, 29, -14, -37, 10, -2, 4, 8, -20, 10, 11, -1, -5, -6, -11, -9, -5, 38, 9, 9, -13, -12, -19, -9, 28, 25, 6, -2, 34, -10, 17, 16, 10, 2, 14, -29, -12, -31, 15, -28, -9, -14, 60, 3, 11, 10, -21, 25, -16, -14, -18, 11, 0, -8, -11, -9, -23, 26, 5, -33, -4, 4, -8, -27, 0, -17, 6, 14, -17, -24, 14, -3, 13, 25, -21, -6, -3, 1, -18, -2, 8, -8, -9, -14, -32, -3, 13, -3, 11, 13, -13, -13, -58, 8, 17, -15, -7, -37, -4, -4, 17, 32, 3, 5, 3, -4, 12, 9, 5, -9, 0, -2, 16, 4, 0, 10, -5, 1, 34, 21, 1, 1, -10, 18, -38, -18, -37, -4, 4, -17, -22, -3, 35, 6, -4, 31, 24, -5, 1, 4, 0, 27, 14, 2, 0, -40, -13, 8, 16, 18, 11, 9, 8, -23, -3, 22, 8, 20, 18, -7, 8, 0, -5, -9, 8, 10, -24, 17, 5, -2, 16, 7, 11, -12, 5, 1, 24, 19, 18, -8, 16, 17, 13, 38, -2, -11, 5, 11, 3, 17, 12, 11, 0, 10, 4, -7, 42, 1, 1, -1, 0, 13, 6, 11, 38, -27, 27, 5, -12, 42, -3, -21, 46, -16, 19, -10, -5, 11, 5, -56, 15, 8, 16, -16, 40, 18, 15, -6, -13, -4, 0, 35, -1, 16, 30, 44, 25, 15, 24, -5, -9, 26, 12, 15, 7, 13, 18, 6, 36, 25, 24, 45, -2, 19, 7, -2, -35, -28, -2, 6, -5, -8, -3, -7, 4, -11, -6, 1, -6, -7, -7, -7, 3, -7, 1, -11, 3, -1, -4, -8, -4, -3, -2, -7, -1, -7, -4, -6, -4, -4, -9, -1, -6, -2, -4, -7, -4, -8, -1, -12, -8, -10, -7, -2, -7, 0, -6, 0, 2, 5, -4, -2, -5, -3, -5, 7, -10, -4, 2, 5, 0, -2, 5, 0, 4, -6, 1, -3, -2, 0, -5, 1, -11, -3, 0, -2, -7, -6, -6, -4, 0, -7, -1, 0, -4, -1, 3, -6, -2, -8, -4, 0, -4, 6, 3, -11, -5, 1, 6, -7, -6, -11, 4, -3, 4, -9, -5, -3, -3, -9, 2, -4, -10, -7, -3, -8, 5, -2, -7, -2, -5, -5, -11, -10, -8, 1, -7, -5, -9, 3, 1, -9, 0, -1, -2, -9, 8, -7, -5, -8, 0, 3, 4, -3, 2, -6, -7, -10, -5, 1, -1, 1, -9, -9, -2, 2, -8, 0, -6, -3, 8, -1, -5, -10, -8, 1, -9, -2, -5, -2, 2, -6, -10, -2, -1, -9, -8, -9, -3, -5, 0, 2, -3, -9, -4, -7, -5, -7, 2, -2, -6, -1, -6, -1, -6, -1, -3, -2, -4, -4, 7, -6, -4, -10, 2, -1, 2, -2, -2, -2, 3, -10, -4, -4, -4, -4, 0, -2, 0, -4, -4, -1, -4, 4, 1, -6, 2, 6, -2, -2, -8, -11, 3, -9, -4, 6, 0, -10, 1, 3, -3, -8, -2, 2, -6, -8, -9, -9, 2, 3, -2, -5, 8, -1, 6, -13, -5, -18, -8, -19, 22, -13, -5, -25, -19, -13, -7, -6, 11, 1, -18, 6, -12, 1, 25, 7, -44, -36, -14, -20, -13, -5, 2, -31, 1, 0, 15, -1, -15, 23, -17, -8, 28, 9, -30, -21, 6, -38, -34, 10, 43, 5, 4, -25, -14, 2, -31, 8, -39, -8, -10, 22, -52, 23, -12, -6, -3, -2, 15, -28, 10, 3, -8, -1, -8, 2, 20, -10, 5, 9, 16, 17, -2, 21, -16, -13, 15, -3, -4, -3, 4, -49, -4, 22, 23, -7, -13, -1, -17, 16, 9, -10, -41, -19, 28, -39, 13, 6, 15, 31, 4, -5, -25, 18, 2, 8, 22, -28, 4, 7, -11, 14, -56, -39, 22, 12, -19, 22, 28, -16, 4, 5, 8, -23, 1, -39, -14, 8, 24, -7, 16, -14, -10, 2, -27, -8, 4, -13, 8, -38, 12, -5, -28, -2, 11, 1, 9, -21, 3, 4, -1, -18, 12, -2, 13, -18, -30, 6, -13, -31, 4, 31, 30, 13, -4, 5, -50, 21, 8, 11, 12, -31, 8, 20, -14, -7, -2, -13, 21, 29, -26, 5, 14, 15, -1, -14, 6, -46, -13, -23, -29, -13, 29, -33, -17, -22, 9, 6, -6, -2, 0, -5, -21, -21, -13, 14, -37, -28, -21, 4, -5, -31, -7, -9, 1, 11, 3, -2, -3, -4, -9, -26, -61, -33, 28, 5, 9, -25, -2, -29, -45, 28, 42, -4, 10, -19, -3, 19, -7, 6, -38, -14, 0, 49, -34, 17, -6, -1, 17, -13}

#define TENSOR_CONV2D_37_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_37_BIAS_0 {2, 16, -41, -50, -7, 4, 6, 9, -28, 25, 4, -67, -12, 13, 21, 21, 16, -27, -6, 29}

#define TENSOR_CONV2D_37_BIAS_0_DEC_BITS {7}

#define CONV2D_37_BIAS_LSHIFT {6}

#define CONV2D_37_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_38_KERNEL_0 {14, 7, -22, 5, -19, -56, -7, 18, -51, 17, 43, 65, 1, -70, -7, -55, 19, -45, -7, 22, 16, 24, -9, -24, -34, -46, 33, -13, -10, 21, 15, 6, -68, 26, 55, -51, -10, 6, -9, -13, -15, 67, 19, 11, -42, 11, 19, 14, 3, 31, 19, -15, 10, 22, 49, -36, -20, -12, -3, 15, -29, 25, -20, -5, 9, 0, -8, 0, -4, 27, -49, 5, -34, 4, 0, -5, 22, -22, -15, -8, -5, -30, 18, 12, 1, 0, 16, -10, 7, -29, 24, -18, 22, -19, 4, -47, 11, -3, -9, -31, 4, -32, -6, -23, 20, -21, -32, 24, -3, -65, -47, 30, 7, 28, -16, -17, -19, 7, -17, -16, -7, 0, -12, -21, -12, -11, 1, -27, -14, 4, -24, 0, -13, -13, 5, 6, -5, -17, 11, -7, -9, 6, -17, 8, 8, -13, 2, -5, 3, -32, -7, -17, -9, -21, 5, -13, -17, -9, 7, 0, -8, -19, 5, 31, 6, -17, 11, -11, -1, -48, -18, 19, -15, 1, 1, 32, 3, 4, -13, -32, 3, -47, 7, 16, 22, 12, -7, -22, 3, -43, -8, 25, -3, -30, 12, 21, -5, 17, 1, -38, -4, -31, 6, 26, 13, -21, -24, 16, 7, 13, -30, -9, -6, 27, 18, 1, -32, 27, -8, 24, 10, -32, -1, -5, 8, 8, 20, 20, 2, 18, -34, -24, -13, 9, -37, 42, 5, 11, -5, -8, -21, 35, -27, 4, -38, 12, 15, 20, 0, -2, -22, -11, -31, 6, -7, -40, -20, 2, 10, 2, 37, 11, -39, -7, -54, -19, 27, 7, -21, -17, -41, -3, 1, 7, 0, -12, 18, 2, -5, -14, 1, 6, 11, -27, 35, 9, 23, -12, 16, 20, 40, -33, -36, -27, -30, -70, -9, -11, -13, 1, -12, -64, 2, -38, -4, 0, -38, 2, 3, 4, -13, -56, -63, 41, 23, 2, -22, 17, -15, 6, 15, 27, 25, 22, -10, 16, 10, -32, -4, -53, 28, -7, 18, -20, 23, -22, 5, -8, 10, -36, -18, 10, 26, 34, 27, -1, 29, -36, -4, -58, 5, 57, 0, 5, -2, -45, -15, 27, -3, -63, -26, 40, 24, -21, 13, 54, -8, -47, 19, 35, 1, -3, -57, -15, -12, -20, 24, 5, -13, -7, -27, 43, 30, -17, 0, 52, -8, -23, 25, -28, 28, -9, -4, -29, 36, -21, -13, 18, -10, -1, -11, -9, 16, 13, -16, -1, -22, -57, 8, 16, 15, -4, 6, 19, 25, -31, -21, -6, -13, -51, 8, 17, -4, -51, 20, -5, -35, 7, -25, -5, -3, -6, -28, -10, 2, 36, -24, 1, -16, 4, -17, 8, -4, 4, 17, 4, -34, 10, -19, -8, 2, -32, 15, -46, 17, -13, -41, -6, 4, 16, -56, 24, 4, -16, -19, -18, 22, 23, -24, 32, 17, -9, -4, -14, -28, 17, 11, -29, -1, 5, -27, -32, 8, -40, -11, 3, 11, 7, -20, 8, 18, -56, -47, 9, -26, 32, 7, 22, 4, 12, 43, -4, 8, -21, 19, 69, 16, 23, 3, 5, 43, -5, -12, 10, -15, 27, -39, 0, -17, 6, 24, -13, -24, -14, -7, -13, -9, -8, 4, -19, -14, -54, 9, 6, 6, 42, 19, 22, -8, -2, -3, 27, -6, 26, 6, 29, 7, 7, -9, -21, -3, -22, 21, -18, 23, 9, 3, -29, -16, 21, 9, 21, -89, 5, -77, -37, 11, 3, -16, 5, -24, -24, 20, -4, 10, -35, -1, -27, -8, 4, 22, 27, -81, 7, -61, -64, 40, 11, -19, -3, -17, 15, 26, 9, -5, -29, 25, -51, -9, 30, 27, -60, -19, 11, 1, 20, -52, 16, -18, -13, 7, -48, 40, 5, 37, -54, -58, -26, 1, 10, -45, -1, -47, -11, 19, -22, -18, 13, -44, 31, -73, -35, -28, -17, 10, 8, -7, -49, 11, -44, 23, 16, -3, 24, 8, -41, 7, 6, -28, 25, 19, -15, 23, -21, -19, -26, 20, -15, -18, 18, -1, 8, 16, 16, -8, -53, 3, -17, 22, -24, -36, 31, 18, 37, 5, -25, 14, 21, -10, -6, 29, 23, 9, -11, 15, 43, -42, 9, 11, 4, 30, -41, 16, -23, 29, -66, -46, -19, -14, 13, -39, 25, -8, -5, 5, -16, 26, -14, -14, 28, 3, -23, -48, -38, 0, 17, 37, -36, -8, -44, 21, 1, -4, 23, -1, 33, -8, -2, 17, -28, 1, -15, 11, 24, 14, -10, 5, 3, -16, 10, 1, -20, 22, 30, 18, -4, 43, 6, 18, 2, -1, 29, -21, -18, -4, -1, 26, 37, 10, -40, -2, -36, -24, 10, 13, 0, -3, 5, -24, -29, 15, 23, 56, -51, -63, 3, 18, -40, -7, 14, 25, -3, -22, -3, 2, -35, 47, -25, -9, 18, 57, 9, 11, -40, -5, -72, 27, -13, 8, -11}

#define TENSOR_CONV2D_38_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_38_BIAS_0 {24, 5, -9, -25, -56, 34, -3, 15, -104, -45, -18, 24, 36, -40, 17, 4, 22, -14, -43, 17}

#define TENSOR_CONV2D_38_BIAS_0_DEC_BITS {8}

#define CONV2D_38_BIAS_LSHIFT {3}

#define CONV2D_38_OUTPUT_RSHIFT {8}

#define TENSOR_CONV2D_39_KERNEL_0 {-33, 19, 0, 2, 1, -64, -1, 16, 21, -10, -4, -53, -17, -1, -19, -25, -4, 22, -4, -21, -3, -5, 21, -4, 6, -12, 7, 6, 4, 13, 24, -45, -18, -30, -7, -17, 3, -21, 13, 12, -19, 4, 13, -16, -34, -21, 47, 25, -12, 16, 9, -33, -6, 1, 33, -44, 3, -34, -27, -48, 21, -13, 20, 3, 13, -6, 5, -17, 5, -60, 12, 14, -71, -9, 41, 31, 6, 3, 11, -35, -54, -37, 19, -13, 4, -20, -35, -14, 15, 13, 29, -60, 10, -14, 15, 72, -3, 7, -34, 11, -12, 17, -7, -1, 5, 3, 35, -33, 23, -4, 2, 7, -37, 12, -15, 33, -7, 39, 22, 10, -12, -84, -11, -3, -49, -14, 17, -55, -17, -23, -22, -6, 4, 7, -33, 3, -63, -70, -34, 45, 24, -7, -33, 7, -7, -17, 24, -22, -53, -37, 18, 13, -11, -50, 22, 0, -32, -6, -32, 45, -11, 14, -18, -2, -1, 0, 30, -40, -9, -2, -43, -5, 8, -25, 36, -48, -1, -5, -22, -32, -50, 12, 31, 14, -8, -25, 29, -89, 8, -50, 17, 21, -36, 3, 30, 19, 10, -23, 2, -70, 35, 16, 5, 2, 9, -1, -68, -2, 22, -13, 7, 18, -6, -27, -9, -54, 15, -36, 16, -17, -101, 8, -4, 14, -3, 15, -30, -54, -47, -95, 55, -3, -4, 3, -17, -70, -67, -33, -18, -22, 48, -5, -11, -19, -4, 4, -43, 19, 19, -3, -1, 10, -18, -7, -8, 13, 23, 2, 9, -23, -55, 21, 11, 1, -10, 20, 15, -35, -46, -105, 16, -1, -12, 5, -18, -55, -66, -67, -7, 6, 13, -83, -21, -2, -7, -14, 15, -46, -53, -15, 11, 6, 7, -40, 18, -1, -21, -10, -32, 36, 21, 11, -7, 0, -14, -58, 26, 45, -63, -30, 3, -41, -31, -25, -8, -10, 20, -18, -25, -34, -10, -16, 14, -13, 8, -26, 33, -16, 0, 7, 14, -14, -22, 28, 39, -9, 8, 8, 8, -41, 22, 21, -40, -3, 17, 3, 3, -29, -62, -58, 27, -11, -51, -9, 30, 25, -26, 35, 5, 14, 21, 22, -7, 20, 28, 20, -10, -65, -9, -20, -8, 18, -66, -8, 10, 73, -2, 10, 5, 4, -111, -3, 20, 18, -14, 12, 1, 1, -9, -19, 10, 4, 1, -5, -26, -76, -65, 27, -12, -10, 29, -63, 1, -9, -17, -52, 18, 2, -84, -13, 6, -2, 17, -61, -6, -1, 16, 6, -23, 11, 12, 13, 4, 10, -20, -30, 56, 26, -54, -46, 5, -47, -9, 34, -7, -20, 16, -83, -60, -94, -3, 3, -21, 7, -12, 2, 2, 11, -16, -8, -11, -24, -8, 5, -18, -13, -15, -2, -9, 7, 5, -15, -10, 7, 4, 5, -17, -9, 2, -5, 9, -2, -16, -11, -14, -12, -6, 7, -10, -2, -10, -56, 16, 10, -54, -42, -19, -12, -23, 3, 13, 10, 6, 0, 5, 57, -21, 0, -22, -17, 5, 15, -45, -5, -73, 7, -32, -7, -11, -6, -9, 39, -25, 0, 10, 50, -12, 47, 9, -70, -2, -39, -5, -1, -35, -5, 34, 22, -2, 11, -4, 8, -2, 10, -6, -5, -3, -72, -26, -4, 28, 21, 26, 13, -6, -44, 67, -106, 25, -77, -52, -22, -3, -26, 49, -41, 12, -57, 2, -52, -53, -50, 25, -5, -8, -20, -19, -11, -10, 13, 9, -15, 8, -4, -1, 73, -4, 7, -30, 9, -26, 19, -48, 0, -23, 9, 10, -4, -5, 2, 3, 9, -37, -16, -37, 28, -19, 22, 12, -33, 29, -14, -25, -4, 4, -62, -15, 29, -35, 0, -10, -55, -23, 2, -24, 20, 22, -4, 2, 11, -21, 18, -44, -2, -16, -3, -26, -8, -14, 16, 34, -49, 15, 23, -40, -43, -30, -23, -34, -23, 1, -13, 10, 14, -19, 3, -9, -7, 0, -8, 3, -20, -1, -25, -23, -8, -21, 0, -11, -12, 4, -11, -17, -14, -16, 2, 2, 0, -18, -11, -2, 0, -9, -14, 6, 9, -5, -17, 1, -4, -28, 18, -6, 4, 0, -15, -9, 1, 9, 3, 18, 2, -39, 13, -11, 32, -12, 42, 20, 8, -34, -25, 10, 14, 10, -28, -11, -1, 17, 3, 25, -4, -9, 19, 28, -22, 10, -28, -30, 9, -54, 28, 5, -15, 6, -62, -1, 2, 24, -9, 25, -24, -24, 14, -28, -21, -6, 2, 10, 5, 13, -27, 4, -16, 16, -19, -4, 26, 8, 10, 38, -64, -19, -43, 18, 8, -17, -16, 8, 0, -1, -48, -22, -6, -87, 4, -20, -61, 5, -51, -51, 9, 8, 2, -14, 9, -20, -66, -64, 29, 24, -23, -5, 2, -50, -11, 22, -70, -54, -48, 1, 14, 2, -1, 11, -31, -58, 5, -8, 57}

#define TENSOR_CONV2D_39_KERNEL_0_DEC_BITS {6}

#define TENSOR_CONV2D_39_BIAS_0 {-118, 20, -95, -3, 10, -15, -12, -1, -5, 28, 0, -32, 28, -4, -10, -4, -39, -67, -128, -29}

#define TENSOR_CONV2D_39_BIAS_0_DEC_BITS {8}

#define CONV2D_39_BIAS_LSHIFT {1}

#define CONV2D_39_OUTPUT_RSHIFT {6}

#define TENSOR_DENSE_9_KERNEL_0 {17, 11, 14, 8, -14, -34, 7, -17, -23, 9, -28, -26, 11, 15, 10, 11, -31, 7, -19, 10, 4, 17, 4, 3, -14, 8, -27, -26, -4, -4, 12, 15, -21, 11, -30, -27, 12, 9, 9, 12, -26, 2, 4, -9, 13, 6, -7, 6, 8, -17, 18, -6, 11, -2, 16, -12, -11, 11, 3, -36, -6, 10, 3, -8, 4, -6, 12, 7, -6, -17, -17, -29, 4, -2, -25, -22, -3, -31, 7, 6, -29, -49, -20, -44, 5, -77, -61, -47, -44, -67, -52, 2, -68, -73, -45, -70, 5, -36, -29, -37, -16, -32, -18, 12, -25, 8, 13, 18, -28, -4, 14, -13, -10, -26, -23, 7, -14, -35, -17, 8}

#define TENSOR_DENSE_9_KERNEL_0_DEC_BITS {5}

#define TENSOR_DENSE_9_BIAS_0 {-4, -1, -44, -19, 95, 0}

#define TENSOR_DENSE_9_BIAS_0_DEC_BITS {5}

#define DENSE_9_BIAS_LSHIFT {3}

#define DENSE_9_OUTPUT_RSHIFT {7}


/* output q format for each layer */
#define CONV2D_36_INPUT_OUTPUT_DEC 9
#define CONV2D_36_INPUT_OUTPUT_OFFSET 0
#define CONV2D_36_OUTPUT_DEC 7
#define CONV2D_36_OUTPUT_OFFSET 0
#define RE_LU_36_OUTPUT_DEC 7
#define RE_LU_36_OUTPUT_OFFSET 0
#define CONV2D_37_OUTPUT_DEC 5
#define CONV2D_37_OUTPUT_OFFSET 0
#define RE_LU_37_OUTPUT_DEC 5
#define RE_LU_37_OUTPUT_OFFSET 0
#define CONV2D_38_OUTPUT_DEC 3
#define CONV2D_38_OUTPUT_OFFSET 0
#define RE_LU_38_OUTPUT_DEC 3
#define RE_LU_38_OUTPUT_OFFSET 0
#define CONV2D_39_OUTPUT_DEC 3
#define CONV2D_39_OUTPUT_OFFSET 0
#define RE_LU_39_OUTPUT_DEC 3
#define RE_LU_39_OUTPUT_OFFSET 0
#define GLOBAL_MAX_POOLING2D_9_OUTPUT_DEC 3
#define GLOBAL_MAX_POOLING2D_9_OUTPUT_OFFSET 0
#define FLATTEN_9_OUTPUT_DEC 3
#define FLATTEN_9_OUTPUT_OFFSET 0
#define DROPOUT_9_OUTPUT_DEC 3
#define DROPOUT_9_OUTPUT_OFFSET 0
#define DENSE_9_OUTPUT_DEC 1
#define DENSE_9_OUTPUT_OFFSET 0
#define SOFTMAX_9_OUTPUT_DEC 7
#define SOFTMAX_9_OUTPUT_OFFSET 0

/* bias shift and output shift for none-weighted layer */

/* tensors and configurations for each layer */
static int8_t nnom_input_data[192] = {0};

const nnom_shape_data_t tensor_Placeholder_0_dim[] = {64, 3, 1};
const nnom_qformat_param_t tensor_Placeholder_0_dec[] = {9};
const nnom_qformat_param_t tensor_Placeholder_0_offset[] = {0};
const nnom_tensor_t tensor_Placeholder_0 = {
    .p_data = (void*)nnom_input_data,
    .dim = (nnom_shape_data_t*)tensor_Placeholder_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_Placeholder_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_Placeholder_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 3,
    .bitwidth = 8
};

const nnom_io_config_t conv2d_36_input_config = {
    .super = {.name = "conv2d_36_input"},
    .tensor = (nnom_tensor_t*)&tensor_Placeholder_0
};
const int8_t tensor_conv2d_36_kernel_0_data[] = TENSOR_CONV2D_36_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_36_kernel_0_dim[] = {6, 2, 1, 32};
const nnom_qformat_param_t tensor_conv2d_36_kernel_0_dec[] = TENSOR_CONV2D_36_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_36_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_36_kernel_0 = {
    .p_data = (void*)tensor_conv2d_36_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_36_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_36_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_36_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_36_bias_0_data[] = TENSOR_CONV2D_36_BIAS_0;

const nnom_shape_data_t tensor_conv2d_36_bias_0_dim[] = {32};
const nnom_qformat_param_t tensor_conv2d_36_bias_0_dec[] = TENSOR_CONV2D_36_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_36_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_36_bias_0 = {
    .p_data = (void*)tensor_conv2d_36_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_36_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_36_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_36_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_36_output_shift[] = CONV2D_36_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_36_bias_shift[] = CONV2D_36_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_36_config = {
    .super = {.name = "conv2d_36"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_36_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_36_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_36_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_36_bias_shift, 
    .filter_size = 32,
    .kernel_size = {6, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_37_kernel_0_data[] = TENSOR_CONV2D_37_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_37_kernel_0_dim[] = {4, 2, 32, 20};
const nnom_qformat_param_t tensor_conv2d_37_kernel_0_dec[] = TENSOR_CONV2D_37_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_37_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_37_kernel_0 = {
    .p_data = (void*)tensor_conv2d_37_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_37_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_37_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_37_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_37_bias_0_data[] = TENSOR_CONV2D_37_BIAS_0;

const nnom_shape_data_t tensor_conv2d_37_bias_0_dim[] = {20};
const nnom_qformat_param_t tensor_conv2d_37_bias_0_dec[] = TENSOR_CONV2D_37_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_37_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_37_bias_0 = {
    .p_data = (void*)tensor_conv2d_37_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_37_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_37_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_37_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_37_output_shift[] = CONV2D_37_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_37_bias_shift[] = CONV2D_37_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_37_config = {
    .super = {.name = "conv2d_37"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_37_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_37_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_37_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_37_bias_shift, 
    .filter_size = 20,
    .kernel_size = {4, 2},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_38_kernel_0_data[] = TENSOR_CONV2D_38_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_38_kernel_0_dim[] = {2, 1, 20, 20};
const nnom_qformat_param_t tensor_conv2d_38_kernel_0_dec[] = TENSOR_CONV2D_38_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_38_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_38_kernel_0 = {
    .p_data = (void*)tensor_conv2d_38_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_38_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_38_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_38_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_38_bias_0_data[] = TENSOR_CONV2D_38_BIAS_0;

const nnom_shape_data_t tensor_conv2d_38_bias_0_dim[] = {20};
const nnom_qformat_param_t tensor_conv2d_38_bias_0_dec[] = TENSOR_CONV2D_38_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_38_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_38_bias_0 = {
    .p_data = (void*)tensor_conv2d_38_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_38_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_38_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_38_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_38_output_shift[] = CONV2D_38_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_38_bias_shift[] = CONV2D_38_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_38_config = {
    .super = {.name = "conv2d_38"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_38_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_38_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_38_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_38_bias_shift, 
    .filter_size = 20,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};
const int8_t tensor_conv2d_39_kernel_0_data[] = TENSOR_CONV2D_39_KERNEL_0;

const nnom_shape_data_t tensor_conv2d_39_kernel_0_dim[] = {2, 1, 20, 20};
const nnom_qformat_param_t tensor_conv2d_39_kernel_0_dec[] = TENSOR_CONV2D_39_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_39_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_39_kernel_0 = {
    .p_data = (void*)tensor_conv2d_39_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_39_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_39_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_39_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 4,
    .bitwidth = 8
};
const int8_t tensor_conv2d_39_bias_0_data[] = TENSOR_CONV2D_39_BIAS_0;

const nnom_shape_data_t tensor_conv2d_39_bias_0_dim[] = {20};
const nnom_qformat_param_t tensor_conv2d_39_bias_0_dec[] = TENSOR_CONV2D_39_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_conv2d_39_bias_0_offset[] = {0};
const nnom_tensor_t tensor_conv2d_39_bias_0 = {
    .p_data = (void*)tensor_conv2d_39_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_conv2d_39_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_conv2d_39_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_conv2d_39_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t conv2d_39_output_shift[] = CONV2D_39_OUTPUT_RSHIFT;
const nnom_qformat_param_t conv2d_39_bias_shift[] = CONV2D_39_BIAS_LSHIFT;
const nnom_conv2d_config_t conv2d_39_config = {
    .super = {.name = "conv2d_39"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_conv2d_39_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_conv2d_39_bias_0,
    .output_shift = (nnom_qformat_param_t *)&conv2d_39_output_shift, 
    .bias_shift = (nnom_qformat_param_t *)&conv2d_39_bias_shift, 
    .filter_size = 20,
    .kernel_size = {2, 1},
    .stride_size = {1, 1},
    .padding_size = {0, 0},
    .dilation_size = {1, 1},
    .padding_type = PADDING_VALID
};

const nnom_global_pool_config_t global_max_pooling2d_9_config = {
    .super = {.name = "global_max_pooling2d_9"},
    .output_shift = 0,
};

const nnom_flatten_config_t flatten_9_config = {
    .super = {.name = "flatten_9"}
};
const int8_t tensor_dense_9_kernel_0_data[] = TENSOR_DENSE_9_KERNEL_0;

const nnom_shape_data_t tensor_dense_9_kernel_0_dim[] = {20, 6};
const nnom_qformat_param_t tensor_dense_9_kernel_0_dec[] = TENSOR_DENSE_9_KERNEL_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_9_kernel_0_offset[] = {0};
const nnom_tensor_t tensor_dense_9_kernel_0 = {
    .p_data = (void*)tensor_dense_9_kernel_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_9_kernel_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_9_kernel_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_9_kernel_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 2,
    .bitwidth = 8
};
const int8_t tensor_dense_9_bias_0_data[] = TENSOR_DENSE_9_BIAS_0;

const nnom_shape_data_t tensor_dense_9_bias_0_dim[] = {6};
const nnom_qformat_param_t tensor_dense_9_bias_0_dec[] = TENSOR_DENSE_9_BIAS_0_DEC_BITS;
const nnom_qformat_param_t tensor_dense_9_bias_0_offset[] = {0};
const nnom_tensor_t tensor_dense_9_bias_0 = {
    .p_data = (void*)tensor_dense_9_bias_0_data,
    .dim = (nnom_shape_data_t*)tensor_dense_9_bias_0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_dense_9_bias_0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_dense_9_bias_0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_qformat_param_t dense_9_output_shift[] = DENSE_9_OUTPUT_RSHIFT;
const nnom_qformat_param_t dense_9_bias_shift[] = DENSE_9_BIAS_LSHIFT;
const nnom_dense_config_t dense_9_config = {
    .super = {.name = "dense_9"},
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .weight = (nnom_tensor_t*)&tensor_dense_9_kernel_0,
    .bias = (nnom_tensor_t*)&tensor_dense_9_bias_0,
    .output_shift = (nnom_qformat_param_t *)&dense_9_output_shift,
    .bias_shift = (nnom_qformat_param_t *)&dense_9_bias_shift
};

const nnom_softmax_config_t softmax_9_config = {
    .super = {.name = "softmax_9"}
};
static int8_t nnom_output_data[6] = {0};

const nnom_shape_data_t tensor_output0_dim[] = {6};
const nnom_qformat_param_t tensor_output0_dec[] = {SOFTMAX_9_OUTPUT_DEC};
const nnom_qformat_param_t tensor_output0_offset[] = {0};
const nnom_tensor_t tensor_output0 = {
    .p_data = (void*)nnom_output_data,
    .dim = (nnom_shape_data_t*)tensor_output0_dim,
    .q_dec = (nnom_qformat_param_t*)tensor_output0_dec,
    .q_offset = (nnom_qformat_param_t*)tensor_output0_offset,
    .qtype = NNOM_QTYPE_PER_TENSOR,
    .num_dim = 1,
    .bitwidth = 8
};

const nnom_io_config_t output0_config = {
    .super = {.name = "output0"},
    .tensor = (nnom_tensor_t*)&tensor_output0
};
/* model version */
#define NNOM_MODEL_VERSION (10000*0 + 100*4 + 3)

/* nnom model */
static nnom_model_t* nnom_model_create(nnom_status_t *state)
{
	static nnom_model_t model;
	nnom_layer_t* layer[14];

	check_model_version(NNOM_MODEL_VERSION);
	new_model(&model);

	layer[0] = input_s(&conv2d_36_input_config);
	layer[1] = model.hook(conv2d_s(&conv2d_36_config), layer[0]);
	layer[2] = model.active(act_relu(), layer[1]);
	layer[3] = model.hook(conv2d_s(&conv2d_37_config), layer[2]);
	layer[4] = model.active(act_relu(), layer[3]);
	layer[5] = model.hook(conv2d_s(&conv2d_38_config), layer[4]);
	layer[6] = model.active(act_relu(), layer[5]);
	layer[7] = model.hook(conv2d_s(&conv2d_39_config), layer[6]);
	layer[8] = model.active(act_relu(), layer[7]);
	layer[9] = model.hook(global_maxpool_s(&global_max_pooling2d_9_config), layer[8]);
	layer[10] = model.hook(flatten_s(&flatten_9_config), layer[9]);
	layer[11] = model.hook(dense_s(&dense_9_config), layer[10]);
	layer[12] = model.hook(softmax_s(&softmax_9_config), layer[11]);
	layer[13] = model.hook(output_s(&output0_config), layer[12]);
	*state = model_compile(&model, layer[0], layer[13]);
	return &model;
}
#endif // INCLUDE_MODEL

#endif //MODEL_46_NNOM_H